| package |
package := Package name: 'IDB IDE Package Backup'.
package paxVersion: 1;
	basicComment: 'Automatic backup of packages
Version 6a - May 2005
For Version 6 of Dolphin Smalltalk

(C) 2005 Ian Bartholomew
ian@idb.me.uk
Public Domain Freeware
'.

package basicPackageVersion: '6a'.

package basicScriptAt: #postinstall put: 'PackageManager current when: #aboutToSave: send: #onAboutToSavePackage: to: PackageBackup!!'.
package basicScriptAt: #preuninstall put: 'PackageManager current removeEventsTriggeredFor: PackageBackup!!'.

package classNames
	add: #PackageBackup;
	yourself.

package methodNames
	add: #Package -> #savePACBackupTo:;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\Object Arts\Dolphin\Base\Dolphin';
	yourself).

package!

"Class Definitions"!

Object subclass: #PackageBackup
	instanceVariableNames: ''
	classVariableNames: 'BackupFolder'
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!Package methodsFor!

savePACBackupTo: aFolderName 
	| pathname |
	#idbAdded.
	(File exists: self packageFileName) 
		ifTrue: 
			[File createDirectory: aFolderName.
			pathname := File 
						composePath: aFolderName
						stem: (File splitStemFrom: self packageFileName) , ' ' , Time now asMilliseconds printString
						extension: self class packageExtension.
			File copy: self packageFileName to: pathname]! !
!Package categoriesFor: #savePACBackupTo:!helpers!idb goodies!public! !

"End of package definition"!

