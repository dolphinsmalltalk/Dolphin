"Filed out from Dolphin Smalltalk 7"!

Win32Structure subclass: #ICONDIR
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ICONDIR guid: (GUID fromString: '{b5be1f5b-e245-4cdf-b274-b6609ab85b23}')!
ICONDIR comment: 'See [DolphinImageFolder]/Idb/Documentation for details

(C) 2005 Ian Bartholomew
ian@idb.me.uk
Public Domain Freeware'!
!ICONDIR categoriesForClass!IDB Goodies! !
!ICONDIR methodsFor!

idCount
	"Answer the <Integer> value of the receiver's 'idCount' field."

	^bytes wordAtOffset: ##(self offsetOf: #idCount)!

idCount: anInteger
	"Set the receiver's 'idCount' field to the value of the argument, anInteger"

	bytes wordAtOffset: ##(self offsetOf: #idCount) put: anInteger!

idEntries
	"Answer the <StructureArray> value of the receiver's 'idEntries' field."

	^StructureArray
		fromAddress: bytes yourAddress + ##(self offsetOf: #idEntries)
		length: self idCount
		elementClass: ICONDIRENTRY!

idEntries: aStructureArrayOfICONDIRENTRY
	"Set the receiver's 'idEntries' field to the value of the argument, aStructureArrayOfICONDIRENTRY"

	| size |
	size := aStructureArrayOfICONDIRENTRY byteSize.
	aStructureArrayOfICONDIRENTRY
		replaceBytesOf: bytes
		from: ##((self offsetOf: #idEntries) + 1)
		to: ##(self offsetOf: #idEntries) + size
		startingAt: 1.
	self idCount: aStructureArrayOfICONDIRENTRY size!

idReserved
	"Answer the <Integer> value of the receiver's 'idReserved' field."

	^bytes wordAtOffset: 0!

idType
	"Answer the <Integer> value of the receiver's 'idType' field."

	^bytes wordAtOffset: ##(self offsetOf: #idType)!

idType: anInteger
	"Set the receiver's 'idType' field to the value of the argument, anInteger"

	bytes wordAtOffset: ##(self offsetOf: #idType) put: anInteger! !
!ICONDIR categoriesFor: #idCount!**compiled accessors**!public! !
!ICONDIR categoriesFor: #idCount:!**compiled accessors**!public! !
!ICONDIR categoriesFor: #idEntries!**compiled accessors**!public! !
!ICONDIR categoriesFor: #idEntries:!**compiled accessors**!public! !
!ICONDIR categoriesFor: #idReserved!**compiled accessors**!public! !
!ICONDIR categoriesFor: #idType!**compiled accessors**!public! !
!ICONDIR categoriesFor: #idType:!**compiled accessors**!public! !

!ICONDIR class methodsFor!

defineFields
	" ICONDIR compileDefinition 
	ALWAY precompile because of var struct!!!! "

	self
		defineField: #idReserved type: WORDField readOnly;
		defineField: #idType type: WORDField new;
		defineField: #idCount type: WORDField new;
		defineField: #idEntries
			type: (StructureArrayField type: ICONDIRENTRY
					arrayLength: (ConformantArrayFieldLength lengthField: #idCount))!

for: anInteger
	"Create an ICONDIR using this method and not new as we need to know
	how many bytes to allocate for the var struct"

	^self new: self byteSize + ((anInteger - 1) * ICONDIRENTRY byteSize)!

getFieldNames
	^#(#idReserved #idType #idCount #idEntries)!

packing
	^1! !
!ICONDIR class categoriesFor: #defineFields!initializing!public! !
!ICONDIR class categoriesFor: #for:!instance creation!public! !
!ICONDIR class categoriesFor: #getFieldNames!**compiled accessors**!constants!private! !
!ICONDIR class categoriesFor: #packing!constants!public! !

