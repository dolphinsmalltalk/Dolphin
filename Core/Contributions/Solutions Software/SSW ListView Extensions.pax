| package |
package := Package name: 'SSW ListView Extensions'.
package paxVersion: 1;
	basicComment: '© Solutions Software/John Aspinall 2018
Provided under the same licence terms as Dolphin Smalltalk 7'.

package basicPackageVersion: '7.1.0'.


package classNames
	add: #ColumnHeader;
	add: #HDITEMW;
	add: #HeaderView;
	yourself.

package methodNames
	add: #ListView -> #fullItemFromPoint:;
	add: #ListView -> #getHeaderControl;
	add: #ListView -> #headerControl;
	add: #ListView -> #headerRect;
	add: #ListView -> #hideToolTipWindow;
	add: #ListView -> #horzScrollBy:;
	add: #ListView -> #horzScrollPos;
	add: #ListView -> #horzScrollPos:;
	add: #ListView -> #lvmGetItemCount;
	add: #ListView -> #lvmGetToolTips;
	add: #ListView -> #lvmGetTopIndex;
	add: #ListView -> #maxTipWidth:;
	add: #ListView -> #rowPixelHeight;
	add: #ListView -> #smallImageExtent;
	add: #ListView -> #themePartName;
	add: #ListView -> #vertScrollBy:;
	add: #ListView -> #vertScrollPos;
	add: #ListView -> #vertScrollPos:;
	add: #ListViewColumn -> #columnHeader;
	yourself.

package globalNames
	add: #HeaderViewConstants;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\..\Object Arts\Dolphin\Base\Dolphin';
	add: '..\..\Object Arts\Dolphin\MVP\Base\Dolphin Basic Geometry';
	add: '..\..\Object Arts\Dolphin\MVP\Views\Common Controls\Dolphin Common Controls';
	add: '..\..\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base';
	yourself).

package!

"Class Definitions"!

Object subclass: #ColumnHeader
	instanceVariableNames: 'parent index dropDownMenu'
	classVariableNames: ''
	poolDictionaries: 'HeaderViewConstants'
	classInstanceVariableNames: ''!
CCITEM subclass: #HDITEMW
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ControlView subclass: #HeaderView
	instanceVariableNames: 'columnHeaders'
	classVariableNames: 'HdnMap'
	poolDictionaries: 'HeaderViewConstants'
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!ListView methodsFor!

fullItemFromPoint: coord
	"Private - Answer a LVHITTESTINFO populated by the control  for the
	client coordinate represented by the <POINTL>, coord."

	| struct |
	struct := LVHITTESTINFO new.
	struct pt: coord asParameter.
	self sendMessage: LVM_SUBITEMHITTEST wParam: 0 lpParam: struct.
	^struct!

getHeaderControl

	| hHandle |

	hHandle := self lvmGetHeader.

	^(HeaderView fromHandle: hHandle)
		subclassWindow: hHandle;
		isManaged: false;
		yourself
!

headerControl

	^self propertyAt: #headerControl ifAbsent: [self propertyAt: #headerControl put: self getHeaderControl]!

headerRect

	| rect |

	rect := RECT new.

	UserLibrary default getWindowRect: self lvmGetHeader lpRect: rect.

	^rect
!

hideToolTipWindow

	self lvmGetToolTips ifNotNil: [ :hwnd | UserLibrary default showWindow: hwnd nCmdShow: SW_HIDE]!

horzScrollBy: anInteger

	self sendMessage: LVM_SCROLL wParam: anInteger!

horzScrollPos

	| struct |

	struct := SCROLLINFO new maskIn: SIF_POS; yourself.

	self view getScrollInfo: struct bar: SB_HORZ.

	^struct pos!

horzScrollPos: anInteger

	self horzScrollBy: (anInteger - self horzScrollPos)!

lvmGetItemCount

	^self sendMessage: LVM_GETITEMCOUNT!

lvmGetToolTips

	^self sendMessage: LVM_GETTOOLTIPS!

lvmGetTopIndex

	^self sendMessage: LVM_GETTOPINDEX!

maxTipWidth: anInteger
	"Set the width of the receiver's tool tip window. Note it is necessary to set a width to enable multi-line tips"

	self lvmGetToolTips
		ifNotNil: 
			[:hwnd |
			UserLibrary default
				sendMessage: hwnd
				msg: TooltipConstants.TTM_SETMAXTIPWIDTH
				wParam: 0
				lParam: anInteger]!

rowPixelHeight

	"Estimated"

	^(self smallImageExtent y + 1) max: (self actualFont pixelSize + 9)!

smallImageExtent

	^Icon smallExtent!

themePartName

	^#LISTVIEW!

vertScrollBy: anInteger

	self sendMessage: LVM_SCROLL wParam: 0 lParam: anInteger!

vertScrollPos

	| struct |

	struct := SCROLLINFO new maskIn: SIF_POS; yourself.

	self view getScrollInfo: struct bar: SB_VERT.

	^struct pos!

vertScrollPos: anInteger

	self vertScrollBy: (anInteger - self vertScrollPos)! !
!ListView categoriesFor: #fullItemFromPoint:!accessing!private! !
!ListView categoriesFor: #getHeaderControl!accessing!private! !
!ListView categoriesFor: #headerControl!accessing!public! !
!ListView categoriesFor: #headerRect!accessing!public! !
!ListView categoriesFor: #hideToolTipWindow!operations!public! !
!ListView categoriesFor: #horzScrollBy:!enquiries!public! !
!ListView categoriesFor: #horzScrollPos!enquiries!public! !
!ListView categoriesFor: #horzScrollPos:!enquiries!public! !
!ListView categoriesFor: #lvmGetItemCount!accessing!public! !
!ListView categoriesFor: #lvmGetToolTips!accessing!public! !
!ListView categoriesFor: #lvmGetTopIndex!accessing!public! !
!ListView categoriesFor: #maxTipWidth:!helpers!public! !
!ListView categoriesFor: #rowPixelHeight!helpers!public! !
!ListView categoriesFor: #smallImageExtent!accessing!private! !
!ListView categoriesFor: #themePartName!constants!public! !
!ListView categoriesFor: #vertScrollBy:!enquiries!public! !
!ListView categoriesFor: #vertScrollPos!enquiries!public! !
!ListView categoriesFor: #vertScrollPos:!enquiries!public! !

!ListViewColumn methodsFor!

columnHeader

	^self parent headerControl columnHeader: self index! !
!ListViewColumn categoriesFor: #columnHeader!accessing!public! !

"End of package definition"!

