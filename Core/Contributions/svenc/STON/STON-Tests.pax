| package |
package := Package name: 'STON-Tests'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{STON.Tests}
	#{STON.Tests.CStyleCommentsSkipStreamTest}
	#{STON.Tests.IdentityBag}
	#{STON.Tests.JSONTest}
	#{STON.Tests.LargeWriteReadTest}
	#{STON.Tests.ReaderTest}
	#{STON.Tests.STONTest}
	#{STON.Tests.STONTestCase}
	#{STON.Tests.STONTestUser}
	#{STON.Tests.STONTestUser2}
	#{STON.Tests.STONTestUser3}
	#{STON.Tests.TestAssociation}
	#{STON.Tests.TestDomainObject}
	#{STON.Tests.TestKnownObject}
	#{STON.Tests.TestMap}
	#{STON.Tests.UUID}
	#{STON.Tests.WriteAsciiOnlyReadTest}
	#{STON.Tests.WritePrettyPrinterReadTest}
	#{STON.Tests.WriteReadCommentsTest}
	#{STON.Tests.WriteReadTest}
	#{STON.Tests.WriterTest}
).

package setMethodNames: #(
	#(#{Core.Date} #translateTo:)
	#(#{Core.Date} #translateToUTC)
).

package setPrerequisites: #(
	'..\..\..\Object Arts\Dolphin\Base\Dolphin'
	'..\..\..\Object Arts\Dolphin\Base\Dolphin Anonymous Classes'
	'..\..\..\Object Arts\Dolphin\MVP\Base\Dolphin Basic Geometry'
	'..\..\..\Object Arts\Dolphin\Base\Dolphin Collection Arithmetic'
	'..\..\..\Object Arts\Dolphin\MVP\Graphics\Dolphin GDI Graphics'
	'..\..\..\Object Arts\Dolphin\Base\Dolphin Legacy Date & Time'
	'..\..\..\Object Arts\Dolphin\System\STON\Dolphin STON-Core'
	'..\..\..\Object Arts\Dolphin\System\STON\Dolphin STON-Json'
	'..\..\Camp Smalltalk\SUnit\SUnit'
	'..\..\Camp Smalltalk\SUnit\SUnitPreload'
).

package setManualPrerequisites: #(
	'Dolphin Anonymous Classes'
	'Dolphin Collection Arithmetic'
).

package!

"Class Definitions"!

STON
	subclass: #'STON.Tests'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{Graphics} #{XProgramming.SUnit})
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Object
	subclass: #'STON.Tests.STONTestUser'
	instanceVariableNames: 'username password enabled'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Object
	subclass: #'STON.Tests.TestDomainObject'
	instanceVariableNames: 'created modified integer float description color tags bytes boolean'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Object
	subclass: #'STON.Tests.TestKnownObject'
	instanceVariableNames: 'id description'
	classVariableNames: 'KnownObjects'
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Bag
	subclass: #'STON.Tests.IdentityBag'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Dictionary
	variableSubclass: #'STON.Tests.TestMap'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.GUID
	variableByteSubclass: #'STON.Tests.UUID'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Association
	subclass: #'STON.Tests.TestAssociation'
	instanceVariableNames: 'timestamp'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.STONTestUser
	subclass: #'STON.Tests.STONTestUser2'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.STONTestUser
	subclass: #'STON.Tests.STONTestUser3'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
XProgramming.SUnit.TestCase
	subclass: #'STON.Tests.CStyleCommentsSkipStreamTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
XProgramming.SUnit.TestCase
	subclass: #'STON.Tests.STONTestCase'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.STONTestCase
	subclass: #'STON.Tests.JSONTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.STONTestCase
	subclass: #'STON.Tests.ReaderTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.STONTestCase
	subclass: #'STON.Tests.STONTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.STONTestCase
	subclass: #'STON.Tests.WriteReadTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.STONTestCase
	subclass: #'STON.Tests.WriterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.WriteReadTest
	subclass: #'STON.Tests.LargeWriteReadTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.WriteReadTest
	subclass: #'STON.Tests.WriteAsciiOnlyReadTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.WriteReadTest
	subclass: #'STON.Tests.WritePrettyPrinterReadTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
STON.Tests.WriteReadTest
	subclass: #'STON.Tests.WriteReadCommentsTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!Core.Date methodsFor!

translateTo: aDuration
	"Private - This probably isn't correct, but then Dolphin's legacy Dates are not TZ aware. This is implemented purely to make the STON tests pass."

	^(DateAndTime
		year: self year
		day: self dayOfYear
		offset: aDuration) asLocal asDate!

translateToUTC
	"Private - This probably isn't correct, but then Dolphin's legacy Dates are not TZ aware. This is implemented purely to make the STON tests pass."

	^self translateTo: 0 seconds! !
!Core.Date categoriesForMethods!
translateTo:!private! !
translateToUTC!private! !
!

"End of package definition"!

