| package |
package := Package name: 'Seeing the Objects Inside'.
package paxVersion: 1;
	preDeclareClassesOnLoad: false;
	basicComment: ''.

package basicScriptAt: #postinstall put: 'Smalltalk developmentSystem aboutBoxClass: DolphinSplash'.
package basicScriptAt: #preuninstall put: '| devsys |
devsys := Smalltalk developmentSystem.
devsys aboutBoxClass == DolphinSplash ifTrue: [devsys aboutBoxClass: nil]'.

package classNames
	add: #DolphinSplash;
	add: #ObjectInside;
	add: #SeeingTheObjectsInside;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Development System'
	'..\..\..\Base\Dolphin'
	'..\..\..\MVP\Base\Dolphin Basic Geometry'
	'..\..\..\Base\Dolphin Message Box'
	'..\..\..\MVP\Base\Dolphin MVP Base'
	'..\..\..\System\Random\Dolphin Random Stream'
	'..\..\..\MVP\Views\Tooltips\Dolphin Tooltips'
	'..\..\..\MVP\Gdiplus\Gdiplus').

package!

"Class Definitions"!

Object subclass: #ObjectInside
	instanceVariableNames: 'image edgePoints position scale rotation color baseColor matrix centerOffset baseScale attributes'
	classVariableNames: 'EdgePointResolution'
	poolDictionaries: 'GdiplusConstants'
	classInstanceVariableNames: ''!

AbstractSplash subclass: #DolphinSplash
	instanceVariableNames: 'objectsInside'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

GdiplusDoubleBufferedView subclass: #SeeingTheObjectsInside
	instanceVariableNames: 'insideObjectsScale background cachedBackground sun stepProcess random dolphinIntensity dolphinInside splashDelay hintBubble startTime scale originalBitmapDips renderBlock'
	classVariableNames: 'DolphinBackColor DolphinInsideBaseColor DolphinInsideIntensityColor DolphinInsideIntensityPeriod DolphinInsideIntensityTime DolphinMaxInitialScale DolphinMinInitialScale FrameRate InsideObjectExpandingPeriod InsideObjectMaxScale InsideObjectMinScale MajorVersionColor TitleTextColor'
	poolDictionaries: 'GdiplusConstants'
	classInstanceVariableNames: 'splashPlayTheGame'!

"End of package definition"!

