| package |
package := Package name: 'Dolphin Change Objects'.
package paxVersion: 2.1;
	environmentName: #{Tools};
	basicComment: 'Dolphin Smalltalk Development Change Objects.
    Copyright (c) Object Arts Ltd, 1997-2021. Portions Copyright (c) CGI Group (Europe) Ltd, 1997.
'.


package setClassNames: #(
	#{Tools.AddClassConstantChange}
	#{Tools.AddImportChange}
	#{Tools.AddSharedVariableChange}
	#{Tools.MoveClassChange}
	#{Tools.RemoveClassConstantChange}
	#{Tools.RemoveImportChange}
	#{Tools.RemoveSharedVariableChange}
	#{Tools.ReplaceImportChange}
	#{Tools.SharedVariableChange}
).

package setMethodNames: #(
	#(#{Refactory.Browser.AddMethodChange class} #new)
	#(#{Refactory.Browser.CompositeRefactoryChange} #addClassConstant:to:)
	#(#{Refactory.Browser.CompositeRefactoryChange} #addImport:to:)
	#(#{Refactory.Browser.CompositeRefactoryChange} #removeClassConstant:from:)
	#(#{Refactory.Browser.CompositeRefactoryChange} #removeImport:from:)
	#(#{Refactory.Browser.CompositeRefactoryChange} #replaceImport:with:in:)
).

package setPrerequisites: #(
	'..\..\Base\Dolphin'
	'..\..\..\..\Contributions\Refactory\Refactoring Browser\Change Objects\RBChangeObjects'
).

package!

"Class Definitions"!

Refactory.Browser.RefactoryChange subclass: #'Tools.SharedVariableChange'
	instanceVariableNames: 'variable environmentName'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.RefactoryClassChange subclass: #'Tools.MoveClassChange'
	instanceVariableNames: 'superclassName'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.RefactoryClassChange subclass: #'Tools.ReplaceImportChange'
	instanceVariableNames: 'oldImport newImport'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.RefactoryVariableChange subclass: #'Tools.AddClassConstantChange'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.RefactoryVariableChange subclass: #'Tools.AddImportChange'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.RefactoryVariableChange subclass: #'Tools.RemoveClassConstantChange'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.RefactoryVariableChange subclass: #'Tools.RemoveImportChange'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Tools.SharedVariableChange subclass: #'Tools.AddSharedVariableChange'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Tools.SharedVariableChange subclass: #'Tools.RemoveSharedVariableChange'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!Refactory.Browser.AddMethodChange class methodsFor!

new
	^self basicNew initialize! !
!Refactory.Browser.AddMethodChange class categoriesForMethods!
new!instance creation!public! !
!

!Refactory.Browser.CompositeRefactoryChange methodsFor!

addClassConstant: aVariableBinding to: aRBClass
	^self addChange: (AddClassConstantChange add: aVariableBinding to: aRBClass)!

addImport: aBindingReference to: aClass
	^self addChange: (AddImportChange add: aBindingReference to: aClass)!

removeClassConstant: aVariableBinding from: aClass
	^self addChange: (RemoveClassConstantChange remove: aVariableBinding from: aClass)!

removeImport: aBindingReference from: aRBClass
	^self addChange: (RemoveImportChange remove: aBindingReference from: aRBClass)!

replaceImport: oldBindingReference with: newBindingReference in: aRBClass
	^self addChange: (ReplaceImportChange
				replaceImport: oldBindingReference
				with: newBindingReference
				in: aRBClass)! !
!Refactory.Browser.CompositeRefactoryChange categoriesForMethods!
addClassConstant:to:!adding!private! !
addImport:to:!adding!public! !
removeClassConstant:from:!adding!public! !
removeImport:from:!adding!public! !
replaceImport:with:in:!adding!public! !
!

"End of package definition"!

