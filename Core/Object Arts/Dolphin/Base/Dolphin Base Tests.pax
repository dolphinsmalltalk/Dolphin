| package |
package := Package name: 'Dolphin Base Tests'.
package paxVersion: 1;
	basicComment: ''.


package classNames
	add: #AbstractDictionaryTest;
	add: #AbstractFileStreamTest;
	add: #AbstractStringTest;
	add: #AlwaysSearchPolicyTest;
	add: #AnsiStringTest;
	add: #ArrayedCollectionTest;
	add: #ArrayTest;
	add: #BagTest;
	add: #BehaviorTest;
	add: #BehaviorTestClasses;
	add: #BlockClosureTest;
	add: #BooleanTest;
	add: #ByteArrayTest;
	add: #CaseInsensitiveSearchPolicyTest;
	add: #CharacterTest;
	add: #ClassBuilderTestClasses;
	add: #ClassBuilderTests;
	add: #ClassTest;
	add: #CollectionCombinator;
	add: #CommandLineTest;
	add: #CommandLineTestRunner;
	add: #DateTest;
	add: #DefaultSortAlgorithmTest;
	add: #DictionaryTest;
	add: #DiskVolumeInformationTest;
	add: #DolphinCollectionTest;
	add: #DolphinTest;
	add: #DolphinTestClassResource;
	add: #DolphinTestPackages;
	add: #DolphinTestResource;
	add: #DOUBLEArrayTest;
	add: #DWORDArrayTest;
	add: #EqualitySearchPolicyTest;
	add: #EventMessageSendTest;
	add: #ExceptionTesterClasses;
	add: #ExternalAddressTest;
	add: #ExternalArrayTest;
	add: #ExternalDescriptorTest;
	add: #ExternalLibraryTest;
	add: #ExternalStructureTest;
	add: #FalseTest;
	add: #FileLocatorTest;
	add: #FileStreamTest;
	add: #FileTest;
	add: #FILETIMETest;
	add: #FLOATArrayTest;
	add: #FloatTest;
	add: #GenericExternalArrayTest;
	add: #GUIDTest;
	add: #HeapsortAlgorithmTest;
	add: #IdentityDictionaryTest;
	add: #IdentitySearchPolicyTest;
	add: #InsertionSortAlgorithmTest;
	add: #IntegerTest;
	add: #IntervalTest;
	add: #IntrosortAlgorithmTest;
	add: #LargeIntegerTest;
	add: #LookupTableTest;
	add: #MemoryManagerTest;
	add: #MergesortAlgorithmTest;
	add: #MethodDictionaryTest;
	add: #MultiByteStringTest;
	add: #MustBeBooleanTestClasses;
	add: #NeverSearchPolicyTest;
	add: #NumberTest;
	add: #ObjectTest;
	add: #OrderedCollectionTest;
	add: #PackageTest;
	add: #PoolConstantsDictionaryTest;
	add: #PositionableStreamTest;
	add: #ProcessTest;
	add: #QuicksortAlgorithmTest;
	add: #ReadStreamTest;
	add: #ReadWriteStreamTest;
	add: #RunArrayTest;
	add: #SDWORDArrayTest;
	add: #SearchPolicyTest;
	add: #SemaphoreTest;
	add: #SequenceableCollectionTest;
	add: #SequencedGrowableCollectionTest;
	add: #SessionManagerTest;
	add: #SetTest;
	add: #ShellsortAlgorithmTest;
	add: #ShlwapiLibraryTest;
	add: #SignalTest;
	add: #SmallIntegerTest;
	add: #SortAlgorithmTest;
	add: #SortedCollectionTest;
	add: #StableSortAlgorithmTest;
	add: #STBTest;
	add: #StdioFileStreamTest;
	add: #StreamTest;
	add: #StructureArrayTest;
	add: #SWORDArrayTest;
	add: #SymbolTest;
	add: #TestRunConsoleLogger;
	add: #TestRunLogger;
	add: #TimeStampTest;
	add: #TimeTest;
	add: #TrueTest;
	add: #UndefinedObjectTest;
	add: #Utf16StringTest;
	add: #Utf8StringTest;
	add: #WORDArrayTest;
	add: #WriteStreamTest;
	yourself.

package methodNames
	add: #SmalltalkSystem -> #baselinedSlowTests;
	add: #SmalltalkSystem -> #regressionTestsLogFilename;
	add: #SmalltalkSystem -> #regressionTestSuite;
	add: #SmalltalkSystem -> #runRegressionTests;
	add: #SmalltalkSystem -> #runRegressionTests:logTo:verbose:;
	add: #SmalltalkSystem -> #setTestAttributes:id:name:duration:tests:failures:errors:skipped:;
	add: #SmalltalkSystem -> #writeJunitTestLog:result:;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\System\Trace\Debug Trace Stream'
	'..\IDE\Base\Development System'
	'Dolphin'
	'Dolphin Additional Sort Algorithms'
	'Dolphin Command-line Parser'
	'..\System\Random\Dolphin CRT Random Stream'
	'Dolphin Message Box'
	'..\System\Random\Dolphin Random Stream'
	'..\System\Compiler\Smalltalk Parser'
	'..\..\..\Contributions\Camp Smalltalk\SUnit\SUnit'
	'..\ActiveX\Components\XML DOM\XML DOM').

package!

"Class Definitions"!

Object subclass: #CollectionCombinator
	instanceVariableNames: 'resultProcessingBlock collectionOfArrays buffer'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #CommandLineTestRunner
	instanceVariableNames: 'results lastCase loggers verbose'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #TestRunLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestCase subclass: #CommandLineTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestCase subclass: #DolphinTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #BagTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #BehaviorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #BlockClosureTest
	instanceVariableNames: 'x'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #BooleanTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #CharacterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #ClassBuilderTests
	instanceVariableNames: 'wasOAD'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #ClassTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #DateTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #DiskVolumeInformationTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #DolphinCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #EventMessageSendTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #ExternalAddressTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #ExternalArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #ExternalDescriptorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'ExtCallArgTypes'
	classInstanceVariableNames: ''!
DolphinTest subclass: #ExternalLibraryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #ExternalStructureTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #FalseTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #FileLocatorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #FileTest
	instanceVariableNames: 'tempFile'
	classVariableNames: ''
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''!
DolphinTest subclass: #FILETIMETest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #FloatTest
	instanceVariableNames: 'fpeMask'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #GUIDTest
	instanceVariableNames: ''
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #IntegerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #MemoryManagerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #NumberTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #ObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #PackageTest
	instanceVariableNames: 'loadedPackages checkTimestamps'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #ProcessTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #SearchPolicyTest
	instanceVariableNames: 'policy'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #SemaphoreTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #SessionManagerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #ShlwapiLibraryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #SignalTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #SortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #STBTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #StreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #TimeStampTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #TimeTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #TrueTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTest subclass: #UndefinedObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinCollectionTest subclass: #AbstractDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinCollectionTest subclass: #SequenceableCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinCollectionTest subclass: #SetTest
	instanceVariableNames: 'primes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractDictionaryTest subclass: #DictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractDictionaryTest subclass: #LookupTableTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractDictionaryTest subclass: #MethodDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractDictionaryTest subclass: #PoolConstantsDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LookupTableTest subclass: #IdentityDictionaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SequenceableCollectionTest subclass: #ArrayedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SequenceableCollectionTest subclass: #IntervalTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SequenceableCollectionTest subclass: #SequencedGrowableCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ArrayedCollectionTest subclass: #AbstractStringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ArrayedCollectionTest subclass: #ArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ArrayedCollectionTest subclass: #ByteArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ArrayedCollectionTest subclass: #RunArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractStringTest subclass: #AnsiStringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractStringTest subclass: #MultiByteStringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractStringTest subclass: #SymbolTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
MultiByteStringTest subclass: #Utf16StringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
MultiByteStringTest subclass: #Utf8StringTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SequencedGrowableCollectionTest subclass: #OrderedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OrderedCollectionTest subclass: #SortedCollectionTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ExternalArrayTest subclass: #DOUBLEArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ExternalArrayTest subclass: #DWORDArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ExternalArrayTest subclass: #FLOATArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ExternalArrayTest subclass: #GenericExternalArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ExternalArrayTest subclass: #SDWORDArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ExternalArrayTest subclass: #SWORDArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ExternalArrayTest subclass: #WORDArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
GenericExternalArrayTest subclass: #StructureArrayTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IntegerTest subclass: #LargeIntegerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IntegerTest subclass: #SmallIntegerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SearchPolicyTest subclass: #AlwaysSearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SearchPolicyTest subclass: #CaseInsensitiveSearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SearchPolicyTest subclass: #EqualitySearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SearchPolicyTest subclass: #IdentitySearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SearchPolicyTest subclass: #NeverSearchPolicyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SortAlgorithmTest subclass: #DefaultSortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SortAlgorithmTest subclass: #HeapsortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SortAlgorithmTest subclass: #IntrosortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SortAlgorithmTest subclass: #QuicksortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SortAlgorithmTest subclass: #ShellsortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SortAlgorithmTest subclass: #StableSortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StableSortAlgorithmTest subclass: #InsertionSortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StableSortAlgorithmTest subclass: #MergesortAlgorithmTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StreamTest subclass: #PositionableStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
PositionableStreamTest subclass: #ReadStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
PositionableStreamTest subclass: #ReadWriteStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
PositionableStreamTest subclass: #WriteStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ReadWriteStreamTest subclass: #AbstractFileStreamTest
	instanceVariableNames: 'tempFileName filestream'
	classVariableNames: 'RandomData1 RandomData2'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractFileStreamTest subclass: #FileStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractFileStreamTest subclass: #StdioFileStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestResource subclass: #DolphinTestResource
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTestResource subclass: #DolphinTestClassResource
	instanceVariableNames: 'package'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTestResource subclass: #DolphinTestPackages
	instanceVariableNames: 'a b c'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTestClassResource subclass: #BehaviorTestClasses
	instanceVariableNames: 'classWithAbstractMethod1 classWithAbstractMethod2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTestClassResource subclass: #ClassBuilderTestClasses
	instanceVariableNames: 'testClass testSubclass1 testSubclass2 testPool1 testPool2 testPool3'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTestClassResource subclass: #ExceptionTesterClasses
	instanceVariableNames: 'testNotificationClass resumableErrorClass testErrorClass'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DolphinTestClassResource subclass: #MustBeBooleanTestClasses
	instanceVariableNames: 'trueClass falseClass'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
TestRunLogger subclass: #TestRunConsoleLogger
	instanceVariableNames: 'stream timings'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!SmalltalkSystem methodsFor!

baselinedSlowTests
	| laggards |
	laggards := Set new.
	#(#(#ReferenceFinderTest #(#testAllPaths #testAllPathsToInstance #testNotFound)) #(#BrowserEnvironmentTest #(#testOrEnvironment)) #(#IdeaSpaceShellTest #(#testSaveRestore)) #(#RenameClassTest #(#testModelRenameClass)))
		do: 
			[:each |
			Smalltalk at: each first
				ifPresent: [:test | each second do: [:selector | laggards add: (test selector: selector)]]].
	^laggards!

regressionTestsLogFilename
	"Answer the name of the file in which to log test results, or nil to have the output sent to stdout"

	^nil
	"^File default: SessionManager current imagePath extension: 'testlog'"!

regressionTestSuite
	| suite |
	suite := TestSuite named: 'RegressionTests'.
	suite addTests: TestCase buildSuite allTests asSortedCollection.
	^suite!

runRegressionTests
	| suite filename |
	filename := self regressionTestsLogFilename.
	suite := self regressionTestSuite.
	^filename isNil
		ifTrue: 
			[self
				runRegressionTests: suite
				logTo: SessionManager current stdout
				verbose: true]
		ifFalse: 
			[| logStream |
			logStream := FileStream write: filename.
			
			[self
				runRegressionTests: suite
				logTo: logStream
				verbose: true]
					ensure: [logStream close]]!

runRegressionTests: aTestSuite logTo: logStream verbose: aBoolean
	| result |
	result := (CommandLineTestRunner new)
				addLogger: (TestRunConsoleLogger on: logStream);
				verbose: aBoolean;
				runSuite: aTestSuite knownSlowTests: self baselinedSlowTests.
	self writeJunitTestLog: aTestSuite result: result.
	^result!

setTestAttributes: suitesNode id: idInteger name: suiteName duration: durationInteger tests: testsInteger failures: failuresInteger errors: errorsInteger skipped: skippedInteger
	| stream attribs |
	attribs := suitesNode attributes.
	idInteger ifNotNil: [attribs at: 'id' put: idInteger].
	stream := String writeStream.
	durationInteger / 1.0e6 printOn: stream decimalPlaces: 6.
	attribs
		at: 'name' put: suiteName;
		at: 'tests' put: testsInteger displayString;
		at: 'errors' put: errorsInteger displayString;
		at: 'failures' put: failuresInteger displayString;
		at: 'skipped' put: skippedInteger displayString;
		at: 'time' put: stream contents;
		free!

writeJunitTestLog: aTestSuite result: aTestResult
	| doc suitesNode currentId currentClass suiteNode classTests classErrors classFailures classSkipped classElapsed caseAttribs suiteName testsInteger errorsInteger failuresInteger skippedInteger durationInteger |
	suiteName := aTestSuite name ?? 'RegressionTests'.
	doc := IXMLDOMDocument3 new.
	suitesNode := doc addElement: 'testsuites'.
	durationInteger := aTestResult duration.
	testsInteger := aTestResult runCount.
	errorsInteger := aTestResult errorCount.
	failuresInteger := aTestResult failureCount.
	skippedInteger := aTestResult skippedCount.
	self
		setTestAttributes: suitesNode
		id: nil
		name: suiteName
		duration: durationInteger
		tests: testsInteger
		failures: failuresInteger
		errors: errorsInteger
		skipped: skippedInteger.
	currentId := classTests := classErrors := classFailures := classSkipped := classElapsed := 0.
	currentClass := nil.
	suiteNode := nil.
	(aTestResult results asSortedCollection: [:a :b | a case <= b case]) do: 
			[:each |
			| caseNode outcome |
			each case class == currentClass
				ifFalse: 
					[suiteNode
						ifNotNil: 
							[self
								setTestAttributes: suiteNode
								id: currentId
								name: currentClass name
								duration: classElapsed
								tests: classTests
								failures: classFailures
								errors: classErrors
								skipped: classSkipped.
							suiteNode free].
					currentClass := each case class.
					classTests := classErrors := classFailures := classSkipped := classElapsed := 0.
					suiteNode := suitesNode addElement: 'testsuite'.
					currentId := currentId + 1].
			classTests := classTests + 1.
			classElapsed := classElapsed + each duration.
			caseNode := suiteNode addElement: 'testcase'.
			caseAttribs := caseNode attributes.
			caseAttribs
				at: 'name' put: each case selector;
				at: 'classname' put: currentClass name.
			outcome := each outcome.
			outcome == #passed
				ifTrue: 
					[| time |
					time := String writeStream.
					each duration / 1.0e6 printOn: time decimalPlaces: 6.
					caseAttribs at: 'time' put: time contents].
			outcome == #error
				ifTrue: 
					[| errorNode |
					classErrors := classErrors + 1.
					errorNode := caseNode addElement: 'error'.
					errorNode attributes
						at: 'message' put: each signal description;
						at: 'type' put: each signal class name;
						free.
					errorNode text: each stacktrace.
					errorNode free].
			outcome == #failed
				ifTrue: 
					[| failureNode |
					classFailures := classFailures + 1.
					failureNode := caseNode addElement: 'failure'.
					failureNode attributes
						at: 'message' put: each signal description;
						at: 'type' put: each signal class name;
						free.
					failureNode text: each stacktrace.
					failureNode free].
			outcome == #skipped
				ifTrue: 
					[| skippedNode |
					classSkipped := classSkipped + 1.
					skippedNode := caseNode addElement: 'skipped'.
					skippedNode attributes
						at: 'message' put: each signal description;
						free.
					skippedNode text: each stacktrace.
					skippedNode free].
			caseAttribs free.
			caseNode free].
	"Add the summary information for the final class"
	self
		setTestAttributes: suiteNode
		id: currentId
		name: currentClass name
		duration: classElapsed
		tests: classTests
		failures: classFailures
		errors: classErrors
		skipped: classSkipped.
	suiteNode free.
	suitesNode free.
	doc save: (File
				composePath: SessionManager current imageBase
				stem: suiteName
				extension: 'xml').
	doc free! !
!SmalltalkSystem categoriesFor: #baselinedSlowTests!accessing!public! !
!SmalltalkSystem categoriesFor: #regressionTestsLogFilename!public!tests! !
!SmalltalkSystem categoriesFor: #regressionTestSuite!private!tests! !
!SmalltalkSystem categoriesFor: #runRegressionTests!public!tests! !
!SmalltalkSystem categoriesFor: #runRegressionTests:logTo:verbose:!public!tests! !
!SmalltalkSystem categoriesFor: #setTestAttributes:id:name:duration:tests:failures:errors:skipped:!helpers!private! !
!SmalltalkSystem categoriesFor: #writeJunitTestLog:result:!helpers!private! !

"End of package definition"!

