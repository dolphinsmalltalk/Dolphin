| package |
package := Package name: 'Dolphin Conformant Array Fields'.
package paxVersion: 1;
	basicComment: 'Dolphin Conformant Array Fields Package.

Contains support for conformant array fields in structures. Conformant array fields are those where the size of the array is variable and defined by another field in the structure.'.


package classNames
	add: #ConformantArrayFieldLength;
	yourself.

package methodNames
	add: 'ArrayField class' -> #type:lengthField:;
	add: 'ArrayPointerField class' -> #type:lengthField:;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: 'Dolphin';
	yourself).

package!

"Class Definitions"!

ArrayFieldLength subclass: #ConformantArrayFieldLength
	instanceVariableNames: 'lengthField'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!ArrayField class methodsFor!

type: aClass lengthField: aSymbol
	"Answer a new instance of the receiver which is used for describing embedded conformant
	array objects of type, aClass, where the length is specified by another field of the
	structure being described with the specified <Symbol> name."

	^self type: aClass arrayLength: (ConformantArrayFieldLength lengthField: aSymbol)! !
!ArrayField class categoriesFor: #type:lengthField:!instance creation!public! !

!ArrayPointerField class methodsFor!

type: aClass lengthField: aSymbol
	"Answer a new instance of the receiver which is used for dereferencing pointers to
	conformant arrays objects of type aClass, where the length is specified by the another field
	of the structure with the specified <Symbol> name."

	^self type: aClass arrayLength: (ConformantArrayFieldLength lengthField: aSymbol)! !
!ArrayPointerField class categoriesFor: #type:lengthField:!instance creation!public! !

"End of package definition"!

