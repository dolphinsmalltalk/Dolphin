| package |
package := Package name: 'Dolphin Base (Deprecated)'.
package paxVersion: 1;
	basicComment: 'Dolphin Smalltalk Base System (Deprecated Classes and Methods)
Copyright (c) Object Arts Ltd 1997-2002. Portions copyright (c) CGI Group (Europe) Ltd, 1997.

This package includes legacy classes and methods from Dolphin''s base package that have been deprecated. If you have no requirement to use code imported from pre-5.0 versions of Dolphin, then this package can be safely uninstalled.
'.

package basicPackageVersion: '6.1'.


package classNames
	add: #ConformantArrayField;
	add: #ConformantArrayPointerField;
	add: #ConformantStructureArrayField;
	add: #ConformantStructureArrayPointerField;
	add: #CPINFO;
	add: #MEMORY_BASIC_INFORMATION;
	add: #MethodContext;
	add: #OSVERSIONINFO;
	add: #STBSymbolProxy;
	yourself.

package methodNames
	add: #_FPIEEE_RECORD -> #causeCode;
	add: #_FPIEEE_RECORD -> #causeName;
	add: #_FPIEEE_VALUE -> #valueType;
	add: #Behavior -> #makeIndirect;
	add: #Behavior -> #makeNullTerminated;
	add: #Character -> #asciiValue;
	add: #Class -> #addClassVarName:;
	add: #CompilerNotification -> #extra;
	add: #CRTLibrary -> #_controlfp:mask:;
	add: #CRTLibrary -> #_ecvt:count:dec:sign:;
	add: #CRTLibrary -> #_filelength:;
	add: #CRTLibrary -> #_finite:;
	add: #CRTLibrary -> #_fpclass:;
	add: #CRTLibrary -> #_gcvt:count:buffer:;
	add: #CRTLibrary -> #_gcvt_s:bufferSize:value:digits:;
	add: #CRTLibrary -> #_i64toa:string:radix:;
	add: #CRTLibrary -> #_logb:;
	add: #CRTLibrary -> #_ltoa:string:radix:;
	add: #CRTLibrary -> #_makepath:drive:dir:fname:ext:;
	add: #CRTLibrary -> #_putenv:;
	add: #CRTLibrary -> #_splitpath:drive:dir:fname:ext:;
	add: #CRTLibrary -> #acos:;
	add: #CRTLibrary -> #asin:;
	add: #CRTLibrary -> #atan:;
	add: #CRTLibrary -> #atan:x:;
	add: #CRTLibrary -> #ceil:;
	add: #CRTLibrary -> #cos:;
	add: #CRTLibrary -> #exp:;
	add: #CRTLibrary -> #fabs:;
	add: #CRTLibrary -> #floor:;
	add: #CRTLibrary -> #fopen:mode:;
	add: #CRTLibrary -> #fread:size:count:stream:;
	add: #CRTLibrary -> #freopen:mode:stream:;
	add: #CRTLibrary -> #frexp:expptr:;
	add: #CRTLibrary -> #fseek:offset:origin:;
	add: #CRTLibrary -> #ftell:;
	add: #CRTLibrary -> #getenv:;
	add: #CRTLibrary -> #ldexp:exp:;
	add: #CRTLibrary -> #log:;
	add: #CRTLibrary -> #log10:;
	add: #CRTLibrary -> #log2:;
	add: #CRTLibrary -> #memcpy:src:count:;
	add: #CRTLibrary -> #memmove:src:count:;
	add: #CRTLibrary -> #modf:intptr:;
	add: #CRTLibrary -> #pow:y:;
	add: #CRTLibrary -> #sin:;
	add: #CRTLibrary -> #sqrt:;
	add: #CRTLibrary -> #strcat:strSource:;
	add: #CRTLibrary -> #strerror:;
	add: #CRTLibrary -> #strncpy:strSource:count:;
	add: #CRTLibrary -> #tan:;
	add: #CRTLibrary -> #thread_chmod:pmode:;
	add: #CRTLibrary -> #thread_errno;
	add: #ExternalStructure -> #do:;
	add: #ExternalStructure -> #do:separatedBy:;
	add: #Integer -> #digitSize;
	add: #Integer -> #highSWord;
	add: #Integer -> #lowSWord;
	add: #KernelLibrary -> #getCPInfo:lpCPInfo:;
	add: #KernelLibrary -> #getFileSize:lpFileSizeHigh:;
	add: #KernelLibrary -> #getVersionEx:;
	add: #KernelLibrary -> #setFilePointer:lDistanceToMove:lpDistanceToMoveHigh:dwMoveMethod:;
	add: #KernelLibrary -> #writePrivateProfileString:lpszEntry:lpszString:lpszFileName:;
	add: #Object -> #asDword;
	add: #Package -> #script:;
	add: #Package -> #script:put:;
	add: #Process -> #fpeMask;
	add: #ShlwapiLibrary -> #pathStripPath:;
	add: #String -> #asDword;
	add: #String -> #asUnicodeString;
	add: #WinMMLibrary -> #timeGetTime;
	add: 'ExternalCallback class' -> #receiver:prototype:;
	add: 'ExternalCallback class' -> #receiver:prototype:closure:;
	add: 'ExternalCallback class' -> #receiver:selector:;
	add: 'ExternalCallback class' -> #receiver:selector:closure:;
	add: 'ExternalDescriptor class' -> #oneStringArg;
	add: 'File class' -> #change:extension:;
	add: 'File class' -> #for:inAndBelow:do:;
	add: 'String class' -> #fromUnicodeString:;
	add: 'String class' -> #unicodeClass;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\Dolphin';
	yourself).

package!

"Class Definitions"!

Object variableSubclass: #MethodContext
	instanceVariableNames: 'frame method receiver'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ArrayField subclass: #ConformantArrayField
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StructureArrayField subclass: #ConformantStructureArrayField
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ArrayPointerField subclass: #ConformantArrayPointerField
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StructureArrayPointerField subclass: #ConformantStructureArrayPointerField
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ExternalStructure subclass: #CPINFO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Win32Structure subclass: #MEMORY_BASIC_INFORMATION
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OSVERSIONINFOEX subclass: #OSVERSIONINFO
	instanceVariableNames: 'osName'
	classVariableNames: 'Current'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
STBProxy subclass: #STBSymbolProxy
	instanceVariableNames: 'string'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!_FPIEEE_RECORD methodsFor!

causeCode
	"Answer an <integer> which identifies the cause of the exception."

	#deprecated.	"Could be more than one cause"
	^(self cause bitAnd: 16r1F) highBit!

causeName
	"Answer the symbolic name of the type of floating point exception the receiver
	represents."

	#deprecated.	"Could be more than one cause"
	^self causeNames last! !
!_FPIEEE_RECORD categoriesFor: #causeCode!accessing!public! !
!_FPIEEE_RECORD categoriesFor: #causeName!accessing!public! !

!_FPIEEE_VALUE methodsFor!

valueType
	#deprecated.
	^self format! !
!_FPIEEE_VALUE categoriesFor: #valueType!accessing!public! !

!Behavior methodsFor!

makeIndirect
	#deprecated.
	self isIndirection: true!

makeNullTerminated
	#deprecated.
	self isNullTerminated: true! !
!Behavior categoriesFor: #makeIndirect!instance specification-accessing!private! !
!Behavior categoriesFor: #makeNullTerminated!instance specification-accessing!private! !

!Character methodsFor!

asciiValue
	"Answers the ascii character value of the receiver."

	"Retained for ST-80 compatibility only, as specific to ASCII char set. Use #codePoint instead."

	#deprecated.
	^codePoint! !
!Character categoriesFor: #asciiValue!accessing!public! !

!Class methodsFor!

addClassVarName: aString
	#deprecated.	"Use addClassVarNamed:"
	^self addClassVarNamed: aString! !
!Class categoriesFor: #addClassVarName:!class variables!public! !

!CompilerNotification methodsFor!

extra
	#deprecated.
	^extras isEmpty ifFalse: [extras anyOne]! !
!CompilerNotification categoriesFor: #extra!accessing!public! !

!CRTLibrary methodsFor!

_controlfp: newInteger mask: maskInteger
	<cdecl: dword _controlfp dword dword>
	#deprecated.	"Insecure - use _controlfp_s"
	^self invalidCall!

_ecvt: aFloat count: anInteger dec: decInteger sign: signInteger
	<cdecl: lpstr _ecvt double sdword sdword* sdword*>
	#deprecated.	"This function is considered insecure and should not be used - see MSDN"
	^self invalidCall!

_filelength: handleInteger
	<cdecl: sdword _filelength sdword>
	#deprecated.
	^self invalidCall!

_finite: aFloat
	<cdecl: bool _finite double>
	#deprecated.
	^self invalidCall!

_fpclass: aFloat
	<cdecl: sdword _fpclass double>
	#deprecated.
	^self invalidCall!

_gcvt: aFloat count: anInteger buffer: aString
	<cdecl: char* _gcvt double sdword char*>
	#deprecated.	"Insecure - use _gcvt_s"
	^self invalidCall!

_gcvt_s: aString bufferSize: sizeInteger value: aFloat digits: digitsInteger
	<cdecl: sdword _gcvt_s char* intptr double sdword>
	#deprecated.
	^self invalidCall!

_i64toa: aSmallInteger string: aString radix: anInteger
	<cdecl: lpstr _i64toa sqword lpstr sdword>
	#deprecated.	"Insecure - see MSDN"
	^self invalidCall!

_logb: aFloat
	<cdecl: double _logb double>
	#deprecated.
	^self invalidCall!

_ltoa: aSmallInteger string: aString radix: anInteger
	<cdecl: lpstr _ltoa sdword lpstr sdword>
	#deprecated.	"Insecure - see MSDN"
	^self invalidCall!

_makepath: path drive: drive dir: dir fname: fname ext: ext
	<cdecl: void _makepath char* char* char* char* char*>
	#deprecated.	"Insecure. Use #_makepath_s:sizeInBytes:drive:dir:fname:ext:"
	^self invalidCall!

_putenv: aString
	<cdecl: sdword _putenv lpstr>
	#deprecated.	"Insecure - see MSDN"
	^self invalidCall!

_splitpath: path drive: drive dir: dir fname: fname ext: ext
	<cdecl: void _splitpath char* char* char* char* char*>
	#deprecated.	"Insecure - use _splitpath_s"
	^self invalidCall!

acos: aFloat
	<cdecl: double acos double>
	#deprecated.
	^self invalidCall!

asin: aFloat
	<cdecl: double asin double>
	#deprecated.
	^self invalidCall!

atan: aFloat
	<cdecl: double atan double>
	#deprecated.
	^self invalidCall!

atan: yFloat x: xFloat
	<cdecl: double atan2 double double>
	#deprecated.
	^self invalidCall!

ceil: aFloat
	<cdecl: double ceil double>
	#deprecated.
	^self invalidCall!

cos: aFloat
	<cdecl: double cos double>
	#deprecated.
	^self invalidCall!

exp: aFloat
	<cdecl: double exp double>
	#deprecated.
	^self invalidCall!

fabs: aFloat
	<cdecl: double fabs double>
	#deprecated.
	^self invalidCall!

floor: aFloat
	<cdecl: double floor double>
	#deprecated.
	^self invalidCall!

fopen: nameString mode: modeString
	<cdecl: handle fopen lpstr lpstr>
	#deprecated.	"Insecure - use fopen_s"
	^self invalidCall!

fread: buffer size: size count: count stream: aFILE
	<overlap cdecl: sdword fread lpvoid intptr intptr handle>
	#deprecated.	"Insecure - use fread_s"
	^self invalidCall!

freopen: pathString mode: modeString stream: anExternalHandle
	<cdecl: handle freopen char* char* handle>
	#deprecated.	"Insecured - see MSDN"
	^self invalidCall!

frexp: x expptr: expptr
	<cdecl: double frexp double sdword*>
	#deprecated.
	^self invalidCall!

fseek: aFILE offset: offsetInteger origin: originInteger
	<cdecl: sdword fseek handle sdword sdword>
	#deprecated. "Use _fseeki64:offset:origin:"
	^self invalidCall!

ftell: aFILE
	<cdecl: sdword ftell handle>
	#deprecated.	"Use #_ftelli64:"
	^self invalidCall!

getenv: varname
	<cdecl: lpstr getenv lpstr>
	#deprecated.	"Insecure - see MSDN"
	^self invalidCall!

ldexp: aFloat exp: anInteger
	<cdecl: double ldexp double sdword>
	#deprecated.
	^self invalidCall!

log: aFloat
	<cdecl: double log double>
	#deprecated.
	^self invalidCall!

log10: aFloat
	<cdecl: double log10 double>
	#deprecated.
	^self invalidCall!

log2: aFloat
	<cdecl: double log2 double>
	#deprecated.
	^self invalidCall!

memcpy: dest src: src count: count
	<cdecl: lpvoid memcpy lpvoid lpvoid intptr>
	#deprecated.	"Insecure - see MSDN"
	^self invalidCall!

memmove: dest src: src count: count
	<cdecl: void* memmove void* void* intptr>
	#deprecated.	"Insecure - see MSDN"
	^self invalidCall!

modf: aFloat intptr: intFloatOut
	<cdecl: double modf double lpvoid>
	#deprecated.
	^self invalidCall!

pow: xFloat y: yFloat
	<cdecl: double pow double double>
	#deprecated.
	^self invalidCall!

sin: aFloat
	<cdecl: double sin double>
	#deprecated.
	^self invalidCall!

sqrt: aFloat
	<cdecl: double sqrt double>
	#deprecated.
	^self invalidCall!

strcat: strDestination strSource: strSource
	<cdecl: lpstr strcat lpstr lpstr>
	#deprecated.	"This function may cause buffer overruns so is insecure. Use strcat_s instead."
	^self invalidCall!

strerror: errno
	<cdecl: lpstr strerror sdword>
	#deprecated.	"Insecure - see MSDN"
	^self invalidCall!

strncpy: strDest strSource: strSource count: count
	<cdecl: lpvoid strncpy lpvoid lpvoid intptr>
	#deprecated.	"Insecure - see MSDN"
	^self invalidCall!

tan: aFloat
	<cdecl: double tan double>
	#deprecated.
	^self invalidCall!

thread_chmod: aFilenameString pmode: aModeInteger
	<overlap cdecl: sdword _chmod lpstr sdword>
	#deprecated. "Use CRTLibraryNonBlocking>>chmod:pmode:"
	^self invalidCall!

thread_errno
	<overlap cdecl: sdword _errno>
	#deprecated. "Use CRTLibraryNonBlocking>>errno"
	^self invalidCall! !
!CRTLibrary categoriesFor: #_controlfp:mask:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #_ecvt:count:dec:sign:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #_filelength:!CRT functions-file handling!public! !
!CRTLibrary categoriesFor: #_finite:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #_fpclass:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #_gcvt:count:buffer:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #_gcvt_s:bufferSize:value:digits:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #_i64toa:string:radix:!CRT functions-data conversion!public! !
!CRTLibrary categoriesFor: #_logb:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #_ltoa:string:radix:!CRT functions-data conversion!public! !
!CRTLibrary categoriesFor: #_makepath:drive:dir:fname:ext:!CRT functions-file handling!public! !
!CRTLibrary categoriesFor: #_putenv:!CRT functions-process and environment control!public! !
!CRTLibrary categoriesFor: #_splitpath:drive:dir:fname:ext:!CRT functions-file handling!public! !
!CRTLibrary categoriesFor: #acos:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #asin:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #atan:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #atan:x:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #ceil:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #cos:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #exp:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #fabs:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #floor:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #fopen:mode:!CRT functions-stream I/O!public! !
!CRTLibrary categoriesFor: #fread:size:count:stream:!CRT functions-stream I/O!public! !
!CRTLibrary categoriesFor: #freopen:mode:stream:!CRT functions-stream I/O!public! !
!CRTLibrary categoriesFor: #frexp:expptr:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #fseek:offset:origin:!CRT functions-stream I/O!public! !
!CRTLibrary categoriesFor: #ftell:!CRT functions-stream I/O!public! !
!CRTLibrary categoriesFor: #getenv:!CRT functions-process and environment control!public! !
!CRTLibrary categoriesFor: #ldexp:exp:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #log:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #log10:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #log2:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #memcpy:src:count:!CRT functions-buffer manipulation!public! !
!CRTLibrary categoriesFor: #memmove:src:count:!CRT functions-buffer manipulation!public! !
!CRTLibrary categoriesFor: #modf:intptr:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #pow:y:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #sin:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #sqrt:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #strcat:strSource:!CRT functions-string manipulation!public! !
!CRTLibrary categoriesFor: #strerror:!CRT functions-string manipulation!public! !
!CRTLibrary categoriesFor: #strncpy:strSource:count:!CRT functions-string manipulation!public! !
!CRTLibrary categoriesFor: #tan:!CRT functions-floating point support!public! !
!CRTLibrary categoriesFor: #thread_chmod:pmode:!CRT functions-file handling!public! !
!CRTLibrary categoriesFor: #thread_errno!CRT functions-process and environment control!public! !

!ExternalCallback class methodsFor!

receiver: anObject prototype: anExternalMethod
	#deprecated.	"Use #receiver:selector:descriptor:"
	self assert: 
			[(anExternalMethod isKindOf: ExternalMethod) 
				and: [anExternalMethod primitiveIndex == self callbackPrimitive]].
	^MessageCallback 
		receiver: anObject
		selector: anExternalMethod selector
		descriptor: anExternalMethod descriptor!

receiver: anObject prototype: anExternalMethod closure: extraObject
	#deprecated.	"Use #receiver:selector:descriptor: and #closure:"
	^(self receiver: anObject prototype: anExternalMethod) 
		closure: extraObject!

receiver: anObject selector: aSymbol
	#deprecated.	"Use #receiver:selector:descriptor:"
	^self receiver: anObject prototype: (anObject class definitionOf: aSymbol)!

receiver: anObject selector: aSymbol closure: extraObject
	#deprecated.	"Use #receiver:selector:descriptor: and #closure:"
	^(self receiver: anObject selector: aSymbol) closure: extraObject! !
!ExternalCallback class categoriesFor: #receiver:prototype:!instance creation!public! !
!ExternalCallback class categoriesFor: #receiver:prototype:closure:!instance creation!public! !
!ExternalCallback class categoriesFor: #receiver:selector:!instance creation!public! !
!ExternalCallback class categoriesFor: #receiver:selector:closure:!instance creation!public! !

!ExternalDescriptor class methodsFor!

oneStringArg
	"Answer a shared instance of the receiver describing a standard function
	with a single string argument."

	#deprecated.
	^self argumentTypes: 'lpstr'! !
!ExternalDescriptor class categoriesFor: #oneStringArg!instance creation!public! !

!ExternalStructure methodsFor!

do: aOneArgumentBlock 
	#deprecated.
	self fieldsDo: aOneArgumentBlock!

do: operation separatedBy: separator 
	#deprecated.
	self fieldsDo: operation separatedBy: separator! !
!ExternalStructure categoriesFor: #do:!enumerating!public! !
!ExternalStructure categoriesFor: #do:separatedBy:!enumerating!public! !

!File class methodsFor!

change: aPathnameString extension: anExtensionString
	#deprecated.	"use #path:extension:"
	^self path: aPathnameString extension: anExtensionString!

for: matchString inAndBelow: dirString do: operation
	#deprecated.	"Use #forAll:in:do:"
	^self 
		forAll: matchString
		in: dirString
		do: [:each | operation value: each directory value: each]! !
!File class categoriesFor: #change:extension:!filename manipulation!public! !
!File class categoriesFor: #for:inAndBelow:do:!enumerating!public! !

!Integer methodsFor!

digitSize
	#deprecated.
	^self digitLength!

highSWord
	"Answers the high order signed word of the receiver (assumes the receiver is a 32-bit Integer)."

	#deprecated.
	^(DWORD fromInteger: self) highSWord
!

lowSWord
	"Answers the low order signed word of the receiver (assumes the receiver is a 32-bit Integer)."

	#deprecated.
	^(DWORD fromInteger: self) lowSWord
! !
!Integer categoriesFor: #digitSize!accessing!public! !
!Integer categoriesFor: #highSWord!bit manipulation!public! !
!Integer categoriesFor: #lowSWord!bit manipulation!public! !

!KernelLibrary methodsFor!

getCPInfo: codepage lpCPInfo: lpCPInfo
	"Invoke the GetCPInfo() function of the module wrapped by the receiver.
	Helpstring: Retrieves the current original equipment manufacturer (OEM) code-page identifier for the system

		BOOL __stdcall GetCPInfo(
			UINT codepage,
			CPINFO* lpCPInfo);"

	<stdcall: bool GetCPInfo dword CPINFO*>
	^self invalidCall!

getFileSize: hfile lpFileSizeHigh: lpFileSizeHigh
	<stdcall: dword GetFileSize handle dword*>
	#deprecated. "Use #getFileSizeEx:lpFileSize:"
	^self invalidCall!

getVersionEx: anOSVERSIONINFO 
	"Populate the argument with extended OS version information. Answers whether the request succeeded.
		BOOL GetVersionEx(
			LPOSVERSIONINFO lpVersionInformation 
		);"

	<stdcall: bool GetVersionExA OSVERSIONINFO*>
	#deprecated.	"Deprecated by Microsoft, see https://msdn.microsoft.com/en-us/library/windows/desktop/ms724451(v=vs.140).aspx"
	^self invalidCall!

setFilePointer: aHandle lDistanceToMove: loInteger lpDistanceToMoveHigh: anAddress dwMoveMethod: senseOfMove
	<stdcall: dword SetFilePointer handle dword lpvoid dword>
	#deprecated. "Use #setFilePointerEx:liDistanceToMove:lpNewFilePointer:dwMoveMethod:"
	^self invalidCall!

writePrivateProfileString: lpszSection lpszEntry: lpszEntry lpszString: lpszString lpszFileName: lpszFileName
	<stdcall: bool WritePrivateProfileStringA lpstr lpstr lpstr lpstr>
	#deprecated.	"As explained on msdn, 'This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.'"
	^self invalidCall! !
!KernelLibrary categoriesFor: #getCPInfo:lpCPInfo:!**auto generated**!public!win32 functions-natural language support! !
!KernelLibrary categoriesFor: #getFileSize:lpFileSizeHigh:!public!win32 functions-file! !
!KernelLibrary categoriesFor: #getVersionEx:!public!win32 functions-system information! !
!KernelLibrary categoriesFor: #setFilePointer:lDistanceToMove:lpDistanceToMoveHigh:dwMoveMethod:!public!win32 functions-file! !
!KernelLibrary categoriesFor: #writePrivateProfileString:lpszEntry:lpszString:lpszFileName:!**auto generated**!public! !

!Object methodsFor!

asDword
	"Private - Answer the receiver in a form suitable for passing/returning
	as the 32-bit parameter/return value. The default is self (which
	will cause the default window proc. of the window to be called
	for most objects other than Integers when used as a return value)."

	#deprecated.
	^self! !
!Object categoriesFor: #asDword!converting!private! !

!Package methodsFor!

script: scriptSymbol
	#deprecated.	"In 4.0, but needed to load some old format packages"
	self scriptAt: scriptSymbol!

script: scriptSymbol put: aString 
	#deprecated.	"In 4.0, but needed to load some old format packages"
	self scriptAt: scriptSymbol put: aString! !
!Package categoriesFor: #script:!operations!public! !
!Package categoriesFor: #script:put:!operations!public! !

!Process methodsFor!

fpeMask
	#deprecated.	"Use Float class>>exceptionMask, or #fpControl"
	^fpControl bitAnd: CRTConstants._MCW_EM! !
!Process categoriesFor: #fpeMask!accessing!public! !

!ShlwapiLibrary methodsFor!

pathStripPath: pszPath
	<stdcall: void PathStripPathA lpstr>
	#deprecated.	"Modifies pszPath in place. Use File class>>splitFilenameFrom: instead."
	^self invalidCall! !
!ShlwapiLibrary categoriesFor: #pathStripPath:!**auto generated**!public! !

!String methodsFor!

asDword
	"Answer the receiver in a form suitable for passing and returning as a
	32-bit integer value.
	N.B. Be careful that the receiver is not GC'd until the result is no
	longer required, or it will be a dangling pointer."

	#deprecated.
	^self yourAddress!

asUnicodeString
	#deprecated.
	^self asUtf16String! !
!String categoriesFor: #asDword!converting!public! !
!String categoriesFor: #asUnicodeString!converting!public! !

!String class methodsFor!

fromUnicodeString: anAddressOrUnicodeString
	#deprecated.
	^self fromUtf16String: anAddressOrUnicodeString!

unicodeClass
	#deprecated.
	^self utf16Class! !
!String class categoriesFor: #fromUnicodeString:!instance creation!public! !
!String class categoriesFor: #unicodeClass!constants!public! !

!WinMMLibrary methodsFor!

timeGetTime
	<stdcall: dword timeGetTime>
	#deprecated.	"Use Time class>>millisecondClockValue (which is highly accurate, and does not wrap after ~49.7 days either)"
	^self invalidCall! !
!WinMMLibrary categoriesFor: #timeGetTime!public!win32 functions-timer! !

"End of package definition"!

