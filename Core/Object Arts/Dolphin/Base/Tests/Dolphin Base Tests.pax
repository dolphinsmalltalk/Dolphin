| package |
package := Package name: 'Dolphin Base Tests'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{Core.Tests}
	#{Core.Tests.AbstractDictionaryTest}
	#{Core.Tests.AbstractFileStreamTest}
	#{Core.Tests.AbstractSetTest}
	#{Core.Tests.AnsiStringTest}
	#{Core.Tests.ArrayedCollectionTest}
	#{Core.Tests.ArrayTest}
	#{Core.Tests.AssociationTest}
	#{Core.Tests.BagTest}
	#{Core.Tests.BehaviorTest}
	#{Core.Tests.BehaviorTestClasses}
	#{Core.Tests.BooleanTest}
	#{Core.Tests.ByteArrayTest}
	#{Core.Tests.CharacterTest}
	#{Core.Tests.ClassDescriptionTest}
	#{Core.Tests.ClassTest}
	#{Core.Tests.CollectionCombinator}
	#{Core.Tests.CollectionTest}
	#{Core.Tests.DateAndTimeTest}
	#{Core.Tests.DateTest}
	#{Core.Tests.DeferredValueTableTest}
	#{Core.Tests.DelayTest}
	#{Core.Tests.DictionaryTest}
	#{Core.Tests.DolphinTest}
	#{Core.Tests.DolphinTestClassResource}
	#{Core.Tests.DolphinTestPackages}
	#{Core.Tests.DolphinTestResource}
	#{Core.Tests.DurationTest}
	#{Core.Tests.ExceptionTest}
	#{Core.Tests.ExceptionTesterClasses}
	#{Core.Tests.FalseTest}
	#{Core.Tests.FileLocatorTest}
	#{Core.Tests.FileStreamTest}
	#{Core.Tests.FileTest}
	#{Core.Tests.FloatTest}
	#{Core.Tests.FractionTest}
	#{Core.Tests.GUIDTest}
	#{Core.Tests.IdentityDictionaryTest}
	#{Core.Tests.IdentitySetTest}
	#{Core.Tests.IntegerTest}
	#{Core.Tests.IntervalTest}
	#{Core.Tests.LargeIntegerTest}
	#{Core.Tests.LimitedWriteStreamTest}
	#{Core.Tests.LinkTest}
	#{Core.Tests.LocaleTest}
	#{Core.Tests.LookupTableTest}
	#{Core.Tests.MessageNotUnderstoodTest}
	#{Core.Tests.MessageTest}
	#{Core.Tests.MetaclassTest}
	#{Core.Tests.MethodCategoryTest}
	#{Core.Tests.MustBeBooleanTestClasses}
	#{Core.Tests.NumberTest}
	#{Core.Tests.ObjectTest}
	#{Core.Tests.OrderedCollectionTest}
	#{Core.Tests.PairTest}
	#{Core.Tests.PluggableSetTest}
	#{Core.Tests.PositionableStreamTest}
	#{Core.Tests.ProcessTest}
	#{Core.Tests.ReadStreamTest}
	#{Core.Tests.ReadWriteStreamTest}
	#{Core.Tests.RunArrayTest}
	#{Core.Tests.ScaledDecimalTest}
	#{Core.Tests.SearchPolicyTest}
	#{Core.Tests.SemaphoreTest}
	#{Core.Tests.SequenceableCollectionTest}
	#{Core.Tests.SequencedGrowableCollectionTest}
	#{Core.Tests.SetTest}
	#{Core.Tests.SignalTest}
	#{Core.Tests.SmallIntegerTest}
	#{Core.Tests.SortAlgorithmTest}
	#{Core.Tests.SortedCollectionTest}
	#{Core.Tests.StreamTest}
	#{Core.Tests.StringTest}
	#{Core.Tests.SymbolTest}
	#{Core.Tests.TimeStampTest}
	#{Core.Tests.TimeTest}
	#{Core.Tests.TrueTest}
	#{Core.Tests.UndefinedObjectTest}
	#{Core.Tests.Utf16StringTest}
	#{Core.Tests.Utf8StringTest}
	#{Core.Tests.UtfEncodedStringTest}
	#{Core.Tests.WeakIdentityDictionaryTest}
	#{Core.Tests.WriteStreamTest}
	#{External.Tests}
	#{External.Tests.AddressTest}
	#{External.Tests.ArrayFieldTest}
	#{External.Tests.ArrayPointerFieldTest}
	#{External.Tests.DOUBLEArrayTest}
	#{External.Tests.DynamicLinkLibraryTest}
	#{External.Tests.ExternalArrayTest}
	#{External.Tests.ExternalFieldTest}
	#{External.Tests.FLOATArrayTest}
	#{External.Tests.FunctionDescriptorTest}
	#{External.Tests.GenericExternalArrayTest}
	#{External.Tests.GUIDTest}
	#{External.Tests.Int16ArrayTest}
	#{External.Tests.Int32ArrayTest}
	#{External.Tests.Int8ArrayTest}
	#{External.Tests.IntegerBytesTest}
	#{External.Tests.INTEGERTest}
	#{External.Tests.ResourceLibraryTest}
	#{External.Tests.StructureArrayFieldTest}
	#{External.Tests.StructureArrayPointerFieldTest}
	#{External.Tests.StructureArrayTest}
	#{External.Tests.StructureTest}
	#{External.Tests.UInt16ArrayTest}
	#{External.Tests.UInt32ArrayTest}
	#{External.Tests.UInt32BytesTest}
	#{External.Tests.UInt64BytesTest}
	#{External.Tests.WCHARFieldTest}
	#{Graphics.Tests}
	#{Kernel.Tests}
	#{Kernel.Tests.AbstractNamespaceTest}
	#{Kernel.Tests.AlwaysSearchPolicyTest}
	#{Kernel.Tests.BindingReferenceTest}
	#{Kernel.Tests.BlockClosureTest}
	#{Kernel.Tests.CaseInsensitiveSearchPolicyTest}
	#{Kernel.Tests.ChunkSourceFilerTest}
	#{Kernel.Tests.ClassBuilderTest}
	#{Kernel.Tests.ClassBuilderTestClasses}
	#{Kernel.Tests.CommandLineTest}
	#{Kernel.Tests.CompiledExpressionTest}
	#{Kernel.Tests.CompiledMethodTest}
	#{Kernel.Tests.DefaultSortAlgorithmTest}
	#{Kernel.Tests.EqualitySearchPolicyTest}
	#{Kernel.Tests.EventMessageSendTest}
	#{Kernel.Tests.EventMessageSequenceTest}
	#{Kernel.Tests.FullBindingReferenceTest}
	#{Kernel.Tests.HeapsortAlgorithmTest}
	#{Kernel.Tests.IdentitySearchPolicyTest}
	#{Kernel.Tests.InsertionSortAlgorithmTest}
	#{Kernel.Tests.IntrosortAlgorithmTest}
	#{Kernel.Tests.MemoryManagerTest}
	#{Kernel.Tests.MergesortAlgorithmTest}
	#{Kernel.Tests.MetaBindingReferenceTest}
	#{Kernel.Tests.MethodAnnotationsTest}
	#{Kernel.Tests.MethodDictionaryTest}
	#{Kernel.Tests.NamespaceImportTest}
	#{Kernel.Tests.NamespaceTest}
	#{Kernel.Tests.NeverSearchPolicyTest}
	#{Kernel.Tests.OrdinalCaseInsensitiveSearchPolicyTest}
	#{Kernel.Tests.PackageManagerTest}
	#{Kernel.Tests.PackageTest}
	#{Kernel.Tests.PoolConstantsDictionaryTest}
	#{Kernel.Tests.PropertyManagerTest}
	#{Kernel.Tests.QuicksortAlgorithmTest}
	#{Kernel.Tests.RootNamespaceTest}
	#{Kernel.Tests.ScopedBindingReferenceTest}
	#{Kernel.Tests.SessionManagerTest}
	#{Kernel.Tests.ShellsortAlgorithmTest}
	#{Kernel.Tests.SmalltalkLocaleTest}
	#{Kernel.Tests.SmalltalkNamespaceTest}
	#{Kernel.Tests.StableSortAlgorithmTest}
	#{Kernel.Tests.StackFrameTest}
	#{Kernel.Tests.SystemNamespaceTest}
	#{Kernel.Tests.VariableBindingTest}
	#{Kernel.Tests.VMTest}
	#{OS.Tests}
	#{OS.Tests.AbstractInvariantLocaleTest}
	#{OS.Tests.CRTErrorTest}
	#{OS.Tests.CRTLibraryTest}
	#{OS.Tests.DiskVolumeInformationTest}
	#{OS.Tests.FILETIMETest}
	#{OS.Tests.HRESULTTest}
	#{OS.Tests.InvariantLocaleTest}
	#{OS.Tests.KernelLibraryTest}
	#{OS.Tests.ShlwapiLibraryTest}
	#{OS.Tests.StdioFileStreamTest}
	#{OS.Tests.WindowsLocaleTest}
).

package setMethodNames: #(
	#(#{OS.CRTLibrary} #_chmod:pmode:)
	#(#{OS.CRTLibrary} #strcat_s:bufferSize:strSource:)
	#(#{OS.CRTLibraryNonBlocking} #_chmod:pmode:)
	#(#{Tools.SmalltalkSystem} #regressionTestsLogFilename)
	#(#{Tools.SmalltalkSystem} #regressionTestSuite)
	#(#{Tools.SmalltalkSystem} #runRegressionTests)
	#(#{Tools.SmalltalkSystem} #runRegressionTests:logTo:verbose:)
	#(#{Tools.SmalltalkSystem} #setTestAttributes:id:name:duration:tests:failures:errors:skipped:)
	#(#{Tools.SmalltalkSystem} #writeJunitTestLog:result:)
).

package setVariableNames: #(
	#{Smalltalk.DolphinTest}
).

package setAliasVariableNames: #(
	#{Smalltalk.DolphinTest}
).

package setPrerequisites: #(
	'..\..\IDE\Base\Development System'
	'..\Dolphin'
	'..\Dolphin Additional Sort Algorithms'
	'..\Dolphin Anonymous Classes'
	'..\Deprecated\Dolphin Base (Old Names)'
	'..\..\MVP\Base\Dolphin Basic Geometry'
	'..\Dolphin Command-line Parser'
	'..\..\System\Random\Dolphin CRT Random Stream'
	'..\..\System\Win32\Dolphin File System Info'
	'..\Dolphin Legacy Date & Time'
	'..\Deprecated\Dolphin Legacy FFI Types (Old Names)'
	'..\Deprecated\Dolphin Legacy Package Support'
	'..\..\System\Filer\Dolphin Literal Out Filer'
	'..\..\System\Filer\Dolphin Literal Out Filer (Old versions)'
	'..\..\System\Win32\MessageBox\Dolphin Message Box'
	'..\..\System\Random\Dolphin Random Stream'
	'..\..\Registry\Dolphin Registry Access'
	'..\Dolphin SizeIs Fields'
	'..\Dolphin Source Fileout'
	'..\..\..\..\Contributions\Camp Smalltalk\SUnit\OA SUnit Extensions'
	'..\..\ActiveX\COM\OLE COM'
	'..\..\..\Samples\MVP\Scribble\Scribble'
	'..\..\System\Compiler\Smalltalk Parser'
	'..\..\..\..\Contributions\Camp Smalltalk\SUnit\SUnit'
	'..\..\..\..\Contributions\Camp Smalltalk\SUnit\SUnitPreload'
	'..\..\Sockets\WinInet'
	'..\..\ActiveX\Components\XML DOM\XML DOM'
).

package setManualPrerequisites: #(
	'Dolphin Anonymous Classes'
).

package!

"Class Definitions"!

Core
	subclass: #'Core.Tests'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{XProgramming.SUnit})
	classInstanceVariableNames: ''
	classConstants: {}!
External
	subclass: #'External.Tests'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{XProgramming.SUnit})
	classInstanceVariableNames: ''
	classConstants: {}!
Graphics
	subclass: #'Graphics.Tests'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{XProgramming.SUnit})
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel
	subclass: #'Kernel.Tests'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{XProgramming.SUnit})
	classInstanceVariableNames: ''
	classConstants: {}!
OS
	subclass: #'OS.Tests'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Object
	subclass: #'Core.Tests.CollectionCombinator'
	instanceVariableNames: 'resultProcessingBlock collectionOfArrays buffer'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
XProgramming.SUnit.TestCase
	subclass: #'Kernel.Tests.CommandLineTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
XProgramming.SUnit.TestCase
	subclass: #'Core.Tests.DolphinTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.AbstractNamespaceTest'
	instanceVariableNames: 'removedVariables'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.AddressTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.AssociationTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.BehaviorTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.BindingReferenceTest'
	instanceVariableNames: ''
	classVariableNames: 'TestVar'
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.BlockClosureTest'
	instanceVariableNames: 'x'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.BooleanTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.CharacterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.NlsConstants})
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.ChunkSourceFilerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.ClassBuilderTest'
	instanceVariableNames: 'wasOAD dirtiedClasses'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.ClassDescriptionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.CollectionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.CompiledExpressionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.CompiledMethodTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'OS.Tests.CRTErrorTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'OS.Tests.CRTLibraryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.DateAndTimeTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.DateTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.DelayTest'
	instanceVariableNames: 'delay startTime timerResolution'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'OS.Tests.DiskVolumeInformationTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.DurationTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.DynamicLinkLibraryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.EventMessageSendTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.EventMessageSequenceTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.ExceptionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.ExternalArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.ExternalFieldTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.FileLocatorTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.FileTest'
	instanceVariableNames: 'tempFile'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants} #{OS.CRTConstants})
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'OS.Tests.FILETIMETest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.FloatTest'
	instanceVariableNames: 'fpeMask'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.FractionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.FunctionDescriptorTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{External.ExtCallArgTypes})
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.GUIDTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.GUIDTest'
	instanceVariableNames: ''
	classVariableNames: 'Default'
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'OS.Tests.HRESULTTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.IntegerBytesTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.IntegerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.INTEGERTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'OS.Tests.KernelLibraryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.LinkTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.LocaleTest'
	instanceVariableNames: 'savedLocale'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.MemoryManagerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.MessageNotUnderstoodTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.MessageTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.MethodAnnotationsTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.MethodCategoryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.NumberTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.ObjectTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.PackageManagerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.PackageTest'
	instanceVariableNames: 'loadedPackages checkTimestamps'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.PairTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.PoolConstantsDictionaryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.ProcessTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.PropertyManagerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.ResourceLibraryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.ScaledDecimalTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.SearchPolicyTest'
	instanceVariableNames: 'policy'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.SemaphoreTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.SessionManagerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'OS.Tests.ShlwapiLibraryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.SignalTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.SortAlgorithmTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.StackFrameTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.StreamTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'External.Tests.StructureTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.TimeStampTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.TimeTest'
	instanceVariableNames: 'savedLocale'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Core.Tests.UndefinedObjectTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest
	subclass: #'Kernel.Tests.VMTest'
	instanceVariableNames: 'expiryHandler'
	classVariableNames: ''
	imports: #(#{OS.CRTConstants})
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.Tests.AbstractNamespaceTest
	subclass: #'Kernel.Tests.NamespaceTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{Kernel.VariableBinding})
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.Tests.AbstractNamespaceTest
	subclass: #'Kernel.Tests.SystemNamespaceTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.Tests.SystemNamespaceTest
	subclass: #'Kernel.Tests.RootNamespaceTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.Tests.SystemNamespaceTest
	subclass: #'Kernel.Tests.SmalltalkNamespaceTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.AssociationTest
	subclass: #'Kernel.Tests.VariableBindingTest'
	instanceVariableNames: ''
	classVariableNames: 'TestClassVar'
	imports: #()
	classInstanceVariableNames: ''
	classConstants: { 'TestClassConst' -> 16r1 }!
Kernel.Tests.BindingReferenceTest
	subclass: #'Kernel.Tests.NamespaceImportTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.Tests.BindingReferenceTest
	subclass: #'Kernel.Tests.ScopedBindingReferenceTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.Tests.ScopedBindingReferenceTest
	subclass: #'Kernel.Tests.FullBindingReferenceTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.Tests.ScopedBindingReferenceTest
	subclass: #'Kernel.Tests.MetaBindingReferenceTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.BooleanTest
	subclass: #'Core.Tests.FalseTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.BooleanTest
	subclass: #'Core.Tests.TrueTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.ClassDescriptionTest
	subclass: #'Core.Tests.ClassTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.ClassDescriptionTest
	subclass: #'Core.Tests.MetaclassTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.CollectionTest
	subclass: #'Core.Tests.AbstractDictionaryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.CollectionTest
	subclass: #'Core.Tests.AbstractSetTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.CollectionTest
	subclass: #'Core.Tests.BagTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.CollectionTest
	subclass: #'Core.Tests.SequenceableCollectionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.AbstractDictionaryTest
	subclass: #'Core.Tests.DictionaryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.AbstractDictionaryTest
	subclass: #'Core.Tests.LookupTableTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.AbstractDictionaryTest
	subclass: #'Kernel.Tests.MethodDictionaryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.LookupTableTest
	subclass: #'Core.Tests.DeferredValueTableTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.LookupTableTest
	subclass: #'Core.Tests.IdentityDictionaryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.LookupTableTest
	subclass: #'Core.Tests.WeakIdentityDictionaryTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.AbstractSetTest
	subclass: #'Core.Tests.IdentitySetTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.AbstractSetTest
	subclass: #'Core.Tests.PluggableSetTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.AbstractSetTest
	subclass: #'Core.Tests.SetTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SequenceableCollectionTest
	subclass: #'Core.Tests.ArrayedCollectionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SequenceableCollectionTest
	subclass: #'Core.Tests.IntervalTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SequenceableCollectionTest
	subclass: #'Core.Tests.SequencedGrowableCollectionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.ArrayedCollectionTest
	subclass: #'Core.Tests.ArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.ArrayedCollectionTest
	subclass: #'Core.Tests.ByteArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.ArrayedCollectionTest
	subclass: #'Core.Tests.RunArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.ArrayedCollectionTest
	subclass: #'Core.Tests.StringTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.StringTest
	subclass: #'Core.Tests.AnsiStringTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.StringTest
	subclass: #'Core.Tests.UtfEncodedStringTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.UtfEncodedStringTest
	subclass: #'Core.Tests.Utf16StringTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.UtfEncodedStringTest
	subclass: #'Core.Tests.Utf8StringTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.Utf8StringTest
	subclass: #'Core.Tests.SymbolTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SequencedGrowableCollectionTest
	subclass: #'Core.Tests.OrderedCollectionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.OrderedCollectionTest
	subclass: #'Core.Tests.SortedCollectionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalArrayTest
	subclass: #'External.Tests.DOUBLEArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalArrayTest
	subclass: #'External.Tests.FLOATArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalArrayTest
	subclass: #'External.Tests.GenericExternalArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalArrayTest
	subclass: #'External.Tests.Int16ArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalArrayTest
	subclass: #'External.Tests.Int32ArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalArrayTest
	subclass: #'External.Tests.Int8ArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalArrayTest
	subclass: #'External.Tests.UInt16ArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalArrayTest
	subclass: #'External.Tests.UInt32ArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.GenericExternalArrayTest
	subclass: #'External.Tests.StructureArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalFieldTest
	subclass: #'External.Tests.ArrayFieldTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalFieldTest
	subclass: #'External.Tests.ArrayPointerFieldTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalFieldTest
	subclass: #'External.Tests.StructureArrayFieldTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalFieldTest
	subclass: #'External.Tests.StructureArrayPointerFieldTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.ExternalFieldTest
	subclass: #'External.Tests.WCHARFieldTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.IntegerBytesTest
	subclass: #'External.Tests.UInt32BytesTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.IntegerBytesTest
	subclass: #'External.Tests.UInt64BytesTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.IntegerTest
	subclass: #'Core.Tests.LargeIntegerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.IntegerTest
	subclass: #'Core.Tests.SmallIntegerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.LocaleTest
	subclass: #'OS.Tests.AbstractInvariantLocaleTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.LocaleTest
	subclass: #'OS.Tests.WindowsLocaleTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
OS.Tests.AbstractInvariantLocaleTest
	subclass: #'OS.Tests.InvariantLocaleTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
OS.Tests.AbstractInvariantLocaleTest
	subclass: #'Kernel.Tests.SmalltalkLocaleTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SearchPolicyTest
	subclass: #'Kernel.Tests.AlwaysSearchPolicyTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SearchPolicyTest
	subclass: #'Kernel.Tests.CaseInsensitiveSearchPolicyTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SearchPolicyTest
	subclass: #'Kernel.Tests.EqualitySearchPolicyTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SearchPolicyTest
	subclass: #'Kernel.Tests.IdentitySearchPolicyTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SearchPolicyTest
	subclass: #'Kernel.Tests.NeverSearchPolicyTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SearchPolicyTest
	subclass: #'Kernel.Tests.OrdinalCaseInsensitiveSearchPolicyTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SortAlgorithmTest
	subclass: #'Kernel.Tests.DefaultSortAlgorithmTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SortAlgorithmTest
	subclass: #'Kernel.Tests.HeapsortAlgorithmTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SortAlgorithmTest
	subclass: #'Kernel.Tests.IntrosortAlgorithmTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SortAlgorithmTest
	subclass: #'Kernel.Tests.QuicksortAlgorithmTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SortAlgorithmTest
	subclass: #'Kernel.Tests.ShellsortAlgorithmTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.SortAlgorithmTest
	subclass: #'Kernel.Tests.StableSortAlgorithmTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.Tests.StableSortAlgorithmTest
	subclass: #'Kernel.Tests.InsertionSortAlgorithmTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Kernel.Tests.StableSortAlgorithmTest
	subclass: #'Kernel.Tests.MergesortAlgorithmTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.StreamTest
	subclass: #'Core.Tests.PositionableStreamTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.PositionableStreamTest
	subclass: #'Core.Tests.ReadStreamTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.PositionableStreamTest
	subclass: #'Core.Tests.ReadWriteStreamTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.PositionableStreamTest
	subclass: #'Core.Tests.WriteStreamTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.ReadWriteStreamTest
	subclass: #'Core.Tests.AbstractFileStreamTest'
	instanceVariableNames: 'tempFileName filestream'
	classVariableNames: 'RandomData1 RandomData2'
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.AbstractFileStreamTest
	subclass: #'Core.Tests.FileStreamTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.AbstractFileStreamTest
	subclass: #'OS.Tests.StdioFileStreamTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.WriteStreamTest
	subclass: #'Core.Tests.LimitedWriteStreamTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
XProgramming.SUnit.TestResource
	subclass: #'Core.Tests.DolphinTestResource'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTestResource
	subclass: #'Core.Tests.DolphinTestClassResource'
	instanceVariableNames: 'package'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTestResource
	subclass: #'Core.Tests.DolphinTestPackages'
	instanceVariableNames: 'a b c'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTestClassResource
	subclass: #'Core.Tests.BehaviorTestClasses'
	instanceVariableNames: 'classWithAbstractMethod1 classWithAbstractMethod2'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTestClassResource
	subclass: #'Kernel.Tests.ClassBuilderTestClasses'
	instanceVariableNames: 'testClass testSubclass1 testSubclass2 testPool1 testPool2 testPool3 classesDirtied'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTestClassResource
	subclass: #'Core.Tests.ExceptionTesterClasses'
	instanceVariableNames: 'testNotificationClass resumableErrorClass testErrorClass'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTestClassResource
	subclass: #'Core.Tests.MustBeBooleanTestClasses'
	instanceVariableNames: 'trueClass falseClass'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"Variable Aliases"!

Smalltalk.DolphinTest := Core.Tests.DolphinTest!


"Loose Methods"!

!OS.CRTLibrary methodsFor!

_chmod: aFilenameString pmode: aModeInteger
	<cdecl: sdword _chmod lpstr sdword>
	#deprecated. "Kept only for testing"
	^self invalidCall: _failureCode!

strcat_s: destString bufferSize: anInteger strSource: sourceString
	"Only for testing"

	<cdecl: errno strcat_s lpstr intptr lpstr>
	^self invalidCall: _failureCode! !
!OS.CRTLibrary categoriesForMethods!
_chmod:pmode:!CRT functions-file handling!public! !
strcat_s:bufferSize:strSource:!CRT functions-string manipulation!public! !
!

!OS.CRTLibraryNonBlocking methodsFor!

_chmod: aFilenameString pmode: aModeInteger
	<overlap cdecl: sdword _chmod lpstr sdword>
	#deprecated. "Kept only for testing"
	^self invalidCall: _failureCode! !
!OS.CRTLibraryNonBlocking categoriesForMethods!
_chmod:pmode:!CRT functions-file handling!public! !
!

!Tools.SmalltalkSystem methodsFor!

regressionTestsLogFilename
	"Answer the name of the file in which to log test results, or nil to have the output sent to stdout"

	^nil
	"^File default: SessionManager current imagePath extension: 'testlog'"!

regressionTestSuite
	| suite |
	suite := TestSuite named: 'RegressionTests'.
	suite addTests: TestCase buildSuite allTests asSortedArray.
	^suite!

runRegressionTests
	| suite filename |
	filename := self regressionTestsLogFilename.
	suite := self regressionTestSuite.
	^filename isNil
		ifTrue: 
			[self
				runRegressionTests: suite
				logTo: SessionManager current stdout
				verbose: true]
		ifFalse: 
			[| logStream |
			logStream := FileStream write: filename.
			
			[self
				runRegressionTests: suite
				logTo: logStream
				verbose: true]
					ensure: [logStream close]]!

runRegressionTests: aTestSuite logTo: logStream verbose: aBoolean
	| result |
	result := CommandLineTestRunner new
				addLogger: (TestRunConsoleLogger on: logStream);
				verbose: aBoolean;
				runSuite: aTestSuite.
	self writeJunitTestLog: aTestSuite result: result.
	^result!

setTestAttributes: suitesNode id: idInteger name: suiteName duration: aDuration tests: testsInteger failures: failuresInteger errors: errorsInteger skipped: skippedInteger
	| stream attribs |
	attribs := suitesNode attributes.
	idInteger ifNotNil: [attribs at: 'id' put: idInteger].
	stream := String writeStream.
	aDuration asSeconds asFloat printOn: stream decimalPlaces: 6.
	attribs
		at: 'name' put: suiteName;
		at: 'tests' put: testsInteger displayString;
		at: 'errors' put: errorsInteger displayString;
		at: 'failures' put: failuresInteger displayString;
		at: 'skipped' put: skippedInteger displayString;
		at: 'time' put: stream contents;
		free!

writeJunitTestLog: aTestSuite result: aTestResult
	| doc suitesNode currentId currentClass suiteNode classTests classErrors classFailures classSkipped classElapsed caseAttribs suiteName testsInteger errorsInteger failuresInteger skippedInteger duration |
	suiteName := aTestSuite name ?? 'RegressionTests'.
	doc := MSXML newDocument.
	suitesNode := doc addElement: 'testsuites'.
	duration := aTestResult duration.
	testsInteger := aTestResult runCount.
	errorsInteger := aTestResult errorCount.
	failuresInteger := aTestResult failureCount.
	skippedInteger := aTestResult skippedCount.
	self
		setTestAttributes: suitesNode
		id: nil
		name: suiteName
		duration: duration
		tests: testsInteger
		failures: failuresInteger
		errors: errorsInteger
		skipped: skippedInteger.
	currentId := classTests := classErrors := classFailures := classSkipped := 0.
	classElapsed := Duration zero.
	currentClass := nil.
	suiteNode := nil.
	(aTestResult results asSortedArray: [:a :b | a case <= b case]) do: 
			[:each |
			| caseNode outcome |
			each case class == currentClass
				ifFalse: 
					[suiteNode
						ifNotNil: 
							[self
								setTestAttributes: suiteNode
								id: currentId
								name: currentClass fullName
								duration: classElapsed
								tests: classTests
								failures: classFailures
								errors: classErrors
								skipped: classSkipped.
							suiteNode free].
					currentClass := each case class.
					classTests := classErrors := classFailures := classSkipped := 0.
					classElapsed := Duration zero.
					suiteNode := suitesNode addElement: 'testsuite'.
					currentId := currentId + 1].
			classTests := classTests + 1.
			classElapsed := classElapsed + each duration.
			caseNode := suiteNode addElement: 'testcase'.
			caseAttribs := caseNode attributes.
			caseAttribs
				at: 'name' put: each case selector;
				at: 'classname' put: currentClass fullName.
			outcome := each outcome.
			outcome == #passed
				ifTrue: [caseAttribs at: 'time' put: (each duration printStringFormat: 'SFFFFFF')].
			outcome == #error
				ifTrue: 
					[| errorNode |
					classErrors := classErrors + 1.
					errorNode := caseNode addElement: 'error'.
					errorNode attributes
						at: 'message' put: each signal description;
						at: 'type' put: each signal class fullName;
						free.
					errorNode text: each diagnostic.
					errorNode free].
			outcome == #failed
				ifTrue: 
					[| failureNode |
					classFailures := classFailures + 1.
					failureNode := caseNode addElement: 'failure'.
					failureNode attributes
						at: 'message' put: each signal description;
						at: 'type' put: each signal class fullName;
						free.
					failureNode text: each diagnostic.
					failureNode free].
			outcome == #skipped
				ifTrue: 
					[| skippedNode |
					classSkipped := classSkipped + 1.
					skippedNode := caseNode addElement: 'skipped'.
					skippedNode attributes
						at: 'message' put: each signal description;
						free.
					skippedNode text: each stacktrace.
					skippedNode free].
			caseAttribs free.
			caseNode free].
	"Add the summary information for the final class"
	self
		setTestAttributes: suiteNode
		id: currentId
		name: currentClass fullName
		duration: classElapsed
		tests: classTests
		failures: classFailures
		errors: classErrors
		skipped: classSkipped.
	suiteNode free.
	suitesNode free.
	doc save: (File
				composePath: SessionManager current imageBase
				stem: suiteName
				extension: 'xml').
	doc free! !
!Tools.SmalltalkSystem categoriesForMethods!
regressionTestsLogFilename!public!tests! !
regressionTestSuite!private!tests! !
runRegressionTests!public!tests! !
runRegressionTests:logTo:verbose:!public!tests! !
setTestAttributes:id:name:duration:tests:failures:errors:skipped:!helpers!private! !
writeJunitTestLog:result:!helpers!private! !
!

"End of package definition"!

