| package |
package := Package name: 'OLE Persistence and Data Transfer'.
package paxVersion: 1;
	basicComment: 'Dolphin Smalltalk OLE Persistence and Data Transfer Package. 
Copyright (c) Object Arts Ltd 1998-2023.

OLE persistence to structure storage, streams, memory, property bags, etc, and also uniform data transfer. Mainly wrapper classes for COM interfaces and structs.

This package is as yet incomplete.'.

package basicPackageVersion: '7.1'.


package classNames
	add: #BIND_OPTS;
	add: #BIND_OPTS2;
	add: #BIND_OPTS3;
	add: #BINDINFO;
	add: #DVTARGETDEVICE;
	add: #FORMATETC;
	add: #IAdviseSink;
	add: #IAdviseSink2;
	add: #IAdviseSinkEx;
	add: #IBindCtx;
	add: #IDataObject;
	add: #IEnumMoniker;
	add: #IMoniker;
	add: #IRunningObjectTable;
	add: #STATDATA;
	add: #STGMEDIUM;
	yourself.

package methodNames
	add: #OLELibrary -> #createBindCtx:ppbc:;
	add: #OLELibrary -> #createClassMoniker:ppmk:;
	add: #OLELibrary -> #createFileMoniker:ppmk:;
	add: #OLELibrary -> #createItemMoniker:lpszItem:ppmk:;
	add: #OLELibrary -> #createPointerMoniker:ppmk:;
	add: #OLELibrary -> #getRunningObjectTable:pprot:;
	add: #OLELibrary -> #releaseStgMedium:;
	yourself.

package globalNames
	add: #OLEPersistConstants;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\..\Base\Dolphin'
	'..\COM\OLE COM'
	'OLE Persistence Base'
	'..\Structured Storage\OLE Structured Storage').

package!

"Class Definitions"!

IUnknown subclass: #IAdviseSink
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IBindCtx
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IDataObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IUnknown subclass: #IRunningObjectTable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IAdviseSink subclass: #IAdviseSink2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IAdviseSink subclass: #IAdviseSinkEx
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IEnumUnknown subclass: #IEnumMoniker
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
IPersistStream subclass: #IMoniker
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #BIND_OPTS
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_dwSize _OffsetOf_dwTickCountDeadline _OffsetOf_grfFlags _OffsetOf_grfMode'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #BINDINFO
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_cbstgmedData _OffsetOf_dwBindVerb _OffsetOf_dwSize _OffsetOf_grfBindInfoF _OffsetOf_stgmedData _OffsetOf_szCustomVerb _OffsetOf_szExtraInfo'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #DVTARGETDEVICE
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_tdDeviceNameOffset _OffsetOf_tdDriverNameOffset _OffsetOf_tdExtDevmodeOffset _OffsetOf_tdPortNameOffset _OffsetOf_tdSize'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #FORMATETC
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_cfFormat _OffsetOf_dwAspect _OffsetOf_lindex _OffsetOf_ptd _OffsetOf_tymed'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEStructure subclass: #STATDATA
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_advf _OffsetOf_dwConnection _OffsetOf_formatetc _OffsetOf_pAdvSink'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BIND_OPTS subclass: #BIND_OPTS2
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_dwClassContext _OffsetOf_dwTrackFlags _OffsetOf_locale _OffsetOf_pServerInfo'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
BIND_OPTS2 subclass: #BIND_OPTS3
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_hwnd'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
OLEFinalizableStructure subclass: #STGMEDIUM
	instanceVariableNames: 'value'
	classVariableNames: '_OffsetOf_handle _OffsetOf_lpszFileName _OffsetOf_pstg _OffsetOf_pstm _OffsetOf_pUnkForRelease _OffsetOf_tymed GetSelectors'
	poolDictionaries: 'OLEPersistConstants'
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!OLELibrary methodsFor!

createBindCtx: reserved ppbc: piBindCtx
	"Create a Bind Context Object, answering an IBindCtx interface on it through the out
	parameter, piBindCtx.

		HRESULT CreateBindCtx(
			DWORD reserved,		// Must be 0
 			LPBC FAR* ppbc 		// IBindCtx output
		);"

	<stdcall: hresult CreateBindCtx dword lppvoid>
	^self invalidCall!

createClassMoniker: rclsid ppmk: ppmk
	"Invoke the CreateClassMoniker() function of the module wrapped by the receiver.

		HRESULT __stdcall CreateClassMoniker(
			GUID* rclsid,
			IMoniker** ppmk);"

	<stdcall: hresult CreateClassMoniker guid* IMoniker**>
	^self invalidCall: _failureCode!

createFileMoniker: path ppmk: anIMoniker
	"Create a File Moniker on the path, answering it through 
	the out paramer, anIMoniker.
		HRESULT CreateFileMoniker(
			LPCOLESTR lpszPathName,
			LPMONIKER FAR *ppmk
		);"

	<stdcall: hresult CreateFileMoniker lpwstr lppvoid>
	^self invalidCall!

createItemMoniker: separatorString lpszItem: lpszItem ppmk: ppmk
	"Create an Item Moniker."

	<stdcall: hresult CreateItemMoniker lpwstr lpwstr lppvoid>
	^self invalidCall!

createPointerMoniker: anIUnknown ppmk: anIMoniker
	"Create a pointer moniker on the specified IUnknown, answering it through 
	the out paramer, anIMoniker.
		WINOLEAPI CreatePointerMoniker(
			LPUNKNOWN punk,	//Pointer to the interface to be used
			LPMONIKER FAR *ppmk	//Indirect pointer to the moniker
		);"

	<stdcall: hresult CreatePointerMoniker IUnknown* lppvoid>
	^self invalidCall!

getRunningObjectTable: reserved pprot: pprot
	"Get an IRunningObjectTable on the ROT
		WINOLEAPI GetRunningObjectTable(
			DWORD reserved,
			LPRUNNINGOBJECTTABLE *pprot
		);"

	<stdcall: hresult GetRunningObjectTable dword IRunningObjectTable**>
	^self invalidCall!

releaseStgMedium: aSTGMEDIUM
	"Free the STGMEDIUM argument in the appropriate way for the type of data it contains.
		void ReleaseStgMedium(
			STGMEDIUM * pmedium	//Pointer to storage medium to be freed
		);"

	<stdcall: void ReleaseStgMedium STGMEDIUM* >
	^self invalidCall: _failureCode! !
!OLELibrary categoriesForMethods!
createBindCtx:ppbc:!OLE Functions-Persistent Objects!private! !
createClassMoniker:ppmk:!**auto generated**!public! !
createFileMoniker:ppmk:!OLE Functions-Persistent Objects!public! !
createItemMoniker:lpszItem:ppmk:!OLE Functions-Persistent Objects!public! !
createPointerMoniker:ppmk:!OLE Functions-Persistent Objects!primitives!private! !
getRunningObjectTable:pprot:!OLE Functions-OLE!public! !
releaseStgMedium:!**auto generated**!OLE Functions-Uniform Data Transfer!public! !
!

"End of package definition"!

