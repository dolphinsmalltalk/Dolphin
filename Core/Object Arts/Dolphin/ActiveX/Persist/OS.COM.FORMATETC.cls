"Filed out from Dolphin Smalltalk"!

External.Structure
	subclass: #'OS.COM.FORMATETC'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
			'_FORMATETC_Size' -> 16r14.
			'_OffsetOf_cfFormat' -> 16r0.
			'_OffsetOf_dwAspect' -> 16r8.
			'_OffsetOf_lindex' -> 16rC.
			'_OffsetOf_ptd' -> 16r4.
			'_OffsetOf_tymed' -> 16r10
		}!

OS.COM.FORMATETC guid: (Core.GUID fromString: '{93cc6a56-76b0-48ed-9d91-a4b4b891ef2e}')!

OS.COM.FORMATETC comment: '<FORMATETC> is an <ExternalStructure> class to wrap the struct ''OCIDL.FORMATETC'' from type information in the ''OCIDL Library'' library.

The type library contains no documentation for this struct

WARNING: This comment was automatically generated from the struct''s type information and any changes made here may be overwritten the next time this wrapper class is so generated.'!

!OS.COM.FORMATETC categoriesForClass!External-Data-Structured-COM! !

!OS.COM.FORMATETC methodsFor!

cfFormat
	"Answer the <Integer> value of the receiver's 'cfFormat' field."

	^bytes uint16AtOffset: _OffsetOf_cfFormat!

cfFormat: anInteger
	"Set the receiver's 'cfFormat' field to the value of the argument, anInteger"

	bytes uint16AtOffset: _OffsetOf_cfFormat put: anInteger!

dwAspect
	"Answer the <Integer> value of the receiver's 'dwAspect' field."

	^bytes uint32AtOffset: _OffsetOf_dwAspect!

dwAspect: anInteger
	"Set the receiver's 'dwAspect' field to the value of the argument, anInteger"

	bytes uint32AtOffset: _OffsetOf_dwAspect put: anInteger!

lindex
	"Answer the <Integer> value of the receiver's 'lindex' field."

	^bytes int32AtOffset: _OffsetOf_lindex!

lindex: anInteger
	"Set the receiver's 'lindex' field to the value of the argument, anInteger"

	bytes int32AtOffset: _OffsetOf_lindex put: anInteger!

ptd
	"Answer the <DVTARGETDEVICE> value of the receiver's 'ptd' field."

	^DVTARGETDEVICE fromAddress: (bytes intPtrAtOffset: _OffsetOf_ptd)!

ptd: aDVTARGETDEVICE
	"Set the receiver's 'ptd' field to the value of the argument, aDVTARGETDEVICE"

	bytes uintPtrAtOffset: _OffsetOf_ptd put: aDVTARGETDEVICE yourAddress!

tymed
	"Answer the <Integer> value of the receiver's 'tymed' field."

	^bytes uint32AtOffset: _OffsetOf_tymed!

tymed: anInteger
	"Set the receiver's 'tymed' field to the value of the argument, anInteger"

	bytes uint32AtOffset: _OffsetOf_tymed put: anInteger! !

!OS.COM.FORMATETC categoriesForMethods!
cfFormat!**compiled accessors**!public! !
cfFormat:!**compiled accessors**!public! !
dwAspect!**compiled accessors**!public! !
dwAspect:!**compiled accessors**!public! !
lindex!**compiled accessors**!public! !
lindex:!**compiled accessors**!public! !
ptd!**compiled accessors**!public! !
ptd:!**compiled accessors**!public! !
tymed!**compiled accessors**!public! !
tymed:!**compiled accessors**!public! !
!

!OS.COM.FORMATETC class methodsFor!

defineFields
	"Define the fields of the FORMATETC structure.
		FORMATETC compileDefinition
	N.B. Originally auto-generated by type library analyzer, but hand modified
	to get rid of remote marshalling stuff.

		typedef 		struct tagFORMATETC {
			CLIPFORMAT cfFormat;
			DVTARGETDEVICE* ptd;
			unsigned long dwAspect;
			long lindex;
			unsigned long tymed;
		} FORMATETC;

	"

	self
		defineField: #cfFormat type: UInt16Field new;
		defineField: #ptd type: (PointerField type: DVTARGETDEVICE);
		defineField: #dwAspect type: UInt32Field new;
		defineField: #lindex type: Int32Field new;
		defineField: #tymed type: UInt32Field new!

getFieldNames
	^#(#cfFormat #ptd #dwAspect #lindex #tymed)! !

!OS.COM.FORMATETC class categoriesForMethods!
defineFields!public!template definition! !
getFieldNames!**compiled accessors**!constants!private! !
!

