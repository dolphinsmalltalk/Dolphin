| package |
package := Package name: 'DolphinSure UI'.
package paxVersion: 1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk "DolphinSure" user interface.
Copyright (c) Object Arts Ltd, 1999-2001.

Extends the DolphinSure package with UI elements.

For documentation evaluate:
	SmalltalkSystem help: ''DolphinSure'''.

package basicPackageVersion: '6.0'.

package classNames
	add: #DolphinSureTrustWarning;
	yourself.

package methodNames
	add: #DolphinSureCertificate -> #backgroundImageFile;
	add: #DolphinSureCertificate -> #gap;
	add: #DolphinSureCertificate -> #image;
	add: #DolphinSureCertificate -> #imageAtDpi:;
	add: #DolphinSureCertificate -> #imageAttributes;
	add: #DolphinSureCertificate -> #imagePrint:in:label:in:on:brush:;
	add: #DolphinSureCertificate -> #show;
	add: #DolphinSureCertificationAuthorityCertificate -> #imageAttributes;
	add: #DolphinSurePersonalCertificate -> #backgroundImageFile;
	add: #DolphinSurePersonalCertificate -> #imageAttributes;
	add: #NotSignedCertificate -> #backgroundImageFile;
	add: #NotSignedCertificate -> #imageAttributes;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Base\Dolphin'
	'..\MVP\Base\Dolphin Basic Geometry'
	'..\MVP\Presenters\Boolean\Dolphin Boolean Presenter'
	'..\MVP\Presenters\Image\Dolphin Image Presenter'
	'..\MVP\Base\Dolphin MVP Base'
	'..\MVP\Presenters\Text\Dolphin Text Presenter'
	'..\MVP\Type Converters\Dolphin Type Converters'
	'..\MVP\Models\Value\Dolphin Value Models'
	'DolphinSure'
	'..\MVP\Gdiplus\Gdiplus').

package!

"Class Definitions"!

Dialog subclass: #DolphinSureTrustWarning
	instanceVariableNames: 'certificateImage description alwaysTrust'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Loose Methods"!

!DolphinSureCertificate methodsFor!

backgroundImageFile
	"Private - Answers the resource name of the background image file
	for the receiver"

	^'Resources/DolphinSureCert.jpg'
!

gap	
	"Private - Answers a string to leave a gap"

	^' '!

image
	"Answers an image displaying the certificate details scaled for the system DPI"

	^self imageAtDpi: SystemMetrics current dpi!

imageAtDpi: anInteger
	| extent labelBox image textBox background graphics blackBrush |
	self validData.
	background := GdiplusImage fromFile: self backgroundImageFile
				usingLocator: FileLocator installRelative.
	extent := background extent.
	labelBox := RECTF origin: 35 @ 55 corner: 110 @ (extent y - 20).
	textBox := RECTF origin: 120 @ 55 corner: extent - 20.
	extent := extent * anInteger / 96.0.
	labelBox scaleToDpi: anInteger from: 96.
	textBox scaleToDpi: anInteger from: 96.
	image := GdiplusBitmap width: extent x height: extent y.
	"Set the resolution so that we can specify font sizes using points and have them auto-scaled."
	image resolution: anInteger @ anInteger.
	graphics := image graphics.
	graphics
		interpolationMode: GdiplusConstants.InterpolationModeHighQualityBicubic;
		textRenderingHint: GdiplusConstants.TextRenderingHintClearTypeGridFit;
		drawImage: background
		at: Point zero
		extent: extent.
	background free.
	blackBrush := GdiplusSolidBrush black.
	"Draw attributes"
	self imageAttributes do: 
			[:each |
			| text attributeName |
			attributeName := each value.
			(text := self perform: attributeName) isEmpty
				ifFalse: 
					[self
						imagePrint: text
						in: textBox
						label: each key
						in: labelBox
						on: graphics
						brush: ((attributeName == #validityString and: [self info hasExpired])
								ifTrue: [GdiplusSolidBrush red]
								ifFalse: [blackBrush])]].
	blackBrush free.
	graphics free.
	^image!

imageAttributes
	"Private - Answers a <sequencedReadableCollection> of <Association> detailing the attributes that should appear on a image displaying the certificate details"

	^{'Serial no:' -> #serial.
		'Publisher:' -> #owner.
		'Details:' -> #details.
		'' -> #gap.
		'Purpose:' -> #purpose.
		'' -> #gap.
		'Validity:' -> #validityString.
		'Issued by:' -> #issuingAuthority}!

imagePrint: textString in: textRect label: labelString in: labelRect on: aGdiplusGraphics brush: aGdiplusBrush
	"Private - Prints the attribute of the receiver identified by attributeAssociation on aCanvas
	in labelRect and textRect. The key of the association is a <readableString> that acts as a heading for
	the attribute data while the value is a selector to use to get the attribute data itself. Once
	the attribute has been printed on the canvas then labelRect and textRect are updated to the next location."

	| font height fontName |
	fontName := 'Arial'.
	font := GdiplusFont
				name: fontName
				pointSize: 8
				style: GdiplusConstants.FontStyleBold.
	height := (aGdiplusGraphics
				measureString: labelString
				font: font
				rect: labelRect
				format: nil) height.
	aGdiplusGraphics
		drawString: labelString
		font: font
		rect: labelRect
		format: nil
		brush: aGdiplusBrush.
	font free.
	font := GdiplusFont name: fontName pointSize: 8.
	aGdiplusGraphics
		drawString: textString
		font: font
		rect: textRect
		format: nil
		brush: aGdiplusBrush.
	height := height
				max: (aGdiplusGraphics
						measureString: textString
						font: font
						rect: textRect
						format: nil) height.
	font free.
	labelRect top: labelRect top + height.
	textRect top: textRect top + height!

show
	"Shows the receiver as a splash screen"

	(Splash bitmap: self image) show	! !

!DolphinSureCertificate categoriesForMethods!
backgroundImageFile!constants!private! !
gap!drawing!helpers!private! !
image!drawing!public! !
imageAtDpi:!drawing!public! !
imageAttributes!drawing!helpers!private! !
imagePrint:in:label:in:on:brush:!drawing!helpers!private! !
show!operations!public! !
!

!DolphinSureCertificationAuthorityCertificate methodsFor!

imageAttributes
	"Private - Answers a <sequencedReadableCollection> of <Association> detailing the attributes that should appear on a image displaying the certificate details"

	^{'Serial no:' -> #serial.
		'Certifying Authority:' -> #owner.
		'Details:' -> #details.
		'' -> #gap.
		'Purpose:' -> #purpose.
		'' -> #gap.
		'Validity:' -> #validityString.
		'Issued by:' -> #issuingAuthority}! !

!DolphinSureCertificationAuthorityCertificate categoriesForMethods!
imageAttributes!accessing!private! !
!

!DolphinSurePersonalCertificate methodsFor!

backgroundImageFile
	"Private - Answers the resource name of the background image file
	for the receiver"

	^'Resources/DolphinSurePersonalCert.jpg'
!

imageAttributes
	"Private - Answers a <sequencedReadableCollection> of <Association> detailing the attributes that should appear on a image displaying the certificate details"

	^{'Serial no:' -> #serial.
		'Issued to:' -> #owner.
		'Details:' -> #details.
		'' -> #gap.
		'Purpose:' -> #purpose.
		'' -> #gap.
		'Validity:' -> #validityString.
		'Issued by:' -> #issuingAuthority}! !

!DolphinSurePersonalCertificate categoriesForMethods!
backgroundImageFile!constants!private! !
imageAttributes!drawing!helpers!private! !
!

!NotSignedCertificate methodsFor!

backgroundImageFile
	"Private - Answers the resource name of the background image file
	for the receiver"

	^'Resources/DolphinSureNotSignedCert.jpg'
!

imageAttributes
	"Private - Answers a <sequencedReadableCollection> of <Association> detailing the attributes that should appear on a image displaying the certificate details"

	^{'' -> #gap. 'IMPORTANT:' -> #purpose}! !

!NotSignedCertificate categoriesForMethods!
backgroundImageFile!constants!private! !
imageAttributes!accessing!private! !
!

"End of package definition"!

