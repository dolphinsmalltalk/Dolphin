| package |
package := Package name: 'DolphinSure UI'.
package paxVersion: 1;
	basicComment: 'Dolphin Smalltalk "DolphinSure" user interface.
Copyright (c) Object Arts Ltd, 1999-2001.

Extends the DolphinSure package with UI elements.

For documentation evaluate:
	SmalltalkSystem help: ''DolphinSure'''.

package basicPackageVersion: '6.0'.


package classNames
	add: #DolphinSureTrustWarning;
	yourself.

package methodNames
	add: #DolphinSureCertificate -> #image;
	add: #DolphinSureCertificate -> #imagePrint:on:labelBox:textBox:;
	add: #DolphinSureCertificate -> #show;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\Base\Dolphin';
	add: '..\MVP\Presenters\Boolean\Dolphin Boolean Presenter';
	add: '..\MVP\Presenters\Image\Dolphin Image Presenter';
	add: '..\MVP\Base\Dolphin MVP Base';
	add: '..\MVP\Presenters\Text\Dolphin Text Presenter';
	add: '..\MVP\Type Converters\Dolphin Type Converters';
	add: '..\MVP\Models\Value\Dolphin Value Models';
	add: 'DolphinSure';
	add: '..\ActiveX\Components\Picture\OLE Picture';
	yourself).

package!

"Class Definitions"!

Dialog subclass: #DolphinSureTrustWarning
	instanceVariableNames: 'certificateImage description alwaysTrust'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!DolphinSureCertificate methodsFor!

image
	"Answers an image displaying the certificate details"

	"First validate the certificate"

	| background image extent canvas labelBox textBox |
	self validData.
	background := OLEPicture fromFile: self backgroundImageFile
				usingLocator: FileLocator installRelative.
	extent := background extent.
	image := DIBSection width: extent x height: extent y.
	canvas := image canvas.
	background 
		drawOn: canvas
		at: Point zero
		extent: extent.
	canvas backgroundMode: TRANSPARENT.
	labelBox := Rectangle origin: 35 @ 55 corner: 110 @ (extent y - 20).
	textBox := Rectangle origin: 120 @ 55 corner: extent - 20.

	"Draw attributes"
	self imageAttributes do: 
			[:each | 
			canvas save.
			each value == #validityString ifTrue: [self info hasExpired ifTrue: [canvas forecolor: Color red]].
			self 
				imagePrint: each
				on: canvas
				labelBox: labelBox
				textBox: textBox.
			canvas restore].
	image freeDC.
	^image!

imagePrint: attributeAssociation on: aCanvas labelBox: labelRect textBox: textRect 
	"Private - Prints the attribute of the receiver identified by attributeAssociation on aCanvas
	in labelRect and textRect. The key of the association is a <readableString> that acts as a heading for
	the attribute data while the value is a selector to use to get the attribute data itself. Once
	the attribute has been printed on the canvas then labelRect and textRect are updated to the next location."

	| value |
	(value := self perform: attributeAssociation value) notEmpty 
		ifTrue: 
			[| lh th h |
			aCanvas font: (Font name: 'Arial' pixelSize: 11) beBold.
			lh := aCanvas formatText: attributeAssociation key in: labelRect.
			aCanvas font: (Font name: 'Arial' pixelSize: 11).
			th := aCanvas formatText: value in: textRect.
			h := lh max: th.
			labelRect top: labelRect top + h.
			textRect top: textRect top + h]!

show
	"Shows the receiver as a splash screen"

	(Splash bitmap: self image) show	! !
!DolphinSureCertificate categoriesFor: #image!drawing!public! !
!DolphinSureCertificate categoriesFor: #imagePrint:on:labelBox:textBox:!drawing!helpers!private! !
!DolphinSureCertificate categoriesFor: #show!operations!public! !

"End of package definition"!

