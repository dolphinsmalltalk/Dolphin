| package |
package := Package name: 'Dolphin Base64'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk Base64 Codec
Copyright (c) Object Arts Ltd, 2004.

This package contains a simple but fast implementation of the widely used Base64 binary-to-ASCII text encoding scheme. For further details of Base64 see RFC 3548 (http://www.faqs.org/rfcs/rfc3548.html). Note that the implementation of Base64 is compatible with MIME in that it splits encoded output into lines of 76 characters separated by a CR/LF pair.

The package also extends ByteArray to add methods to store instances in Base64 encoded text form, and to restore instances from that form.'.

package basicPackageVersion: '6.0'.


package setClassNames: #(
	#{Kernel.Base64Codec}
).

package setMethodNames: #(
	#(#{Core.ByteArray} #base64StoreOn:)
	#(#{Core.ByteArray} #printBase64On:)
	#(#{Core.ByteArray class} #fromBase64String:)
).

package setPrerequisites: #(
	'..\..\Base\Dolphin'
).

package!

"Class Definitions"!

Core.Object
	subclass: #'Kernel.Base64Codec'
	instanceVariableNames: 'quadsPerLine isPadded'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
			'DecodingTable'
				-> #[255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 62 255 255 255 63 52 53 54 55 56 57 58 59 60 61 255 255 255 64 255 255 255 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 255 255 255 255 255 255 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255].
			'EncodingTable'
				-> 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
		}!

"Loose Methods"!

!Core.ByteArray methodsFor!

base64StoreOn: puttableStream 
	puttableStream
		nextPut: $(;
		print: self class;
		space;
		nextPutAll: #fromBase64String:;
		space;
		nextPut: $'.
	self printBase64On: puttableStream.
	puttableStream nextPutAll: ''')'!

printBase64On: aStream
	"Append a base64 string representation of the receiver to the <puttableStream> argument."

	Base64Codec encodeFrom: self readStream onto: aStream! !
!Core.ByteArray categoriesForMethods!
base64StoreOn:!printing!public! !
printBase64On:!printing!public! !
!

!Core.ByteArray class methodsFor!

fromBase64String: aString
	| stream |
	stream := self writeStream: (aString size * 3 bitShift: -2).
	Base64Codec decodeFrom: aString readStream onto: stream.
	^stream grabContents! !
!Core.ByteArray class categoriesForMethods!
fromBase64String:!instance creation!public! !
!

"End of package definition"!

