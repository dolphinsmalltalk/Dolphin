| package |
package := Package name: 'Dolphin Tree Models'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk Tree Models.
Copyright (c) Object Arts Ltd. 1997-2001. Portions Copyright (c) CGI Group (Europe) Ltd. 1996.

This package contains the basic Tree Models for use within the MVP framework. These are:
1) TreeModel - a generic <treeModel> that can be used to maintain a hierarchy of any objects and which has a configurable <searchPolicy>.
2) VirtualTreeModel - a pluggable tree model which itself doesn''t actually contain the hierarchy of elements, but which implements the <treeModel> protocol as a facade onto an externally maintained tree (e.g. onto the class hierarchy).
3) ExpandingTreeModel - a half-way house between the basic and virtual tree models that maintains the hierarchy of nodes that have previously been visited. It is suitable for use in cases where the underlying tree may contain cyclic references (i.e. it is not a tree at all), and where a virtual tree is not suitable because the external model has no way to navigate up to parents and/or enumerating children is an expensive operation.'.

package basicPackageVersion: '6.1'.


package setClassNames: #(
	#{UI.ExpandingTreeModel}
	#{UI.TreeModel}
	#{UI.TreeModelAbstract}
	#{UI.TreeNode}
	#{UI.VirtualTreeModel}
).

package setPrerequisites: #(
	'..\..\..\Base\Dolphin'
).

package!

"Class Definitions"!

Core.Object
	subclass: #'UI.TreeNode'
	instanceVariableNames: 'parent children object'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Model
	subclass: #'UI.TreeModelAbstract'
	instanceVariableNames: 'searchPolicy'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.TreeModelAbstract
	subclass: #'UI.TreeModel'
	instanceVariableNames: 'anchorNode objectNodeMap'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.TreeModelAbstract
	subclass: #'UI.VirtualTreeModel'
	instanceVariableNames: 'roots getChildrenBlock getParentBlock hasChildrenBlock filter'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.TreeModel
	subclass: #'UI.ExpandingTreeModel'
	instanceVariableNames: 'getChildrenBlock hasChildrenBlock'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"End of package definition"!

