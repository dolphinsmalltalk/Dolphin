| package |
package := Package name: 'Dolphin MVP (Deprecated)'.
package paxVersion: 1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk Graphical User Interface framework (Deprecated Classes and Methods).

This package includes legacy classes and methods from Dolphin''s base MVP package that have been deprecated. If you have no requirement to use code imported from earlier versions of Dolphin, then this package can be safely uninstalled.
'.

package basicPackageVersion: '6.2'.

package basicScriptAt: #postinstall put: 'self variableNames do: [:each | each binding isDeprecated: true].
Smalltalk resetOldNames'.

package classNames
	add: #ComparisonPolicy;
	add: #DEVMODE;
	add: #LegacyCommandPolicy;
	add: #LOGFONT;
	add: #Msimg32Library;
	add: #MultipleSelectionListBox;
	add: #MultipleSelectionListView;
	yourself.

package methodNames
	add: #AcceleratorTable -> #accelerators;
	add: #AcceleratorTable -> #addKey:commandDescription:;
	add: #BasicListAbstract -> #basicSelectionByIndex:;
	add: #BLENDFUNCTION -> #beAlpha;
	add: #BLENDFUNCTION -> #beNotAlpha;
	add: #BorderLayout -> #hasCenter;
	add: #BorderLayout -> #hasEast;
	add: #BorderLayout -> #hasNorth;
	add: #BorderLayout -> #hasSouth;
	add: #BorderLayout -> #hasWest;
	add: #Canvas -> #fonts:do:;
	add: #Canvas -> #origin:;
	add: #Canvas -> #setBkMode:;
	add: #Canvas -> #setTextColor:;
	add: #Clipboard -> #getObjectBinaryStoreBytes;
	add: #Clipboard -> #getObjectBinaryStoreBytesIfNone:;
	add: #Clipboard -> #setText:format:;
	add: #Color -> #asDword;
	add: #Color -> #asIndexedColor;
	add: #Color -> #saturation;
	add: #ColorRef -> #asIndexedColor;
	add: #ColorRef -> #asIndexedColorUsingPalette:;
	add: #GDILibrary -> #enumFonts:lpFaceName:lpFontFunc:lParam:;
	add: #Image -> #fileLocator:;
	add: #Image -> #identifier:;
	add: #IndexedColor -> #asIndexedColor;
	add: #InplaceTextEditor -> #validationBlock;
	add: #ListBox -> #basicSelectionByIndex:;
	add: #ListModel -> #updateAtIndex:;
	add: #ListModel -> #updateItem:;
	add: #ListModel -> #updateItem:ifAbsent:;
	add: #ListView -> #columns;
	add: #ListView -> #lvmSetExtendedListViewStyle:;
	add: #ListView -> #lvmSetExtendedListViewStyle:dwExStyle:;
	add: #LOGBRUSH -> #style;
	add: #LOGBRUSH -> #style:;
	add: #LOGPEN -> #style;
	add: #LOGPEN -> #style:;
	add: #LVBKIMAGEW -> #offset:;
	add: #Menu -> #find:;
	add: #Menu -> #find:ifAbsent:;
	add: #Menu -> #remove:;
	add: #Menu -> #remove:ifAbsent:;
	add: #Menu -> #replace:with:;
	add: #MoenTreeView -> #updateItem:andChildren:imagesOnly:;
	add: #Point -> #asDword;
	add: #POINT -> #asDword;
	add: #Prompter -> #validationBlock;
	add: #RGB -> #asIndexedColorUsingPalette:;
	add: #ScrollingDecorator -> #continuousTracking;
	add: #ScrollingDecorator -> #continuousTracking:;
	add: #Shell -> #hasCommandHistory:;
	add: #ShellView -> #hasThickFrame;
	add: #ShellView -> #hasThickFrame:;
	add: #Slider -> #hasTicksBoth;
	add: #Slider -> #hasTicksBoth:;
	add: #Slider -> #hasTicksTopOrLeft;
	add: #Slider -> #hasTicksTopOrLeft:;
	add: #Slider -> #selection;
	add: #Slider -> #selection:;
	add: #StatusBarItemAbstract -> #beFullWidth;
	add: #SystemMetrics -> #hasButtonNotes;
	add: #SystemMetrics -> #hasDesktopComposition;
	add: #SystemMetrics -> #hasEnhancedThemes;
	add: #SystemMetrics -> #hasLinkButtons;
	add: #SystemMetrics -> #hasMenuBitmaps;
	add: #SystemMetrics -> #hasMenuImages;
	add: #SystemMetrics -> #hasTreeViewHotTracking;
	add: #SystemMetrics -> #supportsAlphaBlending;
	add: #TextEdit -> #findNextWrapped:down:wholeWord:matchCase:;
	add: #TextEdit -> #isLowercase;
	add: #TextEdit -> #isLowercase:;
	add: #TextEdit -> #isNumeric;
	add: #TextEdit -> #isNumeric:;
	add: #TextEdit -> #isUpdatePerChar:;
	add: #TextEdit -> #isUpperCase;
	add: #TextEdit -> #isUppercase:;
	add: #TextEdit -> #lines;
	add: #TextEdit -> #setModify:;
	add: #TextEdit -> #updatePerChar:;
	add: #TreeView -> #disableExpandAll;
	add: #TreeView -> #disableExpandAll:;
	add: #TypeConverter -> #leftExceptionalValue;
	add: #TypeConverter -> #leftExceptionalValue:;
	add: #TypeConverter -> #rightExceptionalValue;
	add: #TypeConverter -> #rightExceptionalValue:;
	add: #UserLibrary -> #winHelp:lpszHelp:uCommand:dwData:;
	add: #View -> #defaultWindowProcessing:;
	add: #View -> #winHelpPopup:topic:;
	add: #View -> #winHelpPopup:topic:at:;
	add: 'Brush class' -> #dkGray;
	add: 'Brush class' -> #hatchedDiagonal;
	add: 'Brush class' -> #hollow;
	add: 'Brush class' -> #ltGray;
	add: 'ChoicePresenter class' -> #resource_Multiselection_list_box;
	add: 'Color class' -> #buttonFace;
	add: 'ImageList class' -> #width:height:flags:size:growthGranularity:;
	add: 'ListPresenter class' -> #resource_Multiselection_enhanced_list_view;
	add: 'ListPresenter class' -> #resource_Multiselection_list_box;
	add: 'PaintEvent class' -> #handle:wParam:hdc:paintStruct:;
	add: 'Presenter class' -> #addCommandQueryHandler:;
	add: 'Presenter class' -> #removeCommandQueryHandler:;
	add: 'RGB class' -> #stdColor:;
	add: 'SystemColor class' -> #fromId:;
	add: 'TextTileIcon class' -> #text:font:color:;
	add: 'ThemeLibrary class' -> #isAppThemed;
	add: 'WindowsEvent class' -> #message:handle:wParam:lParam:;
	yourself.

package globalNames
	add: #CheckedPushButton;
	add: #CompositePresenter;
	add: #MultipleChoicePresenter;
	add: #StaticViewAbstract;
	add: #Status;
	add: #StatusItem;
	add: #StatusOwnerDraw;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	add: #CheckedPushButton;
	add: #CompositePresenter;
	add: #MultipleChoicePresenter;
	add: #StaticViewAbstract;
	add: #Status;
	add: #StatusItem;
	add: #StatusOwnerDraw;
	yourself).

package setPrerequisites: #(
	'..\..\Base\Dolphin'
	'..\Base\Dolphin Basic Geometry'
	'..\Presenters\Choice\Dolphin Choice Presenter'
	'..\Base\Dolphin Command History'
	'..\Views\Common Controls\Dolphin Common Controls'
	'..\Views\Control Bars\Dolphin Control Bars'
	'..\Presenters\Prompters\Dolphin In-place Text Editor'
	'..\Models\List\Dolphin List Models'
	'..\Presenters\List\Dolphin List Presenter'
	'..\Views\MoenTree\Dolphin MoenTree View'
	'..\Base\Dolphin MVP Base'
	'..\Presenters\Prompters\Dolphin Prompter'
	'..\Views\Scrollbars\Dolphin Scrollbars'
	'..\Views\Slider\Dolphin Slider Control'
	'..\Presenters\Text\Dolphin Text Presenter'
	'..\Icons\Dolphin Text Tile Icons'
	'..\Type Converters\Dolphin Type Converters').

package!

"Class Definitions"!

Object subclass: #ComparisonPolicy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #LOGFONT
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_lfFaceName'
	poolDictionaries: ''
	classInstanceVariableNames: ''!

CommandPolicy subclass: #LegacyCommandPolicy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

ExternalLibrary subclass: #Msimg32Library
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

ExternalStructure subclass: #DEVMODE
	instanceVariableNames: ''
	classVariableNames: '_DEVMODE_Size _OffsetOf_dmBitsPerPel _OffsetOf_dmCollate _OffsetOf_dmColor _OffsetOf_dmCopies _OffsetOf_dmDefaultSource _OffsetOf_dmDeviceName _OffsetOf_dmDisplayFlags _OffsetOf_dmDisplayFrequency _OffsetOf_dmDitherType _OffsetOf_dmDriverExtra _OffsetOf_dmDriverVersion _OffsetOf_dmDuplex _OffsetOf_dmFields _OffsetOf_dmFormName _OffsetOf_dmICMIntent _OffsetOf_dmICMMethod _OffsetOf_dmLogPixels _OffsetOf_dmMediaType _OffsetOf_dmOrientation _OffsetOf_dmPaperLength _OffsetOf_dmPaperSize _OffsetOf_dmPaperWidth _OffsetOf_dmPelsHeight _OffsetOf_dmPelsWidth _OffsetOf_dmPrintQuality _OffsetOf_dmReserved1 _OffsetOf_dmReserved2 _OffsetOf_dmScale _OffsetOf_dmSize _OffsetOf_dmSpecVersion _OffsetOf_dmTTOption _OffsetOf_dmYResolution'
	poolDictionaries: ''
	classInstanceVariableNames: ''!

ListBox subclass: #MultipleSelectionListBox
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

ListView subclass: #MultipleSelectionListView
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!

CheckedPushButton := PushButton!

CompositePresenter := Presenter!

MultipleChoicePresenter := ChoicePresenter!

StaticViewAbstract := StaticView!

Status := StatusBar!

StatusItem := StatusBarItem!

StatusOwnerDraw := StatusBarNullItem!


"Loose Methods"!

!AcceleratorTable methodsFor!

accelerators
	#deprecated.
	^commands associations!

addKey: vKeyCode commandDescription: aCommandDescription 
	#deprecated.
	aCommandDescription acceleratorKey: vKeyCode.
	self addCommand: aCommandDescription! !

!AcceleratorTable categoriesForMethods!
accelerators!accessing!public! !
addKey:commandDescription:!adding!public! !
!

!BasicListAbstract methodsFor!

basicSelectionByIndex: anInteger 
	#deprecated.	"Present for loading of old view resources"
	self setSingleSelection: anInteger! !

!BasicListAbstract categoriesForMethods!
basicSelectionByIndex:!private!selection! !
!

!BLENDFUNCTION methodsFor!

beAlpha
	#deprecated.
	self usePerPixelAlpha: true!

beNotAlpha
	#deprecated.
	self usePerPixelAlpha: false! !

!BLENDFUNCTION categoriesForMethods!
beAlpha!accessing!public! !
beNotAlpha!accessing!public! !
!

!BorderLayout methodsFor!

hasCenter
	"Answer whether a view has been arranged to the centre of the layout."

	^self center notNil!

hasEast
	"Answer whether a view has been arranged to the left edge."

	^self east notNil!

hasNorth
	"Answer whether a view has been arranged to the top edge."

	^self north notNil!

hasSouth
	"Answer whether a view has been arranged to the bottom edge."

	^self south notNil!

hasWest
	"Answer whether a view has been arranged to the right edge."

	^self west notNil! !

!BorderLayout categoriesForMethods!
hasCenter!accessing!public! !
hasEast!accessing!public! !
hasNorth!accessing!public! !
hasSouth!accessing!public! !
hasWest!accessing!public! !
!

!Brush class methodsFor!

dkGray
	Notification deprecated.
	^self darkGray!

hatchedDiagonal
	"Answer a new sub-instance of the receiver for painting diagonal hatching."

	Notification deprecated.
	^HatchBrush diagonal!

hollow
	Notification deprecated.	"Same as transparent"
	^self transparent!

ltGray
	"Answer the stock light grey brush."

	Notification deprecated.
	^self silver! !

!Brush class categoriesForMethods!
dkGray!instance creation!public! !
hatchedDiagonal!instance creation!public! !
hollow!instance creation!public! !
ltGray!instance creation!public! !
!

!Canvas methodsFor!

fonts: aString do: operation
	"Enumerate the fonts in a specified font family that are available on the receiver's device.
	The triadic valuable argument, operation, is passed the LOGFONTW, TEXTMETRICW and font 
	type as its three arguments, and should answer true to continue the enueration, false to 
	terminate it (it must not contain a ^-return).

		int CALLBACK EnumFontsProc(
			lplf lplf,	// pointer to logical-font data 
			lptm lptm,	// pointer to physical-font data 
			DWORD dwType,	// font type 
			LPARAM lpData 	// pointer to application-defined data  
		);"

	| callback answer |
	callback := Callback block: 
					[:lplf :lptm :dwType :lpData |
					operation
						value: lplf
						value: lptm
						value: dwType]
				descriptor: ##(FunctionDescriptor returnType: 'sdword'
						argumentTypes: '<1p>* lpvoid dword uintptr' << LOGFONTW).
	answer := Gdi32
				enumFonts: handle
				lpFaceName: aString
				lpFontFunc: callback asParameter
				lParam: 0.
	callback free.
	^answer!

origin: aPoint
	Notification deprecated.	"5.0: Use #viewportOrigin:"
	^self viewportOrigin: aPoint!

setBkMode: mode
	Notification deprecated.
	^self backgroundMode: mode!

setTextColor: colour
	Notification deprecated.	"6.0 (reprise)"
	^self forecolor: colour! !

!Canvas categoriesForMethods!
fonts:do:!enumerating!public! !
origin:!operations!public! !
setBkMode:!modes!public! !
setTextColor:!modes!public! !
!

!ChoicePresenter class methodsFor!

resource_Multiselection_list_box
	"Answer the literal data from which the 'Multiselection list box' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	Tools.ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Multiselection_list_box)
	"

	^#(#'!!STL' 4 985166 10 ##(UI.STBViewProxy) ##(MultipleSelectionListBox) 34 17 nil nil 34 2 8 1412499713 1025 416 787270 2 ##(ListModel) 138 144 8 #() nil 1638406 ##(IdentitySearchPolicy) 917510 ##(Color) #default nil 5 nil nil nil 416 nil 8 1920482304 786950 ##(Message) #displayString 8 #() 8 #() false 1310982 ##(MessageSequence) 138 144 34 3 1049350 ##(MessageSend) #createAt:extent: 34 2 655878 ##(Point) 6143 21 802 251 351 416 754 #caretIndex: 8 #(1) 416 754 #horizontalExtent: 8 #(0) 416 1179910 ##(WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 11 0 0 10 0 0 0 124 12 0 0 185 0 0 0] 8 #() 802 193 193 nil 27)! !

!ChoicePresenter class categoriesForMethods!
resource_Multiselection_list_box!public!resources-views! !
!

!Clipboard methodsFor!

getObjectBinaryStoreBytes
	"Answer the STB binary store bytes for the <object> stored on the clipboard, or raise an
	exception if none is available."

	Notification deprecated.
	^self getObjectBinaryStoreBytesIfNone: [self errorFormatNotAvailable: #Object]!

getObjectBinaryStoreBytesIfNone: exceptionHandler
	"Answer the STB binary store bytes for an <object> stored on the clipboard. If no object is
	currently available, the answers the result of evaluating the <niladicValuable>
	exceptionHandler."

	Notification deprecated.
	^(self getObjectIfNone: [^exceptionHandler value]) binaryStoreBytes!

setText: text format: formatName
	Notification deprecated.	"Just use setData:format:"
	self setRegisteredFormat: formatName data: text! !

!Clipboard categoriesForMethods!
getObjectBinaryStoreBytes!accessing!public! !
getObjectBinaryStoreBytesIfNone:!accessing!public! !
setText:format:!accessing!public! !
!

!Color methodsFor!

asDword
	#deprecated.
	^self asUInt32!

asIndexedColor
	"Answer the receiver as an <IndexedColor>."

	"IndexedColors are soft-deprecated. You should avoid their deliberate use, although they may continue to exist in older view resources, etc, and be returned from certain older APIs."

	#deprecated.
	^self asRGB asIndexedColor!

saturation
	"Ambiguous as to the color model - this is actually the HLS saturation."

	Notification deprecated.
	^self hls at: 3! !

!Color categoriesForMethods!
asDword!converting!public! !
asIndexedColor!converting!public! !
saturation!accessing!public! !
!

!Color class methodsFor!

buttonFace
	Notification deprecated.
	^Face3d! !

!Color class categoriesForMethods!
buttonFace!instance creation!public! !
!

!ColorRef methodsFor!

asIndexedColor
	"Answer the receiver as an <IndexedColor> mapped using the default palette."

	"IndexedColors are soft-deprecated. You should avoid their deliberate use, although they may continue to exist in older view resources, etc, and be returned from certain older APIs."

	#deprecated.
	^self asIndexedColorUsingPalette: self defaultPalette!

asIndexedColorUsingPalette: hPalette
	"Answer the receiver as the nearest <IndexedColour> using hPalette"

	^self asRGB asIndexedColorUsingPalette: hPalette! !

!ColorRef categoriesForMethods!
asIndexedColor!converting!public! !
asIndexedColorUsingPalette:!converting!public! !
!

!GDILibrary methodsFor!

enumFonts: dcHandle lpFaceName: aString lpFontFunc: aCallbackThunk lParam: anInteger
	"Enumerate the fonts with the specified face name on the specified device throught the
	specified callback with the specified extra parameter.

		int EnumFonts(
			HDC hdc,					// handle of device context 
			LPCTSTR lpFaceName,		// font typeface name string 
			FONTENUMPROC lpFontFunc,	// callback function 
			LPARAM lParam 				// application-supplied data
		);"

	<stdcall: sdword EnumFontsW handle lpwstr lpvoid uintptr>
	#deprecated.
	^self invalidCall: _failureCode! !

!GDILibrary categoriesForMethods!
enumFonts:lpFaceName:lpFontFunc:lParam:!public!win32 functions-font and text! !
!

!Image methodsFor!

fileLocator: aClassLocator
	Notification deprecated.
	initializer fileLocator: aClassLocator!

identifier: id
	Notification deprecated.
	initializer identifier: id! !

!Image categoriesForMethods!
fileLocator:!accessing!public! !
identifier:!accessing!public! !
!

!ImageList class methodsFor!

width: cx height: cy flags: flags size: sizeInteger growthGranularity: growthInteger
	"Answer a new instances with the given parameters."

	#deprecated.
	^self 
		newExtent: cx @ cy
		depth: flags
		initialSize: sizeInteger
		growBy: growthInteger
		masked: false! !

!ImageList class categoriesForMethods!
width:height:flags:size:growthGranularity:!instance creation!public! !
!

!IndexedColor methodsFor!

asIndexedColor
	"Answer the receiver as an <IndexedColor>."

	"IndexedColors are soft-deprecated. You should avoid their deliberate use, although they may continue to exist in older view resources, etc, and be returned from certain older APIs."

	#deprecated.
	^self! !

!IndexedColor categoriesForMethods!
asIndexedColor!converting!public! !
!

!InplaceTextEditor methodsFor!

validationBlock
	#deprecated.
	^[:response | (self validater value: response) value]! !

!InplaceTextEditor categoriesForMethods!
validationBlock!accessing!public! !
!

!ListBox methodsFor!

basicSelectionByIndex: sel
	#deprecated.	"Presenter for old view resources"
	self basicSelectionsByIndex: sel! !

!ListBox categoriesForMethods!
basicSelectionByIndex:!private!selection! !
!

!ListModel methodsFor!

updateAtIndex: anInteger 
	"Update, and answer, an object in the receiver at anInteger index because 
	it's contents have changed. If anInteger index does not exist in the list 
	then raise a suitable exception. Answer anObject."

	| elem |
	#deprecated.	"Use #refreshAtIndex:"
	elem := self list at: anInteger.
	self notifyItem: elem updatedAtIndex: anInteger.
	^elem!

updateItem: anObject
	#deprecated.	"Use #refresh:"
	^self refresh: anObject!

updateItem: anObject ifAbsent: exceptionHandler
	#deprecated.	"Use #refresh:ifAbsent:"
	^self refresh: anObject ifAbsent: exceptionHandler! !

!ListModel categoriesForMethods!
updateAtIndex:!public!updating! !
updateItem:!private!updating! !
updateItem:ifAbsent:!public!searching! !
!

!ListPresenter class methodsFor!

resource_Multiselection_enhanced_list_view
	"Answer the literal data from which the 'Multiselection enhanced list view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	Tools.ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Multiselection_enhanced_list_view)
	"

	^#(#'!!STL' 3 788558 10 ##(STBViewProxy) 8 ##(MultipleSelectionListView) 98 30 0 0 98 2 8 1140920393 1025 416 590662 2 ##(ListModel) 202 208 98 0 0 1114638 ##(STBSingletonProxy) 8 ##(SearchPolicy) 8 #identity 524550 ##(ColorRef) 8 4278190080 0 7 0 0 0 416 0 8 4294902987 459270 ##(Message) 8 #displayString 98 0 8 ##(IconicListAbstract) 570 8 ##(IconImageManager) 8 #current 0 0 0 0 0 0 202 208 98 1 920646 5 ##(ListViewColumn) 8 'Column 1' 201 8 #left 690 720 736 8 ##(SortedCollection) 0 0 416 0 1 0 0 8 #report 544 0 131169 0 0 983302 ##(MessageSequence) 202 208 98 2 721670 ##(MessageSend) 8 #createAt:extent: 98 2 328198 ##(Point) 11 11 1090 401 397 416 1026 8 #text: 98 1 8 'Column 1' 416 983302 ##(WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 0 5 0 0 0 205 0 0 0 203 0 0 0] 98 0 1090 193 193 0 27)!

resource_Multiselection_list_box
	"Answer the literal data from which the 'Multiselection list box' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	Tools.ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Multiselection_list_box)
	"

	^#(#'!!STL' 3 788558 10 ##(STBViewProxy) 8 ##(MultipleSelectionListBox) 98 17 0 0 98 2 8 1144064257 1025 416 590662 2 ##(ListModel) 202 208 98 0 0 1114638 ##(STBSingletonProxy) 8 ##(SearchPolicy) 8 #identity 524550 ##(ColorRef) 8 4278190080 0 7 0 0 0 416 0 8 4294903705 459270 ##(Message) 8 #displayString 98 0 544 32 983302 ##(MessageSequence) 202 208 98 2 721670 ##(MessageSend) 8 #createAt:extent: 98 2 328198 ##(Point) 11 11 882 251 351 416 818 8 #horizontalExtent: 98 1 1 416 983302 ##(WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 0 5 0 0 0 130 0 0 0 180 0 0 0] 98 0 882 193 193 0 27)! !

!ListPresenter class categoriesForMethods!
resource_Multiselection_enhanced_list_view!public!resources-views! !
resource_Multiselection_list_box!public!resources-views! !
!

!ListView methodsFor!

columns
	#deprecated. "5.0"
	^self allColumns copyFrom: 2!

lvmSetExtendedListViewStyle: style
	"Private - Set the extended styles of the receiver.
	Implementation Note: Present for backward compatibility with pre-3.0 resources."

	#deprecated.
	lvStyle := style bitOr: LVS_EX_DOUBLEBUFFER.
	User32
		sendMessage: handle
		msg: LVM_SETEXTENDEDLISTVIEWSTYLE
		wParam: 0
		lpParam: style asParameter!

lvmSetExtendedListViewStyle: anInteger dwExStyle: aBoolean
	"Private - Set the extended styles of the receiver.
	Implementation Note: Present for backward compatibility with Dolphin 3.x resources where this message was included in the state message sequence. This didn't last long, as by Dolphin 4.0 an inst var had been added to hold the style and the message was then sent directly by the ListView>>#onViewCreated method."

	#deprecated.
	self listViewStyleMask: anInteger set: aBoolean! !

!ListView categoriesForMethods!
columns!columns!public! !
lvmSetExtendedListViewStyle:!accessing!private! !
lvmSetExtendedListViewStyle:dwExStyle:!accessing!private! !
!

!LOGBRUSH methodsFor!

style
	Notification deprecated.
	^self lbStyle!

style: anInteger 
	Notification deprecated.
	self lbStyle: anInteger! !

!LOGBRUSH categoriesForMethods!
style!accessing!public! !
style:!accessing!public! !
!

!LOGPEN methodsFor!

style
	Notification deprecated.
	^self lopnStyle!

style: anInteger 
	Notification deprecated.
	self lopnStyle: anInteger! !

!LOGPEN categoriesForMethods!
style!accessing!public! !
style:!accessing!public! !
!

!LVBKIMAGEW methodsFor!

offset: aPoint
	Notification deprecated.	"Use #offsetPercent: or #offsetTile:"
	self
		xOffsetPercent: aPoint x;
		yOffsetPercent: aPoint y! !

!LVBKIMAGEW categoriesForMethods!
offset:!public! !
!

!Menu methodsFor!

find: aString
	"Answer the <MenuItem> whose text matches the <readableString> argument.
	Any & characters in the MenuItems are ignored for the comparison."

	Notification deprecated. "Searching a menu by display string is a poor practice."
	^self find: aString ifAbsent: [self errorNotFound: aString]!

find: aString ifAbsent: exceptionHandler
	"Answer the MenuItem whose text matches the <readableString> argument, or the 
	result of evaluating the <niladicValuable>, exceptionHandler, if there is no matching
	item. Any & characters in the MenuItems are ignored for the comparison."

	Notification deprecated. "Searching a menu by display string is a poor practice."
	^items detect: [:aMenuItem | (aMenuItem text copyWithout: $&) = aString]
		ifNone: exceptionHandler!

remove: aString 
	"Remove the MenuItem whose text matches the <readableString> argument. Any & characters in
	the MenuItems are ignored for the comparison."

	Notification deprecated. "Searching a menu by display string is a poor practice."
	self removeItem: (self find: aString)!

remove: aString ifAbsent: exceptionHandler 
	"Remove the MenuItem whose text matches the <readableString> argument, or the 
	result of evaluating the <niladicValuable>, exceptionHandler, if there is no matching
	item. Any & characters in the MenuItems are ignored for the comparison."

	Notification deprecated. "Searching a menu by display string is a poor practice."
	self removeItem: (self find: aString ifAbsent: [^exceptionHandler value])!

replace: aString with: aMenu
	| index |
	Notification deprecated.	"Searching a menu by display string is a poor practice."
	index := items indexOf: (self find: aString).
	self itemAt: index put: aMenu! !

!Menu categoriesForMethods!
find:!public!searching! !
find:ifAbsent:!public!searching! !
remove:!public!removing! !
remove:ifAbsent:!public!removing! !
replace:with:!public!replacing! !
!

!MoenTreeView methodsFor!

updateItem: element andChildren: andChildren imagesOnly: aBoolean 
	#deprecated.
	self 
		invalidateItem: element
		andChildren: andChildren
		imagesOnly: aBoolean! !

!MoenTreeView categoriesForMethods!
updateItem:andChildren:imagesOnly:!painting!public! !
!

!PaintEvent class methodsFor!

handle: hWnd wParam: wParam hdc: hdc paintStruct: ps
	#deprecated.
	^self
		window: (View fromHandle: hWnd)
		wParam: wParam
		hdc: hdc
		paintStruct: ps! !

!PaintEvent class categoriesForMethods!
handle:wParam:hdc:paintStruct:!instance creation!public! !
!

!Point methodsFor!

asDword
	#deprecated.
	^self asUInt32! !

!Point categoriesForMethods!
asDword!converting!public! !
!

!POINT methodsFor!

asDword
	#deprecated.
	^self asUInt32! !

!POINT categoriesForMethods!
asDword!converting!public! !
!

!Presenter class methodsFor!

addCommandQueryHandler: aSymbol
	Notification deprecated.	"This mechanism is replaced by <commandQuerySelector: #queryBlah:> annotations, declared in the corresponding command methods. These are added to a CommandQueryRegister automatically on package load."
	legacyQueryCommandHandlers := legacyQueryCommandHandlers
				ifNil: [{ aSymbol }]
				ifNotNil: [legacyQueryCommandHandlers copyWith: aSymbol]!

removeCommandQueryHandler: aSymbol
	"Unregister an additional CommandQuery handler to reverse out a previous
	addCommandQueryHandler: call. This should be called by IDE extension packages that are
	uninstalling command handlers."

	Notification deprecated.	"see #addCommandQueryHandler:"
	legacyQueryCommandHandlers := legacyQueryCommandHandlers copyWithout: aSymbol! !

!Presenter class categoriesForMethods!
addCommandQueryHandler:!accessing!public! !
removeCommandQueryHandler:!accessing!public! !
!

!Prompter methodsFor!

validationBlock
	#deprecated.
	^[:response | (self validater value: response) value]! !

!Prompter categoriesForMethods!
validationBlock!accessing!public! !
!

!RGB methodsFor!

asIndexedColorUsingPalette: hPalette
	"Answer the receiver as an IndexedColour using hPalette"

	| index |
	Notification deprecated.
	index := GDILibrary default getNearestPaletteIndex: hPalette crColor: self asCOLORREF.
	^index < 0
		ifTrue: [GDILibrary default systemError]
		ifFalse: [IndexedColor withIndex: (index bitOr: 16r1000000)]! !

!RGB categoriesForMethods!
asIndexedColorUsingPalette:!converting!public! !
!

!RGB class methodsFor!

stdColor: aSymbol
	Notification deprecated.
	^self named: aSymbol! !

!RGB class categoriesForMethods!
stdColor:!instance creation!public! !
!

!ScrollingDecorator methodsFor!

continuousTracking
	#deprecated.
	^self isTrackingContinuous!

continuousTracking: aBoolean 
	#deprecated.
	self isTrackingContinuous: aBoolean! !

!ScrollingDecorator categoriesForMethods!
continuousTracking!modes!public! !
continuousTracking:!modes!public! !
!

!Shell methodsFor!

hasCommandHistory: aBoolean
	"Directly assign a HistoryList to the commandHistory instance variable to add basic undo/redo capability to a Shell. This will create a dependency on the Command History package so that HistoryList and commands are included on application deployment."

	Notification deprecated.
	commandHistory := aBoolean ifTrue: [HistoryList new]! !

!Shell categoriesForMethods!
hasCommandHistory:!accessing!public! !
!

!ShellView methodsFor!

hasThickFrame
	#deprecated. "6.0: #1375"
	^self isResizable!

hasThickFrame: aBoolean 
	#deprecated. "6.0: #1375"
	self isResizable: aBoolean! !

!ShellView categoriesForMethods!
hasThickFrame!accessing-styles!public! !
hasThickFrame:!accessing-styles!public! !
!

!Slider methodsFor!

hasTicksBoth
	#deprecated.
	^self tickStyle == #bothSides!

hasTicksBoth: aBoolean 
	#deprecated.
	self tickStyle: (aBoolean ifTrue: [#bothSides] ifFalse: [#bottom])!

hasTicksTopOrLeft
	#deprecated.
	^#(#top #left) includes: self tickStyle!

hasTicksTopOrLeft: aBoolean 
	#deprecated.
	self tickStyle: (aBoolean ifTrue: [#top] ifFalse: [#bottom])!

selection
	Notification deprecated.
	^self selectionRange!

selection: anIntervalOrNil
	Notification deprecated.
	self selectionRange: anIntervalOrNil! !

!Slider categoriesForMethods!
hasTicksBoth!accessing-styles!public!updating! !
hasTicksBoth:!accessing-styles!public!updating! !
hasTicksTopOrLeft!accessing-styles!public!updating! !
hasTicksTopOrLeft:!accessing-styles!public!updating! !
selection!accessing!public! !
selection:!accessing!public! !
!

!StatusBarItemAbstract methodsFor!

beFullWidth
	Notification deprecated.
	self isAutoResize: true! !

!StatusBarItemAbstract categoriesForMethods!
beFullWidth!accessing!public! !
!

!SystemColor class methodsFor!

fromId: anInteger
	Notification deprecated.
	^self withIndex: anInteger! !

!SystemColor class categoriesForMethods!
fromId:!instance creation!public! !
!

!SystemMetrics methodsFor!

hasButtonNotes
	"Answer whether the host supports 'notes' for link buttons."

	#deprecated. "We no longer support OSs earlier than Vista, so this is always true."
	^true!

hasDesktopComposition
	"Answer whether the host supports off-screen desktop composition,"

	#deprecated. "We no longer support OSs earlier than Vista, so this is always true."
	^true!

hasEnhancedThemes
	"Answer whether the host supports enhanced desktop themes (Vista and later)."

	#deprecated. "We no longer support OSs earlier than Vista, so this is always true."
	^true!

hasLinkButtons
	"Answer whether the host supports link buttons (i.e. push buttons with the BS_COMMANDLINK
	style)."

	#deprecated. "We no longer support OSs earlier than Vista, so this is always true."
	^true!

hasMenuBitmaps
	"Answer whether the host support direct setting of menu bitmaps through the menu item info
	structure. If false they have to be provided through a callback."

	#deprecated. "We no longer support OSs earlier than Vista, so this is always true."
	^true!

hasMenuImages
	"Answer whether the host supports images on menus."

	#deprecated. "We no longer support OSs earlier than Vista, let alone XP."
	^true!

hasTreeViewHotTracking
	"Does the host support hot tracking in tree views?"

	#deprecated. "We no longer support OSs earlier than Vista, so this is always true."
	^true!

supportsAlphaBlending
	"Answer whether the host supports alpha blending."

	#deprecated. "We no longer support OSs earlier than Vista, so this is always true."
	^true! !

!SystemMetrics categoriesForMethods!
hasButtonNotes!capability enquiries!public! !
hasDesktopComposition!capability enquiries!public! !
hasEnhancedThemes!capability enquiries!public! !
hasLinkButtons!capability enquiries!public! !
hasMenuBitmaps!capability enquiries!public! !
hasMenuImages!capability enquiries!public! !
hasTreeViewHotTracking!capability enquiries!public! !
supportsAlphaBlending!capability enquiries!public! !
!

!TextEdit methodsFor!

findNextWrapped: aString down: downBoolean wholeWord: wordBoolean matchCase: caseBoolean
	#deprecated.
	self findNextWrapped: (FindDetails new
				isForwards: downBoolean;
				isWholeWord: wordBoolean;
				isCaseSensitive: caseBoolean;
				isRegularExpression: false;
				action: #findNext;
				yourself)!

isLowercase
	#deprecated.	"6.0: Use #format"
	^self format == #lowercase!

isLowercase: aBoolean 
	#deprecated.	"6.0: Use #format"
	self format: #lowercase!

isNumeric
	#deprecated.	"6.0"
	^self format == #numeric!

isNumeric: aBoolean 
	#deprecated.	"6.0"
	self format: #numeric!

isUpdatePerChar: aBoolean
	Notification deprecated.
	self updateMode: (aBoolean ifTrue: [#perChar] ifFalse: [#focusLost])!

isUpperCase
	#deprecated.	"6.0: Use #format"
	^self format == #uppercase!

isUppercase: aBoolean 
	#deprecated.	"6.0: Use #format:"
	self format: #uppercase!

lines
	#deprecated. "5.0"
	^self lineCount!

setModify: aBoolean 
	"May be used in early version view resources."
	#deprecated.
	self isTextModified: aBoolean!

updatePerChar: aBoolean
	"Set the receiver to update its model as each character is typed if aBoolean is true"

	Notification deprecated.
	self updateMode: (aBoolean ifTrue: [#perChar] ifFalse: [#focusLost])! !

!TextEdit categoriesForMethods!
findNextWrapped:down:wholeWord:matchCase:!public!searching & replacing! !
isLowercase!public!testing! !
isLowercase:!public!testing! !
isNumeric!public!testing! !
isNumeric:!accessing!public! !
isUpdatePerChar:!accessing!public! !
isUpperCase!public!testing! !
isUppercase:!public!testing! !
lines!accessing!public! !
setModify:!modes!public! !
updatePerChar:!accessing!public! !
!

!TextTileIcon class methodsFor!

text: labelString font: fontString color: aColor
	Notification deprecated.
	^self
		text: labelString
		fontName: fontString
		color: aColor! !

!TextTileIcon class categoriesForMethods!
text:font:color:!instance creation!public! !
!

!ThemeLibrary class methodsFor!

isAppThemed
	Notification deprecated.
	^self default isAppThemed! !

!ThemeLibrary class categoriesForMethods!
isAppThemed!private!testing! !
!

!TreeView methodsFor!

disableExpandAll
	#deprecated.
	^self isExpandAllEnabled not!

disableExpandAll: aBoolean 
	#deprecated.
	self isExpandAllEnabled: aBoolean not! !

!TreeView categoriesForMethods!
disableExpandAll!accessing!public! !
disableExpandAll:!accessing!public! !
!

!TypeConverter methodsFor!

leftExceptionalValue
	#deprecated.
	^self leftNullValue!

leftExceptionalValue: anObject
	#deprecated.
	^self leftNullValue: anObject!

rightExceptionalValue
	#deprecated.
	^self rightNullValue!

rightExceptionalValue: anObject
	#deprecated.
	^self rightNullValue: anObject! !

!TypeConverter categoriesForMethods!
leftExceptionalValue!accessing!public! !
leftExceptionalValue:!accessing!public! !
rightExceptionalValue!accessing!public! !
rightExceptionalValue:!accessing!public! !
!

!UserLibrary methodsFor!

winHelp: hwndMain lpszHelp: lpszHelp uCommand: uCommand dwData: dwData
	"Invoke the WinHelp() function of the module wrapped by the receiver.
	Helpstring: Starts windows help and passes a request for help

		BOOL __stdcall WinHelp(
			HWND hwndMain,
			LPCSTR lpszHelp,
			unsigned int uCommand,
			ULONG_PTR dwData);"

	<stdcall: bool WinHelpA handle lpstr dword uintptr>
	^self invalidCall: _failureCode! !

!UserLibrary categoriesForMethods!
winHelp:lpszHelp:uCommand:dwData:!**auto generated**!public! !
!

!View methodsFor!

defaultWindowProcessing: anEvent
	#deprecated.
	^anEvent defaultWindowProcessing!

winHelpPopup: helpFileString topic: topicId 
	#deprecated. "Not supported on Windows 10 and later."
	^self 
		winHelpPopup: helpFileString
		topic: topicId
		at: nil!

winHelpPopup: helpFileString topic: topicId at: aPointOrNil
	#deprecated.	"Not supported on Windows 10 and later."
	aPointOrNil notNil
		ifTrue: 
			[UserLibrary default
				winHelp: View active handle
				lpszHelp: ''
				uCommand: HELP_SETPOPUP_POS
				dwData: aPointOrNil asUIntPtr].
	^UserLibrary default
		winHelp: self handle
		lpszHelp: helpFileString
		uCommand: HELP_CONTEXTPOPUP
		dwData: topicId! !

!View categoriesForMethods!
defaultWindowProcessing:!dispatching!public! !
winHelpPopup:topic:!public! !
winHelpPopup:topic:at:!public! !
!

!WindowsEvent class methodsFor!

message: msgInteger handle: wndHandle wParam: wInteger lParam: lInteger
	#deprecated.
	^self
		window: (View fromHandle: wndHandle)
		message: msgInteger
		wParam: wInteger
		lParam: lInteger! !

!WindowsEvent class categoriesForMethods!
message:handle:wParam:lParam:!public! !
!

"End of package definition"!

