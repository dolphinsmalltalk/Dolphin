| package |
package := Package name: 'Dolphin MVP Tests'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{External.Tests.POINTLArrayTest}
	#{External.Tests.POINTTest}
	#{External.Tests.RECTTest}
	#{Graphics.Tests.AbstractPointTest}
	#{Graphics.Tests.AbstractRectangleTest}
	#{Graphics.Tests.Point3DTest}
	#{Graphics.Tests.PointTest}
	#{Graphics.Tests.RectangleTest}
	#{Graphics.Tests.TextTileIconTest}
	#{OS.Tests.CCITEMTest}
	#{OS.Tests.LVITEMWTest}
	#{OS.Tests.NMGETINFOTIPTest}
	#{OS.Tests.NMLVGETINFOTIPWTest}
	#{OS.Tests.NMTVGETINFOTIPWTest}
	#{OS.Tests.POINTLTest}
	#{OS.Tests.POINTSTest}
	#{OS.Tests.RECTLTest}
	#{OS.Tests.SystemMetricsTest}
	#{OS.Tests.TCITEMWTest}
	#{OS.Tests.TVITEMEXWTest}
	#{OS.Tests.TVITEMWTest}
	#{OS.Tests.WINDOWPLACEMENTTest}
	#{UI.Tests}
	#{UI.Tests.AbstractCardContainerTest}
	#{UI.Tests.AbstractContainerViewTest}
	#{UI.Tests.AbstractKeyboardTest}
	#{UI.Tests.AbstractMultilineTextEditTest}
	#{UI.Tests.AbstractShellViewTest}
	#{UI.Tests.AbstractTabViewTest}
	#{UI.Tests.AbstractTextEditTest}
	#{UI.Tests.AcceleratorTableTest}
	#{UI.Tests.BooleanToTextTest}
	#{UI.Tests.BorderLayoutTest}
	#{UI.Tests.CardContainerTest}
	#{UI.Tests.CheckBoxTest}
	#{UI.Tests.CheckButtonTest}
	#{UI.Tests.ChoicePresenterTest}
	#{UI.Tests.ClipboardTest}
	#{UI.Tests.ColorDialogTest}
	#{UI.Tests.ColorViewTest}
	#{UI.Tests.ComboBoxTest}
	#{UI.Tests.CommandAnnotationsRegisterTest}
	#{UI.Tests.CommandDescriptionTest}
	#{UI.Tests.ContainerViewTest}
	#{UI.Tests.DateTimePickerTest}
	#{UI.Tests.DateToTextTest}
	#{UI.Tests.DialogViewTest}
	#{UI.Tests.DifferencesPresenterTest}
	#{UI.Tests.DisplayMonitorTest}
	#{UI.Tests.DpiAwarenessTest}
	#{UI.Tests.DurationToTextTest}
	#{UI.Tests.EvaluationConverterTest}
	#{UI.Tests.FakeUserLibrary}
	#{UI.Tests.FileDialogTest}
	#{UI.Tests.FlowLayoutTest}
	#{UI.Tests.FolderTest}
	#{UI.Tests.FontViewTest}
	#{UI.Tests.FramingConstraintsTest}
	#{UI.Tests.FramingLayoutTest}
	#{UI.Tests.GridLayoutTest}
	#{UI.Tests.GroupBoxTest}
	#{UI.Tests.HotKeyTest}
	#{UI.Tests.ImageViewAbstractTest}
	#{UI.Tests.ImageViewTest}
	#{UI.Tests.InplaceTextEditorTest}
	#{UI.Tests.IntegerToTextTest}
	#{UI.Tests.InternalDragDropSessionTest}
	#{UI.Tests.KeyboardTest}
	#{UI.Tests.LayoutManagerTest}
	#{UI.Tests.LayoutPlacementTest}
	#{UI.Tests.LinkButtonTest}
	#{UI.Tests.ListBoxTest}
	#{UI.Tests.ListControlTest}
	#{UI.Tests.ListModelTest}
	#{UI.Tests.ListPresenterTest}
	#{UI.Tests.ListTreePresenterTest}
	#{UI.Tests.ListViewTest}
	#{UI.Tests.MenuTest}
	#{UI.Tests.MoenTreeViewTest}
	#{UI.Tests.MonthCalendarViewTest}
	#{UI.Tests.MultilineTextEditTest}
	#{UI.Tests.MultiSelectListBoxTest}
	#{UI.Tests.MultiSelectListViewTest}
	#{UI.Tests.NumberToTextTest}
	#{UI.Tests.PositionEventTest}
	#{UI.Tests.PresenterTest}
	#{UI.Tests.ProgressBarTest}
	#{UI.Tests.ProportionalLayoutTest}
	#{UI.Tests.PushButtonTest}
	#{UI.Tests.RadioButtonSetPresenterTest}
	#{UI.Tests.RadioButtonTest}
	#{UI.Tests.ReferenceViewTest}
	#{UI.Tests.ResourceIdentifierTest}
	#{UI.Tests.RichTextEditTest}
	#{UI.Tests.ScribbleViewTest}
	#{UI.Tests.ScrollBarTest}
	#{UI.Tests.ScrollingDecoratorTest}
	#{UI.Tests.SelectableItemsTest}
	#{UI.Tests.SelectableListItemsTest}
	#{UI.Tests.SelectableTreeItemsTest}
	#{UI.Tests.ShellViewTest}
	#{UI.Tests.SingleSelectListBoxTest}
	#{UI.Tests.SingleSelectListViewTest}
	#{UI.Tests.SliderTest}
	#{UI.Tests.SlideyInneyOuteyThingTest}
	#{UI.Tests.SpinButtonTest}
	#{UI.Tests.SplitterTest}
	#{UI.Tests.StaticBitmapTest}
	#{UI.Tests.StaticIconTest}
	#{UI.Tests.StaticPathTest}
	#{UI.Tests.StaticRectangleTest}
	#{UI.Tests.StaticTextTest}
	#{UI.Tests.StaticViewTest}
	#{UI.Tests.StatusBarTest}
	#{UI.Tests.StyledContainerTest}
	#{UI.Tests.SysLinkViewTest}
	#{UI.Tests.TabViewTest}
	#{UI.Tests.TabViewXPTest}
	#{UI.Tests.TextEditTest}
	#{UI.Tests.TimeToTextTest}
	#{UI.Tests.ToolbarTest}
	#{UI.Tests.TreePresenterTest}
	#{UI.Tests.TypeConverterTest}
	#{UI.Tests.ValueBufferTest}
	#{UI.Tests.ValueConverterTest}
	#{UI.Tests.ValueHolderTest}
	#{UI.Tests.ViewTest}
	#{UI.Tests.WindowsEventTest}
	#{UI.Tests.WizardCardContainerTest}
).

package setMethodNames: #(
	#(#{Kernel.Tests.PackageTest} #testAllResourceIdentifiers)
	#(#{Kernel.Tests.STLFilerTest} #testMinimalResourceReadWrite)
	#(#{Kernel.Tests.STLFilerTest} #testMinimalResourceWrite4)
	#(#{Kernel.Tests.STLFilerTest} #testRectangleReadWrite)
	#(#{Kernel.Tests.STLFilerTest} #testResourceReadWrite4)
	#(#{Kernel.Tests.STLFilerTest} #testResourceReadWrite5)
	#(#{Kernel.Tests.STLFilerTest} #testResourceReadWrite6)
	#(#{Kernel.Tests.STLFilerTest} #testShellReadWrite)
	#(#{Kernel.Tests.STLFilerTest} #verifyRectangleReadWriteAtVersion:)
	#(#{Kernel.Tests.STLFilerTest} #verifyResourceReadWrite:version:)
	#(#{UI.ListView} #getItemImage:)
	#(#{UI.TreeView} #getItemImage:)
).

package setVariableNames: #(
	#{Smalltalk.PresenterTest}
).

package setAliasVariableNames: #(
	#{Smalltalk.PresenterTest}
).

package setPrerequisites: #(
	'..\..\IDE\Base\Development System'
	'..\..\Base\Dolphin'
	'..\Presenters\Accelerator\Dolphin Accelerator Presenter'
	'..\..\Base\Dolphin Anonymous Classes'
	'..\Dialogs\Dolphin Base Dialogs'
	'..\..\Base\Tests\Dolphin Base Tests'
	'..\Base\Dolphin Basic Geometry'
	'..\..\System\Filer\Dolphin Binary Filer'
	'..\Presenters\Boolean\Dolphin Boolean Presenter'
	'..\Views\Cards\Dolphin Card Containers'
	'..\Views\Buttons\Dolphin Check Buttons'
	'..\Presenters\Choice\Dolphin Choice Presenter'
	'..\Presenters\Color\Dolphin Color Presenter'
	'..\Dialogs\Common\Dolphin Common Color Dialog'
	'..\Views\Common Controls\Dolphin Common Controls'
	'..\Dialogs\Common\Dolphin Common Dialogs'
	'..\Views\Control Bars\Dolphin Control Bars'
	'..\Views\Date Time\Dolphin Date Time Controls'
	'..\Presenters\Date Time\Dolphin Date Time Presenters'
	'..\Presenters\Difference\Dolphin Differences Presenter'
	'..\Type Converters\Dolphin Evaluating Type Converter'
	'..\Models\Tree\Dolphin Folder Tree Model'
	'..\Presenters\Font\Dolphin Font Presenter'
	'..\Graphics\Dolphin GDI Graphics'
	'..\Views\Static\GroupBox\Dolphin GroupBox'
	'..\Presenters\Image\Dolphin Image Presenter'
	'..\Presenters\Prompters\Dolphin In-place Text Editor'
	'..\..\Base\Dolphin Legacy Date & Time'
	'..\Models\List\Dolphin List Models'
	'..\Presenters\List\Dolphin List Presenter'
	'..\Presenters\ListTree\Dolphin List Tree Presenter'
	'..\..\System\Filer\Dolphin Literal Filer'
	'..\..\System\Filer\Dolphin Literal Filer (Old versions)'
	'..\..\System\Filer\Dolphin Literal Out Filer'
	'..\Metafiles\Dolphin Metafile Records'
	'..\Views\MoenTree\Dolphin MoenTree View'
	'..\Deprecated\Dolphin MVP (Deprecated)'
	'..\Base\Dolphin MVP Base'
	'..\Presenters\Number\Dolphin Number Presenter'
	'..\Dialogs\Progress\Dolphin Progress Dialog'
	'..\Views\Buttons\Dolphin Push Buttons'
	'..\Presenters\Radio\Dolphin Radio Buttons'
	'..\Presenters\Text\Dolphin Rich Text Presenter'
	'..\Views\Scintilla\Dolphin Scintilla View'
	'..\Views\Scrollbars\Dolphin Scrollbars'
	'..\Views\Slider\Dolphin Slider Control'
	'..\Views\Sliding Tray\Dolphin Slidey-Inney-Outey Thing'
	'..\Views\SpinButton\Dolphin SpinButton Control'
	'..\Views\Splitter\Dolphin Splitter Control'
	'..\Views\Static\Path\Dolphin StaticPath Control'
	'..\Views\Static\Rectangle\Dolphin StaticRectangle Control'
	'..\Views\Static\Text\Dolphin StaticText Control'
	'..\..\System\Filer\Dolphin STx Filer Core'
	'..\..\System\Filer\Dolphin STx Filer Tests'
	'..\Views\Styled Views\Dolphin Styled Views'
	'..\Views\SysLink\Dolphin SysLink Control'
	'..\Presenters\Text\Dolphin Text Presenter'
	'..\Icons\Dolphin Text Tile Icons'
	'..\Models\Tree\Dolphin Tree Models'
	'..\Presenters\Tree\Dolphin Tree Presenter'
	'..\Type Converters\Dolphin Type Converters'
	'..\Models\Value\Dolphin Value Models'
	'..\..\..\Samples\MVP\Scribble\Scribble'
	'Send Input'
	'..\..\..\..\Contributions\Camp Smalltalk\SUnit\SUnit'
	'..\..\..\..\Contributions\Camp Smalltalk\SUnit\SUnitPreload'
).

package setManualPrerequisites: #(
	'Dolphin Anonymous Classes'
).

package!

"Class Definitions"!

UI
	subclass: #'UI.Tests'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{XProgramming.SUnit})
	classInstanceVariableNames: ''
	classConstants: {}!

OS.UserLibrary
	subclass: #'UI.Tests.FakeUserLibrary'
	instanceVariableNames: 'user32 process getForegroundWindowBlock getActiveWindowBlock getCursorPosBlock messages'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.AbstractKeyboardTest'
	instanceVariableNames: 'savedLayout'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'Graphics.Tests.AbstractPointTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'Graphics.Tests.AbstractRectangleTest'
	instanceVariableNames: 'desktop oddDesktop unary'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'OS.Tests.CCITEMTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.CommCtrlConstants})
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.ClipboardTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.ColorDialogTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.CommandAnnotationsRegisterTest'
	instanceVariableNames: 'subclass subclass2'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.CommandDescriptionTest'
	instanceVariableNames: 'savedKeyboardLayout'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.DisplayMonitorTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.DpiAwarenessTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.EvaluationConverterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.FileDialogTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.FolderTest'
	instanceVariableNames: 'c windows system root oa'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.FramingConstraintsTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.InternalDragDropSessionTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.LayoutManagerTest'
	instanceVariableNames: 'shell'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.LayoutPlacementTest'
	instanceVariableNames: 'view'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.MenuTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'OS.Tests.NMGETINFOTIPTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'Graphics.Tests.Point3DTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.PositionEventTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.PresenterTest'
	instanceVariableNames: 'presenter'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.ResourceIdentifierTest'
	instanceVariableNames: 'tempViewResource'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'OS.Tests.SystemMetricsTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'Graphics.Tests.TextTileIconTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.TypeConverterTest'
	instanceVariableNames: 'edit'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.ValueBufferTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.ValueConverterTest'
	instanceVariableNames: 'converter value startTime newTime changed'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.ValueHolderTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'OS.Tests.WINDOWPLACEMENTTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.DolphinTest
	subclass: #'UI.Tests.WindowsEventTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractKeyboardTest
	subclass: #'UI.Tests.AcceleratorTableTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractKeyboardTest
	subclass: #'UI.Tests.KeyboardTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Graphics.Tests.AbstractPointTest
	subclass: #'Graphics.Tests.PointTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Graphics.Tests.AbstractPointTest
	subclass: #'External.Tests.POINTTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{Graphics private})
	classInstanceVariableNames: ''
	classConstants: {}!

External.Tests.POINTTest
	subclass: #'OS.Tests.POINTLTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

External.Tests.POINTTest
	subclass: #'OS.Tests.POINTSTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Graphics.Tests.AbstractRectangleTest
	subclass: #'Graphics.Tests.RectangleTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Graphics.Tests.AbstractRectangleTest
	subclass: #'External.Tests.RECTTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

External.Tests.RECTTest
	subclass: #'OS.Tests.RECTLTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

OS.Tests.CCITEMTest
	subclass: #'OS.Tests.LVITEMWTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.ListViewConstants})
	classInstanceVariableNames: ''
	classConstants: {}!

OS.Tests.CCITEMTest
	subclass: #'OS.Tests.TCITEMWTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

OS.Tests.CCITEMTest
	subclass: #'OS.Tests.TVITEMWTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.TreeViewConstants})
	classInstanceVariableNames: ''
	classConstants: {}!

OS.Tests.TVITEMWTest
	subclass: #'OS.Tests.TVITEMEXWTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Core.Tests.SequencedGrowableCollectionTest
	subclass: #'UI.Tests.ListModelTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

External.Tests.ExternalArrayTest
	subclass: #'External.Tests.POINTLArrayTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.LayoutManagerTest
	subclass: #'UI.Tests.BorderLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.LayoutManagerTest
	subclass: #'UI.Tests.FlowLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.LayoutManagerTest
	subclass: #'UI.Tests.FramingLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.LayoutManagerTest
	subclass: #'UI.Tests.GridLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.LayoutManagerTest
	subclass: #'UI.Tests.ProportionalLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

OS.Tests.NMGETINFOTIPTest
	subclass: #'OS.Tests.NMLVGETINFOTIPWTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

OS.Tests.NMGETINFOTIPTest
	subclass: #'OS.Tests.NMTVGETINFOTIPWTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.AbstractCardContainerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.AbstractContainerViewTest'
	instanceVariableNames: 'initialParentRect'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.AbstractShellViewTest'
	instanceVariableNames: 'fakeUser32 cursorPos shells'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.AbstractTextEditTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.CheckButtonTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.ChoicePresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.ComboBoxTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.DateTimePickerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.DifferencesPresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.GroupBoxTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.HotKeyTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.InplaceTextEditorTest'
	instanceVariableNames: 'clipboard savedText'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.LinkButtonTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.MonthCalendarViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.ProgressBarTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.PushButtonTest'
	instanceVariableNames: 'shell shellButtonA shellButtonB dialog dialogButtonA dialogButtonB'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.RadioButtonSetPresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.ReferenceViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.ScribbleViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.ScrollBarTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.ScrollingDecoratorTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.SelectableItemsTest'
	instanceVariableNames: 'events selectionChanging selectionChanged timedout'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.SliderTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.SpinButtonTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.SplitterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.StaticRectangleTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.StaticViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.StatusBarTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.SysLinkViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.ToolbarTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.PresenterTest
	subclass: #'UI.Tests.ViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractCardContainerTest
	subclass: #'UI.Tests.CardContainerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractCardContainerTest
	subclass: #'UI.Tests.WizardCardContainerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractContainerViewTest
	subclass: #'UI.Tests.ContainerViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractContainerViewTest
	subclass: #'UI.Tests.StyledContainerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractShellViewTest
	subclass: #'UI.Tests.DialogViewTest'
	instanceVariableNames: 'owner shell2'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractShellViewTest
	subclass: #'UI.Tests.ShellViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractTextEditTest
	subclass: #'UI.Tests.AbstractMultilineTextEditTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractTextEditTest
	subclass: #'UI.Tests.TextEditTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractMultilineTextEditTest
	subclass: #'UI.Tests.MultilineTextEditTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractMultilineTextEditTest
	subclass: #'UI.Tests.RichTextEditTest'
	instanceVariableNames: 'savedLocale'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.CheckButtonTest
	subclass: #'UI.Tests.CheckBoxTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.CheckButtonTest
	subclass: #'UI.Tests.RadioButtonTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.SelectableItemsTest
	subclass: #'UI.Tests.SelectableListItemsTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.SelectableItemsTest
	subclass: #'UI.Tests.SelectableTreeItemsTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.SelectableItemsTest
	subclass: #'UI.Tests.SlideyInneyOuteyThingTest'
	instanceVariableNames: 'allowCardChange'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.SelectableListItemsTest
	subclass: #'UI.Tests.AbstractTabViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.SelectableListItemsTest
	subclass: #'UI.Tests.ListControlTest'
	instanceVariableNames: 'clicks'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.SelectableListItemsTest
	subclass: #'UI.Tests.ListPresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractTabViewTest
	subclass: #'UI.Tests.TabViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.AbstractTabViewTest
	subclass: #'UI.Tests.TabViewXPTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.ListControlTest
	subclass: #'UI.Tests.ListBoxTest'
	instanceVariableNames: 'lbnSelChange'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.ListControlTest
	subclass: #'UI.Tests.ListViewTest'
	instanceVariableNames: 'nmClick'
	classVariableNames: ''
	imports: #(#{OS.CommCtrlConstants})
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.ListBoxTest
	subclass: #'UI.Tests.MultiSelectListBoxTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.ListBoxTest
	subclass: #'UI.Tests.SingleSelectListBoxTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.ListViewTest
	subclass: #'UI.Tests.MultiSelectListViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.ListViewTest
	subclass: #'UI.Tests.SingleSelectListViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.ListViewConstants})
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.SelectableTreeItemsTest
	subclass: #'UI.Tests.ListTreePresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.SelectableTreeItemsTest
	subclass: #'UI.Tests.MoenTreeViewTest'
	instanceVariableNames: 'nodeA nodeB nodeC nodeD nodeE nodeF shell scroller useShell'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.SelectableTreeItemsTest
	subclass: #'UI.Tests.TreePresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.CommCtrlConstants})
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.StaticViewTest
	subclass: #'UI.Tests.ColorViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.StaticViewTest
	subclass: #'UI.Tests.FontViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.StaticViewTest
	subclass: #'UI.Tests.ImageViewAbstractTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.StaticViewTest
	subclass: #'UI.Tests.StaticBitmapTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.StaticViewTest
	subclass: #'UI.Tests.StaticIconTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.StaticViewTest
	subclass: #'UI.Tests.StaticPathTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.StaticViewTest
	subclass: #'UI.Tests.StaticTextTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.ImageViewAbstractTest
	subclass: #'UI.Tests.ImageViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.TypeConverterTest
	subclass: #'UI.Tests.BooleanToTextTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.TypeConverterTest
	subclass: #'UI.Tests.DateToTextTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.TypeConverterTest
	subclass: #'UI.Tests.DurationToTextTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.TypeConverterTest
	subclass: #'UI.Tests.IntegerToTextTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.TypeConverterTest
	subclass: #'UI.Tests.NumberToTextTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

UI.Tests.TypeConverterTest
	subclass: #'UI.Tests.TimeToTextTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"Variable Aliases"!

Smalltalk.PresenterTest := UI.Tests.PresenterTest!


"Loose Methods"!

!Kernel.Tests.PackageTest methodsFor!

testAllResourceIdentifiers
	<namespace: UI>
	| rids mvpBase |
	mvpBase := View owningPackage.
	rids := mvpBase allResourceIdentifiers.
	rids do: [:each | self assert: each owningPackage equals: mvpBase]! !

!Kernel.Tests.PackageTest categoriesForMethods!
testAllResourceIdentifiers!public!unit tests! !
!

!Kernel.Tests.STLFilerTest methodsFor!

testMinimalResourceReadWrite
	self outfilerClass version to: self minimumFilerVersion
		by: -1
		do: 
			[:ver |
			self verifyResourceReadWrite: (UI.ResourceIdentifier class: UI.Shell name: 'Default view')
				version: ver]!

testMinimalResourceWrite4
	| shell dolphin7Stl |
	"This is the STL from Dolphin 7.2 of the Shell presenter default view after adding the enhancement to store the MessageSequence message list as an Array rather than an OrderedCollection, and with the 
	placement rectangle deliberately modified to (100@200 extent: 600@400)."
	dolphin7Stl := #(#'!!STL' 4 788558 11 ##(Smalltalk.STBViewProxy) ##(Smalltalk.ShellView) 34 27 nil nil 8 #(13565952 65536) 416 nil 327686 ##(Smalltalk.Color) #default nil 517 nil nil nil 416 nil 170 192 8 #() nil nil nil nil nil 1 nil nil nil nil 1 nil 193 983302 ##(Smalltalk.MessageSequence) 34 1 721670 ##(Smalltalk.MessageSend) #createWindow: 34 1 787462 ##(Smalltalk.CreateWindow) 590342 ##(Smalltalk.Rectangle) 328198 ##(Smalltalk.Point) 201 401 690 1401 1201 193 448 8 '' 416 1 8 #() 690 193 193 nil 27 ).
	self dumpToTranscriptIfDebug: dolphin7Stl.
	
	[| stl |
	shell := (STLInFiler on: dolphin7Stl readStream)
				context: Tools.DesignDesktopView default;
				next.
	self assert: shell extent equals: 600@400.
	shell position: 100 @ 200.
	stl := self literalStoreArrayOf: shell version: 4.
	self dumpToTranscriptIfDebug: stl.
	self assert: stl equals: dolphin7Stl]
			ensure: [shell destroy]!

testRectangleReadWrite
	self outfilerClass version to: self minimumFilerVersion
		by: -1
		do: [:ver | self verifyRectangleReadWriteAtVersion: ver]!

testResourceReadWrite4
	"Tests loading and resaving one of the larger IDE resources (class hierarchy browser) in STL 4 format. The resource contains extended characters, so cannot be round-tripped in STL 3"

	self
		verifyResourceReadWrite: (UI.ResourceIdentifier class: Tools.ClassBrowserShell name: 'Default view')
		version: 4!

testResourceReadWrite5
	"Tests loading and resaving one of the larger IDE resources (class hierarchy browser) in STL 5 format."

	self
		verifyResourceReadWrite: (UI.ResourceIdentifier class: Tools.ClassBrowserShell name: 'Default view')
		version: 5!

testResourceReadWrite6
	"Tests loading and resaving one of the larger IDE resources (class hierarchy browser) in the latest STL format (at least 6)."

	self outfilerClass version to: 6
		by: -1
		do: 
			[:ver |
			self
				verifyResourceReadWrite: (UI.ResourceIdentifier class: Tools.ClassBrowserShell name: 'Default view')
				version: ver]!

testShellReadWrite
	| shell1 shell2 |
	shell1 := UI.ShellView show.
	
	[shell2 := self
				simpleReadWriteOf: shell1
				context: UI.View desktop
				version: self outfilerClass version]
			ensure: 
				[shell1 destroy.
				shell2 destroy]!

verifyRectangleReadWriteAtVersion: anInteger
	| answer myRectangle contents |
	myRectangle := 50 @ 50 extent: 200 @ 200.
	contents := self checkSimpleReadWriteOf: myRectangle version: anInteger.
	self assert: (contents includes: Graphics.Rectangle).
	self assert: (contents includes: Graphics.Point).

	"Check that muliple references are identical"
	answer := self
				simpleReadWriteOf: { myRectangle. myRectangle }
				context: nil
				version: anInteger.
	self assert: answer first equals: myRectangle.
	self assert: answer first identicalTo: answer last!

verifyResourceReadWrite: aResourceIdentifier version: anInteger
	| shells |
	shells := OrderedCollection new.
	
	[| shell shell1 shell2 in stl1 stl2 |
	shells add: (shell := aResourceIdentifier loadWithContext: UI.View desktop).
	stl1 := self literalStoreArrayOf: shell version: anInteger.
	self dumpToTranscriptIfDebug: stl1.
	in := STLInFiler on: stl1 readStream.
	in context: UI.View desktop.
	shells add: (shell1 := in next).
	self assert: shell1 isKindOf: UI.ShellView.
	self assert: shell1 isOpen.
	stl2 := self literalStoreArrayOf: shell1 version: anInteger.
	self dumpToTranscriptIfDebug: stl2.
	self assert: stl2 size equals: stl1 size.
	in := STLInFiler on: stl2 readStream.
	in context: UI.View desktop.
	shells add: (shell2 := in next).
	self assert: shell2 isKindOf: UI.ShellView.
	self assert: shell2 isOpen]
			ensure: [shells do: [:each | each destroy]]! !

!Kernel.Tests.STLFilerTest categoriesForMethods!
testMinimalResourceReadWrite!public!unit tests! !
testMinimalResourceWrite4!public!unit tests! !
testRectangleReadWrite!public!unit tests! !
testResourceReadWrite4!public!unit tests! !
testResourceReadWrite5!public!unit tests! !
testResourceReadWrite6!public!unit tests! !
testShellReadWrite!public!unit tests! !
verifyRectangleReadWriteAtVersion:!helpers!private! !
verifyResourceReadWrite:version:!helpers!private! !
!

!UI.ListView methodsFor!

getItemImage: anInteger
	| item |
	item := LVITEMW newBuffer
				iItem: anInteger - 1;
				mask: LVIF_IMAGE;
				yourself.
	self lvmGetItem: item.
	^item iImage! !

!UI.ListView categoriesForMethods!
getItemImage:!accessing!private! !
!

!UI.TreeView methodsFor!

getItemImage: anExternalHandle
	| tvItem imageIndex |
	tvItem := (TVITEMW hItem: anExternalHandle)
				mask: TVIF_IMAGE;
				yourself.
	User32
		sendMessage: handle
		msg: TVM_GETITEMW
		wParam: 0
		lpParam: tvItem.
	"Note that there is a bug in the control: If I_IMAGENONE is set, the iImage field is set to 65534, suggesting that only 16 bits are written.
	We use a cheesy workaround for this, since at present this operation is only used in tests as there is generally no need to read the image index."
	imageIndex := tvItem iImage.
	^imageIndex == 65534 ifTrue: [I_IMAGENONE] ifFalse: [imageIndex]! !

!UI.TreeView categoriesForMethods!
getItemImage:!helpers!private! !
!

"End of package definition"!

