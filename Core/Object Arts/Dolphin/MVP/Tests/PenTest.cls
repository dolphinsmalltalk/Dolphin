"Filed out from Dolphin Smalltalk"!

DolphinTest subclass: #PenTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

PenTest guid: (GUID fromString: '{27c90edb-56ff-458b-bd0b-bc1f666af916}')!

PenTest comment: ''!

!PenTest categoriesForClass!Unclassified! !

!PenTest methodsFor!

testColor
	self assert: Pen white color equals: Color white.
	self assert: Pen black color equals: Color black.
	self assert: Pen none color equals: Color transparent.
	self assert: Pen red color equals: Color red!

testComparing
	| pen1 pen2 |
	pen1 := Color black pen.
	self assert: pen1 isKindOf: Pen.
	pen2 := Pen black.
	self assert: pen2 isKindOf: StockPen.
	self assert: pen1 equals: pen2.
	self assert: pen1 hash equals: pen2 hash.
	self assert: pen2 equals: pen1.
	pen2 := Pen withStyleName: #solid.
	self assert: pen1 equals: pen2.
	self assert: pen2 equals: pen1.
	self assert: pen1 hash equals: pen2 hash.
	pen2 color: Color red.
	self deny: pen1 equals: pen2.
	self deny: pen1 hash equals: pen2 hash.
	pen1 color: Color red.
	self assert: pen1 equals: pen2.
	self assert: pen1 hash equals: pen2 hash.
	pen2 := Pen dashed.
	pen2 color: Color red.
	self deny: pen1 equals: pen2.
	self deny: pen1 hash equals: pen2 hash.
	pen1 style: Win32Constants.PS_DASH.
	self assert: pen1 equals: pen2.
	self assert: pen1 hash equals: pen2 hash!

testPrinting
	self assert: Pen white printString equals: 'Pen white'.
	self assert: Pen black printString equals: 'Pen black'.
	self assert: Pen null printString equals: 'Pen null'.
	self assert: Color black pen printString equals: 'Pen solid'.
	self assert: Pen null printString equals: 'Pen null'.
	self assert: Pen dashed printString equals: 'Pen dashed'.
	self assert: Pen dotted printString equals: 'Pen dotted'.
	self assert: Pen dashDot printString equals: 'Pen dashDot'.
	self assert: Pen dashDotDot printString equals: 'Pen dashDotDot'.
	self assert: Pen solid printString equals: 'Pen solid'.
	self assert: Pen none printString equals: '(Pen styleName: #null color: Color transparent)'.
	self assert: Pen red printString equals: '(Pen color: Color red)'.
	self assert: (Pen width: 2 color: Color oliveDrab) printString
		equals: '(Pen width: 2 color: Color oliveDrab)'.
	self assert: (Pen
				styleName: #dashed
				width: 3
				color: Color purple) printString
		equals: '(Pen styleName: #dashed width: 3 color: Color purple)'.
	self assert: (Pen styleName: #dashDot color: Color cyan) printString
		equals: '(Pen styleName: #dashDot color: Color cyan)'.
	self assert: (Pen styleName: #dotted width: 3) printString
		equals: '(Pen styleName: #dotted width: 3)'!

testStbConversion
	"Test deserializing Pens serialized at version 0 - anticipating a future change in STB version"

	| pen version0bytes |
	"Dolphin 2.0: Pen white binaryStoreBytes"
	version0bytes := #[33 83 84 66 32 48 32 6 4 8 0 83 116 111 99 107 80 101 110 0 0 0 0 0 0 0 0 32 0 0 0 6 1 6 0 76 79 71 80 69 78 0 0 0 0 54 0 9 0 66 121 116 101 65 114 114 97 121 16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 0 13 0 0 0].
	"STBDebugger dumpToTranscript: version0bytes readStream"
	pen := Object fromBinaryStoreBytes: version0bytes.
	self assert: pen class identicalTo: StockPen.
	self assert: pen equals: Pen white.
	self assert: pen id equals: Win32Constants.WHITE_PEN.
	self assert: pen color equals: Color.White.
	self deny: pen ownsHandle.
	"Dolphin 2.0: (Pen withStyle: 2 width: 3 color: (Color red: 107 green: 142 blue: 35)) binaryStoreBytes"
	version0bytes := #[33 83 84 66 32 48 32 6 3 3 0 80 101 110 0 0 0 0 0 0 0 0 16 0 0 0 6 1 6 0 76 79 71 80 69 78 0 0 0 0 54 0 9 0 66 121 116 101 65 114 114 97 121 16 0 0 0 2 0 0 0 3 0 0 0 0 0 0 0 107 142 35 0].
	"STBDebugger dumpToTranscript: version0bytes readStream"
	pen := Object fromBinaryStoreBytes: version0bytes.
	self assert: pen class identicalTo: Pen.
	self assert: pen
		equals: (Pen
				styleName: #dotted
				width: 3
				color: Color oliveDrab)!

testStbRoundTrip
	| pen bytes |
	bytes := Pen white binaryStoreBytes.
	"STBDebugger dumpToTranscript: version0bytes readStream"
	pen := Object fromBinaryStoreBytes: bytes.
	self assert: pen class identicalTo: StockPen.
	self assert: pen equals: Pen white.
	self assert: pen id equals: Win32Constants.WHITE_PEN.
	self assert: pen color equals: Color.White.
	self deny: pen ownsHandle.
	bytes := (Pen
				withStyle: 2
				width: 3
				color: Color oliveDrab) binaryStoreBytes.
	"STBDebugger dumpToTranscript: version0bytes readStream"
	pen := Object fromBinaryStoreBytes: bytes.
	self assert: pen class identicalTo: Pen.
	self assert: pen
		equals: (Pen
				styleName: #dotted
				width: 3
				color: Color oliveDrab)!

testStlRoundTrip
	| pen array |
	array := Pen white literalStoreArray.
	pen := Object fromLiteralStoreArray: array.
	self assert: pen class identicalTo: StockPen.
	self assert: pen equals: Pen white.
	self assert: pen id equals: Win32Constants.WHITE_PEN.
	self assert: pen color equals: Color.White.
	self deny: pen ownsHandle.
	array := (Pen
				withStyle: 2
				width: 3
				color: Color oliveDrab) literalStoreArray.
	pen := Object fromLiteralStoreArray: array.
	self assert: pen class identicalTo: Pen.
	self assert: pen
		equals: (Pen
				styleName: #dotted
				width: 3
				color: Color oliveDrab)!

testStyleName
	self assert: Pen white styleName equals: #solid.
	self assert: Pen null styleName equals: #solid.
	self assert: Pen none styleName equals: #null.
	self assert: Pen dotted styleName equals: #dotted.
	self assert: Pen insideFrame styleName equals: #insideFrame.
	self assert: (Pen width: 2) styleName equals: #solid.
	self assert: Pen red styleName equals: #solid!

testWidth
	self assert: Pen white width equals: 1.
	self assert: Pen black width equals: 1.
	self assert: Pen red width equals: 1.
	self assert: Pen dotted width equals: 1.
	self assert: (Pen width: 0) width equals: 1.
	self assert: (Pen width: 1) width equals: 1.
	self assert: (Pen width: 2) width equals: 2! !

!PenTest categoriesForMethods!
testColor!public! !
testComparing!public! !
testPrinting!public! !
testStbConversion!public!unit tests! !
testStbRoundTrip!public!unit tests! !
testStlRoundTrip!public!unit tests! !
testStyleName!public! !
testWidth!public! !
!

