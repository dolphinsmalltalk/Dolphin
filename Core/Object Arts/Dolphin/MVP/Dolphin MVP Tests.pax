| package |
package := Package name: 'Dolphin MVP Tests'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{External.Tests.POINTTest}
	#{External.Tests.RECTTest}
	#{Graphics.Tests.AbstractPointTest}
	#{Graphics.Tests.AbstractRectangleTest}
	#{Graphics.Tests.Point3DTest}
	#{Graphics.Tests.PointTest}
	#{Graphics.Tests.RectangleTest}
	#{OS.Tests.POINTLTest}
	#{OS.Tests.POINTSTest}
	#{OS.Tests.RECTLTest}
	#{UI.Tests}
	#{UI.Tests.AbstractContainerViewTest}
	#{UI.Tests.AbstractKeyboardTest}
	#{UI.Tests.AbstractMultilineTextEditTest}
	#{UI.Tests.AbstractShellViewTest}
	#{UI.Tests.AbstractTextEditTest}
	#{UI.Tests.AcceleratorTableTest}
	#{UI.Tests.BorderLayoutTest}
	#{UI.Tests.ChoicePresenterTest}
	#{UI.Tests.ClipboardTest}
	#{UI.Tests.ColorDialogTest}
	#{UI.Tests.CommandDescriptionTest}
	#{UI.Tests.ContainerViewTest}
	#{UI.Tests.DialogViewTest}
	#{UI.Tests.DifferencesPresenterTest}
	#{UI.Tests.DisplayMonitorTest}
	#{UI.Tests.EvaluationConverterTest}
	#{UI.Tests.FakeUserLibrary}
	#{UI.Tests.FileDialogTest}
	#{UI.Tests.FlowLayoutTest}
	#{UI.Tests.FolderTest}
	#{UI.Tests.FramingLayoutTest}
	#{UI.Tests.GridLayoutTest}
	#{UI.Tests.ImageViewAbstractTest}
	#{UI.Tests.ImageViewTest}
	#{UI.Tests.KeyboardTest}
	#{UI.Tests.LayoutManagerTest}
	#{UI.Tests.LinkButtonTest}
	#{UI.Tests.ListBoxTest}
	#{UI.Tests.ListControlTest}
	#{UI.Tests.ListPresenterTest}
	#{UI.Tests.ListViewTest}
	#{UI.Tests.MenuTest}
	#{UI.Tests.MoenTreeViewTest}
	#{UI.Tests.MoenTreeViewTest2}
	#{UI.Tests.MultilineTextEditTest}
	#{UI.Tests.MultiSelectListBoxTest}
	#{UI.Tests.MultiSelectListViewTest}
	#{UI.Tests.PresenterTest}
	#{UI.Tests.ProportionalLayoutTest}
	#{UI.Tests.PushButtonTest}
	#{UI.Tests.RadioButtonSetPresenterTest}
	#{UI.Tests.ReferenceViewTest}
	#{UI.Tests.ResourceIdentifierTest}
	#{UI.Tests.RichTextEditTest}
	#{UI.Tests.ScrollingDecoratorTest}
	#{UI.Tests.SelectableItemsTest}
	#{UI.Tests.SelectableListItemsTest}
	#{UI.Tests.SelectableTreeItemsTest}
	#{UI.Tests.ShellViewTest}
	#{UI.Tests.SingleSelectListBoxTest}
	#{UI.Tests.SingleSelectListViewTest}
	#{UI.Tests.SliderTest}
	#{UI.Tests.StaticPathTest}
	#{UI.Tests.StaticTextTest}
	#{UI.Tests.StatusBarTest}
	#{UI.Tests.StyledContainerTest}
	#{UI.Tests.TabViewTest}
	#{UI.Tests.TabViewXPTest}
	#{UI.Tests.TextEditTest}
	#{UI.Tests.TreePresenterTest}
	#{UI.Tests.TreeViewTest}
	#{UI.Tests.TypeConverterTest}
	#{UI.Tests.ValueConverterTest}
	#{UI.Tests.ViewTest}
	#{UI.Tests.WindowsEventTest}
).

package setMethodNames: #(
	#(#{Kernel.Tests.STLFilerTest} #testRectangleReadWrite)
	#(#{Kernel.Tests.STLFilerTest} #testResourceReadWrite)
	#(#{Kernel.Tests.STLFilerTest} #testShellReadWrite)
).

package setPrerequisites: #(
	'..\IDE\Base\Development System'
	'..\Base\Dolphin'
	'..\Base\Dolphin Anonymous Classes'
	'..\Base\Tests\Dolphin Base Tests'
	'Base\Dolphin Basic Geometry'
	'Presenters\Boolean\Dolphin Boolean Presenter'
	'Presenters\Choice\Dolphin Choice Presenter'
	'Presenters\Color\Dolphin Color Presenter'
	'Views\Common Controls\Dolphin Common Controls'
	'Dialogs\Common\Dolphin Common Dialogs'
	'Views\Control Bars\Dolphin Control Bars'
	'Presenters\Date Time\Dolphin Date Time Presenters'
	'Presenters\Difference\Dolphin Differences Presenter'
	'Models\Tree\Dolphin Folder Tree Model'
	'Graphics\Dolphin GDI Graphics'
	'Presenters\Image\Dolphin Image Presenter'
	'..\Base\Dolphin Legacy Date & Time'
	'Models\List\Dolphin List Models'
	'Presenters\List\Dolphin List Presenter'
	'..\System\Filer\Dolphin Literal Filer'
	'..\System\Filer\Dolphin Literal Filer Tests'
	'Metafiles\Dolphin Metafile Records'
	'Views\MoenTree\Dolphin MoenTree View'
	'Base\Dolphin MVP Base'
	'Presenters\Number\Dolphin Number Presenter'
	'Views\Buttons\Dolphin Push Buttons'
	'Presenters\Radio\Dolphin Radio Buttons'
	'Presenters\Text\Dolphin Rich Text Presenter'
	'Views\Scrollbars\Dolphin Scrollbars'
	'Views\Slider\Dolphin Slider Control'
	'Views\Splitter\Dolphin Splitter Control'
	'Views\Path\Dolphin StaticPath Control'
	'Views\Styled Views\Dolphin Styled Views'
	'Views\SysLink\Dolphin SysLink Control'
	'Presenters\Text\Dolphin Text Presenter'
	'Models\Tree\Dolphin Tree Models'
	'Presenters\Tree\Dolphin Tree Presenter'
	'Type Converters\Dolphin Type Converters'
	'Models\Value\Dolphin Value Models'
	'..\..\..\Contributions\Camp Smalltalk\SUnit\SUnit'
	'..\..\..\Contributions\Camp Smalltalk\SUnit\SUnitPreload'
).

package setManualPrerequisites: #(
	'Dolphin Anonymous Classes'
).

package!

"Class Definitions"!

UI subclass: #'UI.Tests'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{XProgramming.SUnit})
	classInstanceVariableNames: ''
	classConstants: {}!
OS.UserLibrary subclass: #'UI.Tests.FakeUserLibrary'
	instanceVariableNames: 'user32 process getForegroundWindowBlock getActiveWindowBlock getCursorPosBlock'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.AbstractContainerViewTest'
	instanceVariableNames: 'containerView'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.AbstractKeyboardTest'
	instanceVariableNames: 'savedLayout'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'Graphics.Tests.AbstractPointTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'Graphics.Tests.AbstractRectangleTest'
	instanceVariableNames: 'desktop oddDesktop unary'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.AbstractShellViewTest'
	instanceVariableNames: 'fakeUser32 cursorPos shells'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.ClipboardTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.ColorDialogTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.CommandDescriptionTest'
	instanceVariableNames: 'savedKeyboardLayout'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.DisplayMonitorTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.EvaluationConverterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.FileDialogTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.FolderTest'
	instanceVariableNames: 'c windows system root oa'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.LayoutManagerTest'
	instanceVariableNames: 'shell'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.MenuTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.MoenTreeViewTest'
	instanceVariableNames: 'treeModel treeView nodeA nodeB nodeC nodeD nodeE nodeF shell scroller useShell'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'Graphics.Tests.Point3DTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.PresenterTest'
	instanceVariableNames: 'presenter'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.PushButtonTest'
	instanceVariableNames: 'shell shellButtonA shellButtonB dialog dialogButtonA dialogButtonB'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.RadioButtonSetPresenterTest'
	instanceVariableNames: 'radioSet'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.ResourceIdentifierTest'
	instanceVariableNames: 'tempViewResource'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.TypeConverterTest'
	instanceVariableNames: 'edit'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.ValueConverterTest'
	instanceVariableNames: 'converter value startTime newTime changed'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'UI.Tests.WindowsEventTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractContainerViewTest subclass: #'UI.Tests.ContainerViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractContainerViewTest subclass: #'UI.Tests.StyledContainerTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractKeyboardTest subclass: #'UI.Tests.AcceleratorTableTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractKeyboardTest subclass: #'UI.Tests.KeyboardTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Graphics.Tests.AbstractPointTest subclass: #'Graphics.Tests.PointTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Graphics.Tests.AbstractPointTest subclass: #'External.Tests.POINTTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{Graphics private})
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.POINTTest subclass: #'OS.Tests.POINTLTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.POINTTest subclass: #'OS.Tests.POINTSTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Graphics.Tests.AbstractRectangleTest subclass: #'Graphics.Tests.RectangleTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Graphics.Tests.AbstractRectangleTest subclass: #'External.Tests.RECTTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Tests.RECTTest subclass: #'OS.Tests.RECTLTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractShellViewTest subclass: #'UI.Tests.DialogViewTest'
	instanceVariableNames: 'owner shell2'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractShellViewTest subclass: #'UI.Tests.ShellViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.LayoutManagerTest subclass: #'UI.Tests.BorderLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.LayoutManagerTest subclass: #'UI.Tests.FlowLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.LayoutManagerTest subclass: #'UI.Tests.FramingLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.LayoutManagerTest subclass: #'UI.Tests.GridLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.LayoutManagerTest subclass: #'UI.Tests.ProportionalLayoutTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.AbstractTextEditTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.ChoicePresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.DifferencesPresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.ImageViewAbstractTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.LinkButtonTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.ReferenceViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.ScrollingDecoratorTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.SelectableItemsTest'
	instanceVariableNames: 'events selectionChanging selectionChanged timedout'
	classVariableNames: ''
	imports: #(#{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.SliderTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.StaticPathTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.StaticTextTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.StatusBarTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #'UI.Tests.ViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractTextEditTest subclass: #'UI.Tests.AbstractMultilineTextEditTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractTextEditTest subclass: #'UI.Tests.TextEditTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractMultilineTextEditTest subclass: #'UI.Tests.MultilineTextEditTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.AbstractMultilineTextEditTest subclass: #'UI.Tests.RichTextEditTest'
	instanceVariableNames: 'savedLocale'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.ImageViewAbstractTest subclass: #'UI.Tests.ImageViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.SelectableItemsTest subclass: #'UI.Tests.SelectableListItemsTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.SelectableItemsTest subclass: #'UI.Tests.SelectableTreeItemsTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.SelectableListItemsTest subclass: #'UI.Tests.ListControlTest'
	instanceVariableNames: 'clicks'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.SelectableListItemsTest subclass: #'UI.Tests.ListPresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.SelectableListItemsTest subclass: #'UI.Tests.TabViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.ListControlTest subclass: #'UI.Tests.ListBoxTest'
	instanceVariableNames: 'lbnSelChange'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.ListControlTest subclass: #'UI.Tests.ListViewTest'
	instanceVariableNames: 'nmClick'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.ListBoxTest subclass: #'UI.Tests.MultiSelectListBoxTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.ListBoxTest subclass: #'UI.Tests.SingleSelectListBoxTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.ListViewTest subclass: #'UI.Tests.MultiSelectListViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.ListViewTest subclass: #'UI.Tests.SingleSelectListViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.ListViewConstants})
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.TabViewTest subclass: #'UI.Tests.TabViewXPTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.SelectableTreeItemsTest subclass: #'UI.Tests.MoenTreeViewTest2'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.SelectableTreeItemsTest subclass: #'UI.Tests.TreePresenterTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.SelectableTreeItemsTest subclass: #'UI.Tests.TreeViewTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!Kernel.Tests.STLFilerTest methodsFor!

testRectangleReadWrite
	| contents myRectangle answer |
	myRectangle := 50 @ 50 extent: 200 @ 200.
	contents := self checkSimpleReadWriteOf: myRectangle.
	self assert: (contents includes: Graphics.Rectangle).
	self assert: (contents includes: Graphics.Point).

	"Check that muliple references are identical"
	answer := self simpleReadWriteOf: {myRectangle. myRectangle}.
	self assert: answer first equals: myRectangle.
	self assert: answer first identicalTo: answer last!

testResourceReadWrite
	| rid shell shell1 shell2 in contents1 contents2 |
	rid := UI.ResourceIdentifier class: Tools.ClassBrowserShell name: 'Default view'.
	
	[shell := rid loadWithContext: UI.View desktop.
	contents1 := self writeLiteralsFor: shell.
	in := STLInFiler on: contents1 readStream.
	in context: UI.View desktop.
	shell1 := in next.
	self assert: shell1 isKindOf: UI.ShellView.
	self assert: shell1 isOpen.
	contents2 := self writeLiteralsFor: shell1.
	in := STLInFiler on: contents2 readStream.
	in context: UI.View desktop.
	shell2 := in next.
	self assert: shell2 isKindOf: UI.ShellView.
	self assert: shell2 isOpen.
	self assert: contents1 size equals: contents2 size]
			ensure: 
				[shell destroy.
				shell1 destroy.
				shell2 destroy]!

testShellReadWrite
	| shell1 shell2 |
	shell1 := UI.ShellView show.
	[shell2 := self simpleReadWriteOf: shell1 context: UI.View desktop] ensure: 
			[shell1 destroy.
			shell2 destroy]! !
!Kernel.Tests.STLFilerTest categoriesForMethods!
testRectangleReadWrite!public!unit tests! !
testResourceReadWrite!public!unit tests! !
testShellReadWrite!public!unit tests! !
!

"End of package definition"!

