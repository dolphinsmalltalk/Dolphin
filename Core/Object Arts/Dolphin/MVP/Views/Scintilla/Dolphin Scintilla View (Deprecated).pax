| package |
package := Package name: 'Dolphin Scintilla View (Deprecated)'.
package paxVersion: 2.1;
	basicComment: 'Dolphin Smalltalk Scintilla View Deprecated Classes & Methods.

This package includes legacy classes and methods from Dolphin''s Scintilla View package that have been deprecated.'.


package setMethodNames: #(
	#(#{UI.Scintilla.Indicator} #styleName)
	#(#{UI.Scintilla.Indicator class} #styleName:range:)
	#(#{UI.Scintilla.Indicator class} #styleName:range:tag:)
	#(#{UI.Scintilla.IndicatorDefinition class} #styleNames)
	#(#{UI.Scintilla.ScintillaView} #currentLineAlpha:)
	#(#{UI.Scintilla.ScintillaView} #firstVisibleLine:)
	#(#{UI.Scintilla.ScintillaView} #highlightRange:withIndicator:)
	#(#{UI.Scintilla.ScintillaView} #hoverTime)
	#(#{UI.Scintilla.ScintillaView} #hoverTime:)
	#(#{UI.Scintilla.ScintillaView} #indicatorCount)
	#(#{UI.Scintilla.ScintillaView} #indicatorStyles)
	#(#{UI.Scintilla.ScintillaView} #indicatorStyles:)
	#(#{UI.Scintilla.ScintillaView} #isCurrentLineHighlighted:)
	#(#{UI.Scintilla.ScintillaView} #isDrawingBuffered)
	#(#{UI.Scintilla.ScintillaView} #isDrawingBuffered:)
	#(#{UI.Scintilla.ScintillaView} #isDrawingTwoPhase)
	#(#{UI.Scintilla.ScintillaView} #isDrawingTwoPhase:)
	#(#{UI.Scintilla.ScintillaView} #isKeyboardInputUnicode)
	#(#{UI.Scintilla.ScintillaView} #isKeyboardInputUnicode:)
	#(#{UI.Scintilla.ScintillaView} #marginCount)
	#(#{UI.Scintilla.ScintillaView} #marginCount:)
	#(#{UI.Scintilla.ScintillaView} #sciSetEdgeColumn:)
	#(#{UI.Scintilla.ScintillaView} #secondarySelectionAlpha:)
	#(#{UI.Scintilla.ScintillaView} #selectionAlpha:)
	#(#{UI.Scintilla.ScintillaView} #tokenEndAt:)
	#(#{UI.Scintilla.ScintillaView} #tokenRangeAt:)
	#(#{UI.Scintilla.ScintillaView} #tokensFrom:to:)
	#(#{UI.Scintilla.ScintillaView} #tokenStartAt:)
	#(#{UI.Scintilla.ScintillaView} #tokenTextAt:)
).

package setVariableNames: #(
	#{UI.Scintilla.IndicatorStyle}
).

package setAliasVariableNames: #(
	#{UI.Scintilla.IndicatorStyle}
).

package setPrerequisites: #(
	'..\..\..\Base\Dolphin'
	'Dolphin Scintilla View'
).

package!

"Variable Aliases"!

UI.Scintilla.IndicatorStyle := UI.Scintilla.IndicatorDefinition!


"Loose Methods"!

!UI.Scintilla.Indicator methodsFor!

styleName
	"Easy to confuse with the style of indicator drawn (i.e. squiggles, or a box). This actually mean't the name of the type of indicator (the IndicatorDefinition)."

	Notification deprecated.
	^self typeName! !
!UI.Scintilla.Indicator categoriesForMethods!
styleName!public! !
!

!UI.Scintilla.Indicator class methodsFor!

styleName: aSymbolOrInteger range: anInterval
	Notification deprecated.
	^self typeName: aSymbolOrInteger range: anInterval!

styleName: aSymbolOrInteger range: anInterval tag: anObject
	Notification deprecated.
	^self
		typeName: aSymbolOrInteger
		range: anInterval
		tag: anObject! !
!UI.Scintilla.Indicator class categoriesForMethods!
styleName:range:!instance creation!public! !
styleName:range:tag:!instance creation!public! !
!

!UI.Scintilla.IndicatorDefinition class methodsFor!

styleNames
	Notification deprecated.
	^IndicatorStyleNames! !
!UI.Scintilla.IndicatorDefinition class categoriesForMethods!
styleNames!initializing!public! !
!

!UI.Scintilla.ScintillaView methodsFor!

currentLineAlpha: alphaInteger
	#deprecated.	"Set currentLineBackcolor to a ColorAlpha"
	self currentLineBackcolor: (self currentLineBackcolor alpha: alphaInteger)!

firstVisibleLine: anInteger
	"Scroll so that a display line is at the top of the display."

	Notification deprecated.
	self lineScroll: anInteger!

highlightRange: anInterval withIndicator: idInteger 
	"Apply the indicator identified by the <integer> argument to the range of text
	specified by the <Interval> argument."

	#deprecated.
	self setIndicator: idInteger range: anInterval!

hoverTime
	#deprecated.	"Use #hoverDwell"
	^self sciGetMouseDwellTime!

hoverTime: periodMillisecondsInteger
	#deprecated.	"Use #hoverDwell:. Retained to load legacy view state."
	self sciSetMouseDwellTime: periodMillisecondsInteger!

indicatorCount
	"Answer the number of indicators configured for the receiver. With the advent of 'modern'
	indicators, this is now fixed at 32 and not related to the number of style bits used."

	Notification deprecated.
	^INDICATOR_IME!

indicatorStyles
	Notification deprecated.
	^self indicatorDefinitions!

indicatorStyles: aCollection
	Notification deprecated.
	self indicatorDefinitions: aCollection!

isCurrentLineHighlighted: showBoolean
	"Set whether the background of the line containing the caret is highlighted using a in a different colour than the ambient background colour."

	#deprecated.	"Retained for legacy view state."
	self setOrResetElement: SC_ELEMENT_CARET_LINE_BACK
		color: (showBoolean
				ifTrue: [(elementColors lookup: SC_ELEMENT_CARET_LINE_BACK) ifNil: [self defaultCurrentLineBackcolor]])!

isDrawingBuffered
	#deprecated.	"This setting is managed automatically - turned off when using directWrite, or on when using GDI (drawingMode = #default)"
	^self sciGetBufferedDraw!

isDrawingBuffered: bufferedBoolean
	#deprecated.	"This setting is managed automatically - turned off when using directWrite, or on when using GDI (drawingMode = #default)"
	self sciSetBufferedDraw: bufferedBoolean!

isDrawingTwoPhase
	"Is drawing done in two phases with backgrounds drawn before foregrounds?"

	#deprecated.
	^library
		directBooleanFunction: this
		msg: SCI_GETTWOPHASEDRAW
		wParam: 0
		lParam: 0!

isDrawingTwoPhase: twoPhaseBoolean
	"In twoPhaseDraw mode, drawing is performed in two phases, first the background and then the
	foreground. This avoids chopping off characters that overlap the next run."

	#deprecated.
	library
		directFunction: this
		msg: SCI_SETTWOPHASEDRAW
		wParam: twoPhaseBoolean asParameter
		lParam: 0!

isKeyboardInputUnicode
	"Are keys always interpreted as Unicode?"

	#deprecated.
	^library
		directBooleanFunction: this
		msg: SCI_GETKEYSUNICODE
		wParam: 0
		lParam: 0!

isKeyboardInputUnicode: keysUnicodeBoolean
	"Deprecated in 3.5.5 Always interpret keyboard input as Unicode"

	#deprecated.
	library
		directFunction: this
		msg: SCI_SETKEYSUNICODE
		wParam: keysUnicodeBoolean asParameter
		lParam: 0!

marginCount
	"Answer the maximum number of margins that can be displayed. As of Scintilla 3.7.0
	this is no longer fixed at three."

	#deprecated.
	^self sciGetMargins!

marginCount: anInteger
	"Set the maximum number of margins that can be displayed. As of Scintilla 3.7.0
	this is no longer fixed at three."

	#deprecated.
	^self sciSetMargins: anInteger!

sciSetEdgeColumn: columnInteger
	#deprecated. "For reading old view resources"
	self edgeColumn: columnInteger + 1!

secondarySelectionAlpha: alphaInteger
	#deprecated.	"Retained as used in old saved view state."
	self secondarySelectionBackcolor: (self secondarySelectionBackcolor alpha: alphaInteger)!

selectionAlpha: alphaInteger
	#deprecated.	"Retained as used in old saved view state."
	self selectionBackcolor: (self selectionBackcolor alpha: alphaInteger)!

tokenEndAt: anInteger
	#deprecated.	"Imprecise terminology, too easily confused with real scanner tokens. The 'tokens' here are just runs of the same style."
	^self styleRunEndAt: anInteger!

tokenRangeAt: anInteger
	#deprecated.	"Imprecise terminology, too easily confused with real scanner tokens. The 'tokens' here are just runs of the same style."
	^self styleRunRangeAt: anInteger!

tokensFrom: startInteger to: stopInteger
	#deprecated.	"Imprecise terminology, too easily confused with real scanner tokens. The 'tokens' here are just runs of the same style."
	^self styleRunsFrom: startInteger to: stopInteger!

tokenStartAt: anInteger
	#deprecated.	"Imprecise terminology, too easily confused with real scanner tokens. The 'tokens' here are just runs of the same style."
	^self styleRunStartAt: anInteger!

tokenTextAt: anInteger
	#deprecated.
	^self styleRunTextAt: anInteger! !
!UI.Scintilla.ScintillaView categoriesForMethods!
currentLineAlpha:!caret, selection, and hotspot styles!public! !
firstVisibleLine:!public!scrolling! !
highlightRange:withIndicator:!indicators!public! !
hoverTime!other settings!private! !
hoverTime:!other settings!private! !
indicatorCount!constants!indicators!public! !
indicatorStyles!public!scintilla interface! !
indicatorStyles:!public!scintilla interface! !
isCurrentLineHighlighted:!caret, selection, and hotspot styles!public! !
isDrawingBuffered!other settings!public!testing! !
isDrawingBuffered:!other settings!public! !
isDrawingTwoPhase!public!scintilla interface! !
isDrawingTwoPhase:!public!scintilla interface! !
isKeyboardInputUnicode!**auto generated**!other settings!public!scintilla interface!testing! !
isKeyboardInputUnicode:!**auto generated**!other settings!public!scintilla interface! !
marginCount!margins!public!scintilla interface! !
marginCount:!margins!public!scintilla interface! !
sciSetEdgeColumn:!long lines!private!scintilla interface! !
secondarySelectionAlpha:!caret, selection, and hotspot styles!public! !
selectionAlpha:!caret, selection, and hotspot styles!public! !
tokenEndAt:!enquiries!public! !
tokenRangeAt:!enquiries!public! !
tokensFrom:to:!public!text retrieval & modification! !
tokenStartAt:!enquiries!public! !
tokenTextAt:!enquiries!public! !
!

"End of package definition"!

