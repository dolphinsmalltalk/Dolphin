| package |
package := Package name: 'Dolphin Accelerator Presenter'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk Accelerator Presenter.
Copyright (c) Object Arts Ltd, 1997-2002, and CGI Group (Europe) Ltd, 1997.

AcceleratorPresenter is a <valuePresenter> that displays a <valueModel> onto an <integer> key code that represening an accelerator key depression. It is typically used for editing key bindings. The package includes a wrapper for the Windows "Hot Key" common control, which is used as the default view of the presenter.'.

package basicPackageVersion: '6.0'.


package setClassNames: #(
	#{OS.HotKeyConstants}
	#{UI.AcceleratorPresenter}
	#{UI.AccelToHotKey}
	#{UI.HotKey}
).

package setPrerequisites: #(
	'..\..\..\System\Win32\CommCtrl\Common Controls Library'
	'..\..\..\Base\Dolphin'
	'..\..\Base\Dolphin Basic Geometry'
	'..\..\Base\Dolphin ControlViews Base'
	'..\..\Graphics\Dolphin GDI Graphics'
	'..\..\..\System\Filer\Dolphin Literal Filer'
	'..\..\Base\Dolphin MVP Base'
	'..\..\Type Converters\Dolphin Type Converters'
	'..\..\Models\Value\Dolphin Value Models'
).

package!

"Class Definitions"!

Kernel.SharedPool
	subclass: #'OS.HotKeyConstants'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
			'HKCOMB_A' -> 16r8.
			'HKCOMB_C' -> 16r4.
			'HKCOMB_CA' -> 16r40.
			'HKCOMB_NONE' -> 16r1.
			'HKCOMB_S' -> 16r2.
			'HKCOMB_SA' -> 16r20.
			'HKCOMB_SC' -> 16r10.
			'HKCOMB_SCA' -> 16r80.
			'HKM_GETHOTKEY' -> 16r402.
			'HKM_SETHOTKEY' -> 16r401.
			'HKM_SETRULES' -> 16r403.
			'HOTKEYF_ALT' -> 16r4.
			'HOTKEYF_CONTROL' -> 16r2.
			'HOTKEYF_EXT' -> 16r8.
			'HOTKEYF_SHIFT' -> 16r1
		}!
UI.ValuePresenter
	subclass: #'UI.AcceleratorPresenter'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.TypeConverter
	subclass: #'UI.AccelToHotKey'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #(#{OS.HotKeyConstants} #{OS.Win32Constants})
	classInstanceVariableNames: ''
	classConstants: { 'ModifierMap' -> #(16r1 16r4 16r2 16r8 16r4 16r10) }!
UI.ValueConvertingControlView
	subclass: #'UI.HotKey'
	instanceVariableNames: 'invalidCombinationsRule defaultKeyRule'
	classVariableNames: ''
	imports: #(#{OS.HotKeyConstants})
	classInstanceVariableNames: ''
	classConstants: {}!

"End of package definition"!

