| package |
package := Package name: 'Dolphin List Tree Presenter'.
package paxVersion: 1;
	basicComment: 'Copyright © Chris Uppal, 2002 - 2004.
chris.uppal@metagnostic.org

ListTree adds a new kind of View that is a hybrid of ListView and TreeView; it allows you to use ListViewColumns in a TreeView-like presentation.  See the class comment on ListTreeView for some examples and more details.

The terms under which you may use this software are:
	You must not claim that you wrote it.
	You must not claim that you own it.
	You use it at your own risk.

I''d appreciate it if you didn''t distribute modified versions without at least trying to tell me about the changes you thought worthwhile.

I make an exception for Object-Arts -- I''d be very pleased if they were to fold this (or, better, something based on this) into the main image.

Please let me know when you find any problems.

	-- chris


Known Bugs:
-	#Node{Added/Expanded}: notifications are wrongly suppressed during #onItem:movedToParent:
-	Using non-virtual ListTrees with column images causes Windows errors (apparently fixed in Dolphin 5.0.3).
-	Windows always leaves space for an icon in the tree column, even if we don''t want one.


History:

7.00
-	Fix for #recreate loosing connection to treeModel (seems to have been introduced in pl3 or 4).
-	Minor fix to ListTreePresenter>>up
-	Fixed rare bug in #onTreeChanged that could use model''s list object as the "roots" instead of making a copy.
-	Performace tweak closing big trees.
-	Now do an updateStates in smart refresh.
-	Changes to supprt EditableListTreeView.

6.00
-	Fixed bug handling #treeChanged: notification with virtual tree models.
-	Added #useSmartUpdate aspect and #refreshFromModel[Below:].

5.00
-	Minor cosmetic enhancements.
-	Added limited ability to configure open/closed images.
		See #stateImageBlock and #useIconsLikeWinXP.
-	Removed workaround for bug in Dolphin ListView pre 5.0.3.
-	Removed methods deprecated in v3.00.

4.00
-	Changes to examples for D5 pl3 (sort blocks).
-	Minor cosmetic improvement (*very* minor!!).

3.00
-	Uses the Tree/ListModel''s search policy instead of identity comparisons.
		My thanks to Pieter Emmelot for the suggestion.
-	The ''hidden-expanded'' set is no longer Weak (required by the above).
-	Slightly improved consistancy with [Moen]TreeViews'' public protocols.
-	Better emulation of {Tree/List}Views'' #selectionChanging: events.
-	Deprecated:
		TreeListView>>ensureDisplayed:
		TreeListView>>toggle{Expanded/ExpandAll}:
		TreeListView class>>default{List/Tree}ModelClass:

2.00
-	Bugfixes including several suggested by Steve Waring (Thanks Steve!!).
-	Speeded up expanding nodes with lots of children.
-	Completely reimplemented #onItem:movedToParent:.
-	Completely reimplemented #onItem:removedFromParent:.

1.00
-	First release.
'.

package basicPackageVersion: '7.01'.

package basicScriptAt: #postinstall put: '(Package manager packageNamed: ''Dolphin List Tree Presenter'')
	propertyAt: #ExternalResourceFileNames
	put: #(
		''Resources\ListTreeIconsForXP.bmp''
	).
!!'.
package basicScriptAt: #preinstall put: '(Smalltalk at: #CommCtrlConstants)
"	at: ''CDRF_NOTIFYPOSTPAINT''	put: 16r00000010;
	at: ''CDRF_NOTIFYPOSTERASE''	put: 16r00000040;
	at: ''CDDS_PREPAINT''		put: 16r00000001;
	at: ''CDDS_POSTPAINT''		put: 16r00000002;
	at: ''CDDS_PREERASE''		put: 16r00000003;
	at: ''CDDS_POSTERASE''		put: 16r00000004;
	at: ''CDDS_ITEM''			put: 16r00010000;
	at: ''CDDS_ITEMPREPAINT''	put: 16r00010001;
	at: ''CDDS_ITEMPOSTPAINT''	put: 16r00010002;
	at: ''CDDS_ITEMPREERASE''	put: 16r00010003;
	at: ''CDDS_ITEMPOSTERASE''	put: 16r00010004;
	at: ''CDDS_SUBITEM''		put: 16r00020000;
	at: ''LVS_EX_UNDERLINEHOT''	put: 16r00000800;
	at: ''LVS_EX_UNDERLINECOLD''	put: 16r00001000;
"	yourself.
!!'.

package classNames
	add: #ListTreePresenter;
	add: #ListTreeView;
	yourself.

package methodNames
	add: #LVHITTESTINFO -> #isAboveClientArea;
	add: #LVHITTESTINFO -> #isBelowClientArea;
	add: #LVHITTESTINFO -> #isNowhere;
	add: #LVHITTESTINFO -> #isOnItem;
	add: #LVHITTESTINFO -> #isOnItemIcon;
	add: #LVHITTESTINFO -> #isOnItemLabel;
	add: #LVHITTESTINFO -> #isOnItemStateIcon;
	add: #LVHITTESTINFO -> #isToLeft;
	add: #LVHITTESTINFO -> #isToRight;
	add: 'ListPresenter class' -> #resource_ListTree_view;
	add: 'TreePresenter class' -> #resource_ListTree_view;
	yourself.

package globalNames
	add: #ListTreeConstants;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\..\..\Base\Dolphin'
	'..\..\Base\Dolphin Basic Geometry'
	'..\..\Views\Common Controls\Dolphin Common Controls'
	'..\..\Models\List\Dolphin List Models'
	'..\List\Dolphin List Presenter'
	'..\..\Base\Dolphin MVP Base'
	'..\..\Models\Tree\Dolphin Tree Models'
	'..\Tree\Dolphin Tree Presenter').

package!

"Class Definitions"!

ListPresenter subclass: #ListTreePresenter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ListView subclass: #ListTreeView
	instanceVariableNames: 'hasExplicitTreeModel treeModel dummy3 expanded hiddenExpanded options indentSeparation getChildrenBlock hasChildrenBlock getParentBlock sortBlock doSortChildrenBlock dummy2 dummy1'
	classVariableNames: ''
	poolDictionaries: 'ListTreeConstants'
	classInstanceVariableNames: 'stateImageManager stateImageBlock'!

"Global Aliases"!


"Loose Methods"!

!ListPresenter class methodsFor!

resource_ListTree_view
	"Answer the literal data from which the 'ListTree view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_ListTree_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.ListTreeView) 34 44 nil nil 34 2 8 1140920397 1025 416 590662 2 ##(Smalltalk.ListModel) 138 144 8 #() nil 1310726 ##(Smalltalk.IdentitySearchPolicy) 786694 ##(Smalltalk.ColorDefault) 8 4278190080 nil 7 nil nil nil 416 nil 8 1915211424 ##(Smalltalk.BasicListAbstract) ##(Smalltalk.IconicListAbstract) 1049926 1 ##(Smalltalk.IconImageManager) nil nil nil nil nil nil 138 144 34 1 920646 5 ##(Smalltalk.ListViewColumn) 8 'Column 1' 393 #left ##(Smalltalk.BasicListAbstract) 459270 ##(Smalltalk.Message) #<= 8 #() nil nil 416 nil 3 nil nil #report 528 nil 133217 nil 34 4 nil nil 328198 ##(Smalltalk.Point) 1 1 nil true 1050438 3 ##(Smalltalk.VirtualTreeModel) nil 560 138 144 528 787814 3 ##(Smalltalk.BlockClosure) 0 nil 918822 ##(Smalltalk.CompiledMethod) 2 3 848 #defaultGetChildrenBlock 42440101 8 #[30 105 226 0 106] #children 912 7 257 nil 898 0 nil 930 2 3 848 #defaultGetParentBlock 42415045 8 #[30 105 226 0 106] #parent 976 7 257 nil 898 0 nil 930 2 3 848 #defaultHasChildrenBlock 42500293 8 #[252 1 0 0 1 4 0 65 176 159 106 105] #childrenOf: #notEmpty 17 257 864 898 0 nil 930 1 83886083 848 #defaultFilterBlock 42430373 8 #[29 105 17 157 106] 1072 7 257 nil nil 138 ##(Smalltalk.PluggableSet) 528 138 ##(Smalltalk.PluggableSet) 528 37 1 nil nil nil nil nil nil nil 983302 ##(Smalltalk.MessageSequence) 138 144 34 2 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 818 3839 21 818 401 701 416 1218 #text: 34 1 8 'Column 1' 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 127 7 0 0 10 0 0 0 71 8 0 0 104 1 0 0] 8 #() 818 193 193 nil 2021 )! !
!ListPresenter class categoriesFor: #resource_ListTree_view!public!resources-views! !

!LVHITTESTINFO methodsFor!

isAboveClientArea
	"Answers whether the position is above the control's client area."
#CUadded.
	^ self flags allMask: LVHT_ABOVE.!

isBelowClientArea
	"Answers whether the position is below the control's client area."
#CUadded.
	^ self flags allMask: LVHT_BELOW.!

isNowhere
	"Answers whether the position is in the control's client area but not over an item."
#CUadded.
	^ self flags allMask: LVHT_NOWHERE.!

isOnItem
	"Answers whether the position is over an item's label, icon, or state icon."
#CUadded.
	^ self flags anyMask: LVHT_ONITEM.!

isOnItemIcon
	"Answers whether the position is over an item's icon."

#CUadded.

	"if the hit is on the same line as the item, but not over any of its formal
	elements, then Window's seems to set all the LVHT_ISONITEM* flags"
	^ (self flags bitAnd: LVHT_ONITEM) = LVHT_ONITEMICON.!

isOnItemLabel
	"Answers whether the position is over an item's label."

#CUadded.

	"if the hit is on the same line as the item, but not over any of its formal
	elements, then Window's seems to set all the LVHT_ISONITEM* flags"
	^ (self flags bitAnd: LVHT_ONITEM) = LVHT_ONITEMLABEL.!

isOnItemStateIcon
	"Answers whether the position is over an item's state icon."

#CUadded.

	"if the hit is on the same line as the item, but not over any of its formal
	elements, then Window's seems to set all the LVHT_ISONITEM* flags"
	^ (self flags bitAnd: LVHT_ONITEM) = LVHT_ONITEMSTATEICON.!

isToLeft
	"Answers whether the position is to the left of the control's client area."
#CUadded.
	^ self flags allMask: LVHT_TOLEFT.!

isToRight
	"Answers whether the position is to the right of the control's client area."
#CUadded.
	^ self flags allMask: LVHT_TORIGHT.! !
!LVHITTESTINFO categoriesFor: #isAboveClientArea!public!testing! !
!LVHITTESTINFO categoriesFor: #isBelowClientArea!public!testing! !
!LVHITTESTINFO categoriesFor: #isNowhere!public!testing! !
!LVHITTESTINFO categoriesFor: #isOnItem!public!testing! !
!LVHITTESTINFO categoriesFor: #isOnItemIcon!public!testing! !
!LVHITTESTINFO categoriesFor: #isOnItemLabel!public!testing! !
!LVHITTESTINFO categoriesFor: #isOnItemStateIcon!public!testing! !
!LVHITTESTINFO categoriesFor: #isToLeft!public!testing! !
!LVHITTESTINFO categoriesFor: #isToRight!public!testing! !

!TreePresenter class methodsFor!

resource_ListTree_view
	"Answer the literal data from which the 'ListTree view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_ListTree_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.ListTreeView) 34 44 nil nil 34 2 8 1140920397 1025 416 590662 2 ##(Smalltalk.ListModel) 138 144 8 #() nil 1310726 ##(Smalltalk.IdentitySearchPolicy) 786694 ##(Smalltalk.ColorDefault) 8 4278190080 nil 7 nil nil nil 416 nil 8 1915211424 ##(Smalltalk.BasicListAbstract) ##(Smalltalk.IconicListAbstract) 1049926 1 ##(Smalltalk.IconImageManager) nil nil nil nil nil nil 138 144 34 1 920646 5 ##(Smalltalk.ListViewColumn) 8 'Column 1' 397 #left ##(Smalltalk.BasicListAbstract) 459270 ##(Smalltalk.Message) #<= 8 #() nil nil 416 nil 3 nil nil #report 528 nil 133217 nil 34 4 nil nil 328198 ##(Smalltalk.Point) 1 1 nil true 1050438 3 ##(Smalltalk.VirtualTreeModel) nil 560 138 144 528 787814 3 ##(Smalltalk.BlockClosure) 0 nil 918822 ##(Smalltalk.CompiledMethod) 2 3 848 #defaultGetChildrenBlock 42440101 8 #[30 105 226 0 106] #children 912 7 257 nil 898 0 nil 930 2 3 848 #defaultGetParentBlock 42415045 8 #[30 105 226 0 106] #parent 976 7 257 nil 898 0 nil 930 2 3 848 #defaultHasChildrenBlock 42500293 8 #[252 1 0 0 1 4 0 65 176 159 106 105] #childrenOf: #notEmpty 17 257 864 898 0 nil 930 1 83886083 848 #defaultFilterBlock 42430373 8 #[29 105 17 157 106] 1072 7 257 nil nil 138 ##(Smalltalk.PluggableSet) 528 138 ##(Smalltalk.PluggableSet) 528 37 1 nil nil nil nil nil nil nil 983302 ##(Smalltalk.MessageSequence) 138 144 34 2 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 818 3839 21 818 405 701 416 1218 #text: 34 1 8 'Column 1' 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 127 7 0 0 10 0 0 0 73 8 0 0 104 1 0 0] 8 #() 818 193 193 nil 2021 )! !
!TreePresenter class categoriesFor: #resource_ListTree_view!public!resources-views! !

"End of package definition"!

