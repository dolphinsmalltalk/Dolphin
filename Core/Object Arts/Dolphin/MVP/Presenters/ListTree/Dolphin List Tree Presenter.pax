| package |
package := Package name: 'Dolphin List Tree Presenter'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Copyright © Chris Uppal, 2002 - 2004.
chris.uppal@metagnostic.org

ListTree adds a new kind of View that is a hybrid of ListView and TreeView; it allows you to use ListViewColumns in a TreeView-like presentation.  See the class comment on ListTreeView for some examples and more details.

The terms under which you may use this software are:
	You must not claim that you wrote it.
	You must not claim that you own it.
	You use it at your own risk.

I''d appreciate it if you didn''t distribute modified versions without at least trying to tell me about the changes you thought worthwhile.

I make an exception for Object-Arts -- I''d be very pleased if they were to fold this (or, better, something based on this) into the main image.

Please let me know when you find any problems.

	-- chris


Known Bugs:
-	#Node{Added/Expanded}: notifications are wrongly suppressed during #onItem:movedToParent:
-	Using non-virtual ListTrees with column images causes Windows errors (apparently fixed in Dolphin 5.0.3).
-	Windows always leaves space for an icon in the tree column, even if we don''t want one.


History:

7.00
-	Fix for #recreate loosing connection to treeModel (seems to have been introduced in pl3 or 4).
-	Minor fix to ListTreePresenter>>up
-	Fixed rare bug in #onTreeChanged that could use model''s list object as the "roots" instead of making a copy.
-	Performace tweak closing big trees.
-	Now do an updateStates in smart refresh.
-	Changes to supprt EditableListTreeView.

6.00
-	Fixed bug handling #treeChanged: notification with virtual tree models.
-	Added #useSmartUpdate aspect and #refreshFromModel[Below:].

5.00
-	Minor cosmetic enhancements.
-	Added limited ability to configure open/closed images.
		See #stateImageBlock and #useIconsLikeWinXP.
-	Removed workaround for bug in Dolphin ListView pre 5.0.3.
-	Removed methods deprecated in v3.00.

4.00
-	Changes to examples for D5 pl3 (sort blocks).
-	Minor cosmetic improvement (*very* minor!!).

3.00
-	Uses the Tree/ListModel''s search policy instead of identity comparisons.
		My thanks to Pieter Emmelot for the suggestion.
-	The ''hidden-expanded'' set is no longer Weak (required by the above).
-	Slightly improved consistancy with [Moen]TreeViews'' public protocols.
-	Better emulation of {Tree/List}Views'' #selectionChanging: events.
-	Deprecated:
		TreeListView>>ensureDisplayed:
		TreeListView>>toggle{Expanded/ExpandAll}:
		TreeListView class>>default{List/Tree}ModelClass:

2.00
-	Bugfixes including several suggested by Steve Waring (Thanks Steve!!).
-	Speeded up expanding nodes with lots of children.
-	Completely reimplemented #onItem:movedToParent:.
-	Completely reimplemented #onItem:removedFromParent:.

1.00
-	First release.
'.

package basicPackageVersion: '7.01'.


package setClassNames: #(
	#{UI.ListTreePresenter}
	#{UI.ListTreeView}
).

package setMethodNames: #(
	#(#{OS.LVHITTESTINFO} #isAboveClientArea)
	#(#{OS.LVHITTESTINFO} #isBelowClientArea)
	#(#{OS.LVHITTESTINFO} #isNowhere)
	#(#{OS.LVHITTESTINFO} #isOnItem)
	#(#{OS.LVHITTESTINFO} #isOnItemIcon)
	#(#{OS.LVHITTESTINFO} #isOnItemLabel)
	#(#{OS.LVHITTESTINFO} #isOnItemStateIcon)
	#(#{OS.LVHITTESTINFO} #isToLeft)
	#(#{OS.LVHITTESTINFO} #isToRight)
	#(#{UI.ListPresenter class} #resource_ListTree_view)
	#(#{UI.TreePresenter class} #resource_ListTree_view)
).

package setPrerequisites: #(
	'..\..\..\Base\Dolphin'
	'..\..\Base\Dolphin Basic Geometry'
	'..\..\Views\Common Controls\Dolphin Common Controls'
	'..\..\Models\List\Dolphin List Models'
	'..\List\Dolphin List Presenter'
	'..\..\Base\Dolphin MVP Base'
	'..\..\Models\Tree\Dolphin Tree Models'
	'..\Tree\Dolphin Tree Presenter'
).

package!

"Class Definitions"!

UI.ListPresenter subclass: #'UI.ListTreePresenter'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.ListView subclass: #'UI.ListTreeView'
	instanceVariableNames: 'hasExplicitTreeModel treeModel dummy3 expanded hiddenExpanded options indentSeparation getChildrenBlock hasChildrenBlock getParentBlock sortBlock doSortChildrenBlock dummy2 dummy1'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: 'stateImageManager stateImageBlock'
	classConstants: {
		'ClosedImageIndex' -> 16r3.
		'DisableExpandAllMask' -> 16r1.
		'DoSortRootsMask' -> 16r10.
		'HasButtonsMask' -> 16r2.
		'HasLinesAtRootMask' -> 16r4.
		'HasLinesMask' -> 16r8.
		'LeafImageIndex' -> 16r1.
		'OpenImageIndex' -> 16r2.
		'UseSmartRefreshMask' -> 16r20
	}!

"Loose Methods"!

!OS.LVHITTESTINFO methodsFor!

isAboveClientArea
	"Answers whether the position is above the control's client area."
#CUadded.
	^ self flags allMask: LVHT_ABOVE.!

isBelowClientArea
	"Answers whether the position is below the control's client area."
#CUadded.
	^ self flags allMask: LVHT_BELOW.!

isNowhere
	"Answers whether the position is in the control's client area but not over an item."
#CUadded.
	^ self flags allMask: LVHT_NOWHERE.!

isOnItem
	"Answers whether the position is over an item's label, icon, or state icon."
#CUadded.
	^ self flags anyMask: LVHT_ONITEM.!

isOnItemIcon
	"Answers whether the position is over an item's icon."

#CUadded.

	"if the hit is on the same line as the item, but not over any of its formal
	elements, then Window's seems to set all the LVHT_ISONITEM* flags"
	^ (self flags bitAnd: LVHT_ONITEM) = LVHT_ONITEMICON.!

isOnItemLabel
	"Answers whether the position is over an item's label."

#CUadded.

	"if the hit is on the same line as the item, but not over any of its formal
	elements, then Window's seems to set all the LVHT_ISONITEM* flags"
	^ (self flags bitAnd: LVHT_ONITEM) = LVHT_ONITEMLABEL.!

isOnItemStateIcon
	"Answers whether the position is over an item's state icon."

#CUadded.

	"if the hit is on the same line as the item, but not over any of its formal
	elements, then Window's seems to set all the LVHT_ISONITEM* flags"
	^ (self flags bitAnd: LVHT_ONITEM) = LVHT_ONITEMSTATEICON.!

isToLeft
	"Answers whether the position is to the left of the control's client area."
#CUadded.
	^ self flags allMask: LVHT_TOLEFT.!

isToRight
	"Answers whether the position is to the right of the control's client area."
#CUadded.
	^ self flags allMask: LVHT_TORIGHT.! !
!OS.LVHITTESTINFO categoriesFor: #isAboveClientArea!public!testing! !
!OS.LVHITTESTINFO categoriesFor: #isBelowClientArea!public!testing! !
!OS.LVHITTESTINFO categoriesFor: #isNowhere!public!testing! !
!OS.LVHITTESTINFO categoriesFor: #isOnItem!public!testing! !
!OS.LVHITTESTINFO categoriesFor: #isOnItemIcon!public!testing! !
!OS.LVHITTESTINFO categoriesFor: #isOnItemLabel!public!testing! !
!OS.LVHITTESTINFO categoriesFor: #isOnItemStateIcon!public!testing! !
!OS.LVHITTESTINFO categoriesFor: #isToLeft!public!testing! !
!OS.LVHITTESTINFO categoriesFor: #isToRight!public!testing! !

!UI.ListPresenter class methodsFor!

resource_ListTree_view
	"Answer the literal data from which the 'ListTree view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	Tools.ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_ListTree_view)
	"

	^#(#'!!STL' 4 985166 10 ##(UI.STBViewProxy) ##(UI.ListTreeView) 34 59 nil nil 34 2 8 1140920397 1025 416 787270 2 ##(UI.ListModel) 138 144 8 #() nil 1638406 ##(Kernel.IdentitySearchPolicy) 917510 ##(Graphics.Color) #default nil 7 nil nil nil 416 nil 8 1920618720 ##(UI.BasicListAbstract) ##(UI.IconicListAbstract) 1639750 1 ##(Graphics.IconImageManager) nil nil nil nil nil nil 138 144 34 1 1117254 5 ##(UI.ListViewColumn) 8 'Column 1' 393 #left ##(UI.BasicListAbstract) 786950 ##(Core.Message) #<= 8 #() nil nil 416 nil 3 nil nil #report 8 #() nil 133217 nil 1 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil true 1247046 3 ##(UI.VirtualTreeModel) nil 560 138 144 528 1246566 3 ##(Kernel.BlockClosure) 0 nil 1377574 ##(Kernel.CompiledMethod) 2 3 800 #defaultGetChildrenBlock 42440101 8 #[30 105 226 0 106] #children 864 7 257 nil 850 0 nil 882 2 3 800 #defaultGetParentBlock 42415045 8 #[30 105 226 0 106] #parent 928 7 257 nil 850 0 nil 882 2 3 800 #defaultHasChildrenBlock 42500293 8 #[252 1 0 0 1 4 0 65 176 159 106 105] #childrenOf: #notEmpty 17 257 816 850 0 nil 882 1 83886083 800 #defaultFilterBlock 42430373 8 #[29 105 17 157 106] 1024 7 257 nil nil 138 ##(Core.PluggableSet) 528 138 ##(Core.IdentitySet) 528 37 1 nil nil nil nil nil nil nil 1310982 ##(Core.MessageSequence) 138 144 34 2 1049350 ##(Core.MessageSend) #createAt:extent: 34 2 655878 ##(Graphics.Point) 6143 21 1218 401 701 416 1170 #text: 34 1 8 'Column 1' 416 1179910 ##(OS.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 11 0 0 10 0 0 0 199 12 0 0 104 1 0 0] 8 #() 1218 193 193 nil 2029)! !
!UI.ListPresenter class categoriesFor: #resource_ListTree_view!public!resources-views! !

!UI.TreePresenter class methodsFor!

resource_ListTree_view
	"Answer the literal data from which the 'ListTree view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	Tools.ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_ListTree_view)
	"

	^#(#'!!STL' 4 985166 10 ##(UI.STBViewProxy) ##(UI.ListTreeView) 34 59 nil nil 34 2 8 1140920397 1025 416 787270 2 ##(UI.ListModel) 138 144 8 #() nil 1638406 ##(Kernel.IdentitySearchPolicy) 917510 ##(Graphics.Color) #default nil 7 nil nil nil 416 nil 8 1920618720 ##(UI.BasicListAbstract) ##(UI.IconicListAbstract) 1639750 1 ##(Graphics.IconImageManager) nil nil nil nil nil nil 138 144 34 1 1117254 5 ##(UI.ListViewColumn) 8 'Column 1' 397 #left ##(UI.BasicListAbstract) 786950 ##(Core.Message) #<= 8 #() nil nil 416 nil 3 nil nil #report 8 #() nil 133217 nil 1 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil true 1247046 3 ##(UI.VirtualTreeModel) nil 560 138 144 528 1246566 3 ##(Kernel.BlockClosure) 0 nil 1377574 ##(Kernel.CompiledMethod) 2 3 800 #defaultGetChildrenBlock 42440101 8 #[30 105 226 0 106] #children 864 7 257 nil 850 0 nil 882 2 3 800 #defaultGetParentBlock 42415045 8 #[30 105 226 0 106] #parent 928 7 257 nil 850 0 nil 882 2 3 800 #defaultHasChildrenBlock 42500293 8 #[252 1 0 0 1 4 0 65 176 159 106 105] #childrenOf: #notEmpty 17 257 816 850 0 nil 882 1 83886083 800 #defaultFilterBlock 42430373 8 #[29 105 17 157 106] 1024 7 257 nil nil 138 ##(Core.PluggableSet) 528 138 ##(Core.IdentitySet) 528 37 1 nil nil nil nil nil nil nil 1310982 ##(Core.MessageSequence) 138 144 34 2 1049350 ##(Core.MessageSend) #createAt:extent: 34 2 655878 ##(Graphics.Point) 6143 21 1218 405 701 416 1170 #text: 34 1 8 'Column 1' 416 1179910 ##(OS.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 11 0 0 10 0 0 0 201 12 0 0 104 1 0 0] 8 #() 1218 193 193 nil 2029)! !
!UI.TreePresenter class categoriesFor: #resource_ListTree_view!public!resources-views! !

"End of package definition"!

