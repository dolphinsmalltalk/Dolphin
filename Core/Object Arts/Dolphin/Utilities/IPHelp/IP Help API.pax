| package |
package := Package name: 'IP Help API'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk IP Helper Library Package
Copyright (c) Object Arts Ltd, 2004

This package provides a wrapping around the IP Help API, which is useful for TCP/IP utilities, etc.'.

package basicPackageVersion: '6.1'.


package setClassNames: #(
	#{OS.FIXED_INFO}
	#{OS.IP_ADAPTER_INDEX_MAP}
	#{OS.IP_ADAPTER_INFO}
	#{OS.IP_ADAPTER_ORDER_MAP}
	#{OS.IP_ADDR_STRING}
	#{OS.IP_INTERFACE_INFO}
	#{OS.IP_PER_ADAPTER_INFO}
	#{OS.IP_UNIDIRECTIONAL_ADAPTER_ADDRESS}
	#{OS.IPHlpApiConstants}
	#{OS.IpHlpApiTableStruct}
	#{OS.MIB_ICMP}
	#{OS.MIB_ICMP_EX}
	#{OS.MIB_IFNUMBER}
	#{OS.MIB_IFROW}
	#{OS.MIB_IFTABLE}
	#{OS.MIB_IPADDRROW}
	#{OS.MIB_IPADDRTABLE}
	#{OS.MIB_IPFORWARDROW}
	#{OS.MIB_IPFORWARDTABLE}
	#{OS.MIB_IPNETROW}
	#{OS.MIB_IPNETTABLE}
	#{OS.MIB_IPSTATS}
	#{OS.MIB_TCPEXROW}
	#{OS.MIB_TCPEXTABLE}
	#{OS.MIB_TCPROW}
	#{OS.MIB_TCPSTATS}
	#{OS.MIB_TCPTABLE}
	#{OS.MIB_UDPEXROW}
	#{OS.MIB_UDPEXTABLE}
	#{OS.MIB_UDPROW}
	#{OS.MIB_UDPSTATS}
	#{OS.MIB_UDPTABLE}
	#{OS.MIBICMPINFO}
	#{OS.MIBICMPSTATS}
	#{OS.MIBICMPSTATS_EX}
).

package setMethodNames: #(
	#(#{OS.IPHlpApiLibrary} #AddIPAddress:ipMask:ifIndex:nteContext:nteInstance:)
	#(#{OS.IPHlpApiLibrary} #AllocateAndGetTcpExTableFromStack:bOrder:heap:zero:flags:)
	#(#{OS.IPHlpApiLibrary} #AllocateAndGetUdpExTableFromStack:bOrder:heap:zero:flags:)
	#(#{OS.IPHlpApiLibrary} #CancelIPChangeNotify:)
	#(#{OS.IPHlpApiLibrary} #CreateIpForwardEntry:)
	#(#{OS.IPHlpApiLibrary} #CreateIpNetEntry:)
	#(#{OS.IPHlpApiLibrary} #CreateProxyArpEntry:dwMask:dwIfIndex:)
	#(#{OS.IPHlpApiLibrary} #DeleteIPAddress:)
	#(#{OS.IPHlpApiLibrary} #DeleteIpForwardEntry:)
	#(#{OS.IPHlpApiLibrary} #DeleteIpNetEntry:)
	#(#{OS.IPHlpApiLibrary} #DeleteProxyArpEntry:dwMask:dwIfIndex:)
	#(#{OS.IPHlpApiLibrary} #DisableMediaSense:pOverlapped:)
	#(#{OS.IPHlpApiLibrary} #EnableRouter:pOverlapped:)
	#(#{OS.IPHlpApiLibrary} #FlushIpNetTable:)
	#(#{OS.IPHlpApiLibrary} #GetAdapterIndex:ifIndex:)
	#(#{OS.IPHlpApiLibrary} #GetAdapterOrderMap)
	#(#{OS.IPHlpApiLibrary} #getAdaptersInfo)
	#(#{OS.IPHlpApiLibrary} #GetAdaptersInfo:pOutBufLen:)
	#(#{OS.IPHlpApiLibrary} #GetBestInterface:pdwBestIfIndex:)
	#(#{OS.IPHlpApiLibrary} #GetBestRoute:dwSourceAddr:pBestRoute:)
	#(#{OS.IPHlpApiLibrary} #GetFriendlyIfIndex:)
	#(#{OS.IPHlpApiLibrary} #getIcmpStatistics)
	#(#{OS.IPHlpApiLibrary} #GetIcmpStatistics:)
	#(#{OS.IPHlpApiLibrary} #GetIcmpStatisticsEx:dwFamily:)
	#(#{OS.IPHlpApiLibrary} #GetIfEntry:)
	#(#{OS.IPHlpApiLibrary} #getIfTable)
	#(#{OS.IPHlpApiLibrary} #GetIfTable:pdwSize:bOrder:)
	#(#{OS.IPHlpApiLibrary} #getInterfaceInfo)
	#(#{OS.IPHlpApiLibrary} #GetInterfaceInfo:dwOutBufLen:)
	#(#{OS.IPHlpApiLibrary} #getIpAddrTable)
	#(#{OS.IPHlpApiLibrary} #GetIpAddrTable:pdwSize:bOrder:)
	#(#{OS.IPHlpApiLibrary} #GetIpErrorString:buffer:size:)
	#(#{OS.IPHlpApiLibrary} #getIpForwardTable)
	#(#{OS.IPHlpApiLibrary} #GetIpForwardTable:pdwSize:bOrder:)
	#(#{OS.IPHlpApiLibrary} #getIpNetTable)
	#(#{OS.IPHlpApiLibrary} #GetIpNetTable:pdwSize:bOrder:)
	#(#{OS.IPHlpApiLibrary} #getIpStatistics)
	#(#{OS.IPHlpApiLibrary} #GetIpStatistics:)
	#(#{OS.IPHlpApiLibrary} #GetIpStatisticsEx:dwFamily:)
	#(#{OS.IPHlpApiLibrary} #GetNetworkParams:pOutBufLen:)
	#(#{OS.IPHlpApiLibrary} #GetNumberOfInterfaces:)
	#(#{OS.IPHlpApiLibrary} #getPerAdapterInfo:)
	#(#{OS.IPHlpApiLibrary} #GetPerAdapterInfo:pPerAdapterInfo:pOutBufLen:)
	#(#{OS.IPHlpApiLibrary} #GetRTTAndHopCount:hopCount:maxHops:rtt:)
	#(#{OS.IPHlpApiLibrary} #getTcpExTable)
	#(#{OS.IPHlpApiLibrary} #getTcpStatistics)
	#(#{OS.IPHlpApiLibrary} #GetTcpStatistics:)
	#(#{OS.IPHlpApiLibrary} #GetTcpStatisticsEx:dwFamily:)
	#(#{OS.IPHlpApiLibrary} #getTcpTable)
	#(#{OS.IPHlpApiLibrary} #GetTcpTable:pdwSize:bOrder:)
	#(#{OS.IPHlpApiLibrary} #getUdpStatistics)
	#(#{OS.IPHlpApiLibrary} #GetUdpStatistics:)
	#(#{OS.IPHlpApiLibrary} #GetUdpStatisticsEx:dwFamily:)
	#(#{OS.IPHlpApiLibrary} #getUdpTable)
	#(#{OS.IPHlpApiLibrary} #GetUdpTable:pdwSize:bOrder:)
	#(#{OS.IPHlpApiLibrary} #getUniDirectionalAdapterInfo)
	#(#{OS.IPHlpApiLibrary} #GetUniDirectionalAdapterInfo:dwOutBufLen:)
	#(#{OS.IPHlpApiLibrary} #IpReleaseAddress:)
	#(#{OS.IPHlpApiLibrary} #IpRenewAddress:)
	#(#{OS.IPHlpApiLibrary} #NhpAllocateAndGetInterfaceInfoFromStack:pdwCount:bOrder:hHeap:dwFlags:)
	#(#{OS.IPHlpApiLibrary} #NotifyAddrChange:overlapped:)
	#(#{OS.IPHlpApiLibrary} #NotifyRouteChange:overlapped:)
	#(#{OS.IPHlpApiLibrary} #RestoreMediaSense:lpdwEnableCount:)
	#(#{OS.IPHlpApiLibrary} #SendARP:srcIP:pMacAddr:phyAddrLen:)
	#(#{OS.IPHlpApiLibrary} #SetIfEntry:)
	#(#{OS.IPHlpApiLibrary} #SetIpForwardEntry:)
	#(#{OS.IPHlpApiLibrary} #SetIpNetEntry:)
	#(#{OS.IPHlpApiLibrary} #SetIpStatistics:)
	#(#{OS.IPHlpApiLibrary} #SetIpTTL:)
	#(#{OS.IPHlpApiLibrary} #SetTcpEntry:)
	#(#{OS.IPHlpApiLibrary} #UnenableRouter:lpdwEnableCount:)
).

package setPrerequisites: #(
	'..\..\Base\Dolphin'
	'..\..\System\Win32\Dolphin Overlapped IO'
	'..\..\Sockets\Dolphin Sockets'
).

package!

"Class Definitions"!

Kernel.SharedPool subclass: #'OS.IPHlpApiConstants'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'AD_APPLY_ALL' -> 16r7.
		'AD_APPLY_BUFFERED_REFRESH' -> 16r10.
		'AD_APPLY_FORCE' -> 16r8.
		'AD_APPLY_HTMLGEN' -> 16r2.
		'AD_APPLY_REFRESH' -> 16r4.
		'AD_APPLY_SAVE' -> 16r1.
		'ADDURL_SILENT' -> 16r1.
		'BIF_BROWSEFORCOMPUTER' -> 16r1000.
		'BIF_BROWSEFORPRINTER' -> 16r2000.
		'BIF_BROWSEINCLUDEFILES' -> 16r4000.
		'BIF_DONTGOBELOWDOMAIN' -> 16r2.
		'BIF_EDITBOX' -> 16r10.
		'BIF_RETURNFSANCESTORS' -> 16r8.
		'BIF_RETURNONLYFSDIRS' -> 16r1.
		'BIF_STATUSTEXT' -> 16r4.
		'BIF_VALIDATE' -> 16r20.
		'BOLD_FONTTYPE' -> 16r100.
		'CC_ANYCOLOR' -> 16r100.
		'CC_CDECL' -> 16r1.
		'CC_ENABLEHOOK' -> 16r10.
		'CC_ENABLETEMPLATE' -> 16r20.
		'CC_ENABLETEMPLATEHANDLE' -> 16r40.
		'CC_FASTCALL' -> 16r0.
		'CC_FPFASTCALL' -> 16r5.
		'CC_FULLOPEN' -> 16r2.
		'CC_MACPASCAL' -> 16r3.
		'CC_MAX' -> 16r9.
		'CC_MPWCDECL' -> 16r7.
		'CC_MPWPASCAL' -> 16r8.
		'CC_MSCPASCAL' -> 16r2.
		'CC_PASCAL' -> 16r2.
		'CC_PREVENTFULLOPEN' -> 16r4.
		'CC_RGBINIT' -> 16r1.
		'CC_SHOWHELP' -> 16r8.
		'CC_SOLIDCOLOR' -> 16r80.
		'CC_STDCALL' -> 16r4.
		'CC_SYSCALL' -> 16r6.
		'CF_ANSIONLY' -> 16r400.
		'CF_APPLY' -> 16r200.
		'CF_BOTH' -> 16r3.
		'CF_EFFECTS' -> 16r100.
		'CF_ENABLEHOOK' -> 16r8.
		'CF_ENABLETEMPLATE' -> 16r10.
		'CF_ENABLETEMPLATEHANDLE' -> 16r20.
		'CF_FIXEDPITCHONLY' -> 16r4000.
		'CF_FONTSHOWHELP' -> 16r4.
		'CF_FORCEFONTEXIST' -> 16r10000.
		'CF_INITTOLOGFONTSTRUCT' -> 16r40.
		'CF_LIMITSIZE' -> 16r2000.
		'CF_NOFACESEL' -> 16r80000.
		'CF_NOOEMFONTS' -> 16r800.
		'CF_NOSCRIPTSEL' -> 16r800000.
		'CF_NOSIMULATIONS' -> 16r1000.
		'CF_NOSIZESEL' -> 16r200000.
		'CF_NOSTYLESEL' -> 16r100000.
		'CF_NOVECTORFONTS' -> 16r800.
		'CF_NOVERTFONTS' -> 16r1000000.
		'CF_PRINTERFONTS' -> 16r2.
		'CF_SCALABLEONLY' -> 16r20000.
		'CF_SCREENFONTS' -> 16r1.
		'CF_SCRIPTSONLY' -> 16r400.
		'CF_SELECTSCRIPT' -> 16r400000.
		'CF_SHOWHELP' -> 16r4.
		'CF_TTONLY' -> 16r40000.
		'CF_USESTYLE' -> 16r80.
		'CF_WYSIWYG' -> 16r8000.
		'CLSCTX_DISABLE_AAA' -> 16r8000.
		'CLSCTX_ENABLE_AAA' -> 16r10000.
		'CLSCTX_ENABLE_CODE_DOWNLOAD' -> 16r2000.
		'CLSCTX_FROM_DEFAULT_CONTEXT' -> 16r20000.
		'CLSCTX_INPROC_HANDLER' -> 16r2.
		'CLSCTX_INPROC_HANDLER16' -> 16r20.
		'CLSCTX_INPROC_SERVER' -> 16r1.
		'CLSCTX_INPROC_SERVER16' -> 16r8.
		'CLSCTX_LOCAL_SERVER' -> 16r4.
		'CLSCTX_NO_CODE_DOWNLOAD' -> 16r400.
		'CLSCTX_NO_CUSTOM_MARSHAL' -> 16r1000.
		'CLSCTX_NO_FAILURE_LOG' -> 16r4000.
		'CLSCTX_REMOTE_SERVER' -> 16r10.
		'CLSCTX_RESERVED1' -> 16r40.
		'CLSCTX_RESERVED2' -> 16r80.
		'CLSCTX_RESERVED3' -> 16r100.
		'CLSCTX_RESERVED4' -> 16r200.
		'CLSCTX_RESERVED5' -> 16r800.
		'CMF_CANRENAME' -> 16r10.
		'CMF_DEFAULTONLY' -> 16r1.
		'CMF_EXPLORE' -> 16r4.
		'CMF_INCLUDESTATIC' -> 16r40.
		'CMF_NODEFAULT' -> 16r20.
		'CMF_NORMAL' -> 16r0.
		'CMF_NOVERBS' -> 16r8.
		'CMF_RESERVED' -> -16r10000.
		'CMF_VERBSONLY' -> 16r2.
		'COINIT_APARTMENTTHREADED' -> 16r2.
		'COINIT_DISABLE_OLE1DDE' -> 16r4.
		'COINIT_MULTITHREADED' -> 16r0.
		'COINIT_SPEED_OVER_MEMORY' -> 16r8.
		'COMP_ELEM_ALL' -> 16rFFF.
		'COMP_ELEM_CHECKED' -> 16r2.
		'COMP_ELEM_DIRTY' -> 16r4.
		'COMP_ELEM_FRIENDLYNAME' -> 16r400.
		'COMP_ELEM_NOSCROLL' -> 16r8.
		'COMP_ELEM_POS_LEFT' -> 16r10.
		'COMP_ELEM_POS_TOP' -> 16r20.
		'COMP_ELEM_POS_ZINDEX' -> 16r100.
		'COMP_ELEM_SIZE_HEIGHT' -> 16r80.
		'COMP_ELEM_SIZE_WIDTH' -> 16r40.
		'COMP_ELEM_SOURCE' -> 16r200.
		'COMP_ELEM_SUBSCRIBEDURL' -> 16r800.
		'COMP_ELEM_TYPE' -> 16r1.
		'CSIDL_ALTSTARTUP' -> 16r1D.
		'CSIDL_APPDATA' -> 16r1A.
		'CSIDL_BITBUCKET' -> 16rA.
		'CSIDL_COMMON_ALTSTARTUP' -> 16r1E.
		'CSIDL_COMMON_DESKTOPDIRECTORY' -> 16r19.
		'CSIDL_COMMON_FAVORITES' -> 16r1F.
		'CSIDL_COMMON_PROGRAMS' -> 16r17.
		'CSIDL_COMMON_STARTMENU' -> 16r16.
		'CSIDL_COMMON_STARTUP' -> 16r18.
		'CSIDL_CONTROLS' -> 16r3.
		'CSIDL_COOKIES' -> 16r21.
		'CSIDL_DESKTOP' -> 16r0.
		'CSIDL_DESKTOPDIRECTORY' -> 16r10.
		'CSIDL_DRIVES' -> 16r11.
		'CSIDL_FAVORITES' -> 16r6.
		'CSIDL_FONTS' -> 16r14.
		'CSIDL_HISTORY' -> 16r22.
		'CSIDL_INTERNET' -> 16r1.
		'CSIDL_INTERNET_CACHE' -> 16r20.
		'CSIDL_NETHOOD' -> 16r13.
		'CSIDL_NETWORK' -> 16r12.
		'CSIDL_PERSONAL' -> 16r5.
		'CSIDL_PRINTERS' -> 16r4.
		'CSIDL_PRINTHOOD' -> 16r1B.
		'CSIDL_PROGRAMS' -> 16r2.
		'CSIDL_RECENT' -> 16r8.
		'CSIDL_SENDTO' -> 16r9.
		'CSIDL_STARTMENU' -> 16rB.
		'CSIDL_STARTUP' -> 16r7.
		'CSIDL_TEMPLATES' -> 16r15.
		'DESCKIND_FUNCDESC' -> 16r1.
		'DESCKIND_IMPLICITAPPOBJ' -> 16r4.
		'DESCKIND_MAX' -> 16r5.
		'DESCKIND_NONE' -> 16r0.
		'DESCKIND_TYPECOMP' -> 16r3.
		'DESCKIND_VARDESC' -> 16r2.
		'DTI_ADDUI_DEFAULT' -> 16r0.
		'DTI_ADDUI_DISPSUBWIZARD' -> 16r1.
		'ecbBeach' -> 16r40.
		'ecbCardHand' -> 16r41.
		'ecbCastle' -> 16r3F.
		'ecbCrossHatch' -> 16r35.
		'ecbFishBlue' -> 16r3D.
		'ecbFishCyan' -> 16r3C.
		'ecbIvyBlack' -> 16r3A.
		'ecbIvyBlue' -> 16r3B.
		'ecbO' -> 16r44.
		'ecbPlaid' -> 16r36.
		'ecbRobot' -> 16r38.
		'ecbRoses' -> 16r39.
		'ecbShell' -> 16r3E.
		'ecbUnused' -> 16r42.
		'ecbWeave' -> 16r37.
		'ecbX' -> 16r43.
		'ecfAce' -> 16r0.
		'ecfEight' -> 16r1C.
		'ecfFive' -> 16r10.
		'ecfFour' -> 16rC.
		'ecfJack' -> 16r28.
		'ecfKing' -> 16r30.
		'ecfNine' -> 16r20.
		'ecfQueen' -> 16r2C.
		'ecfSeven' -> 16r18.
		'ecfSix' -> 16r14.
		'ecfTen' -> 16r24.
		'ecfThree' -> 16r8.
		'ecfTwo' -> 16r4.
		'ecsClubs' -> 16r0.
		'ecsDiamonds' -> 16r1.
		'ecsHearts' -> 16r2.
		'ecsSpades' -> 16r3.
		'ectBacks' -> 16r1.
		'ectFaces' -> 16r0.
		'ectInvert' -> 16r2.
		'FD_ACCESSTIME' -> 16r10.
		'FD_ATTRIBUTES' -> 16r4.
		'FD_CLSID' -> 16r1.
		'FD_CREATETIME' -> 16r8.
		'FD_FILESIZE' -> 16r40.
		'FD_LINKUI' -> 16r8000.
		'FD_SIZEPOINT' -> 16r2.
		'FD_WRITESTIME' -> 16r20.
		'FILE_NOTIFY_CHANGE_ATTRIBUTES' -> 16r4.
		'FILE_NOTIFY_CHANGE_DIR_NAME' -> 16r2.
		'FILE_NOTIFY_CHANGE_FILE_NAME' -> 16r1.
		'FILE_NOTIFY_CHANGE_LAST_WRITE' -> 16r10.
		'FILE_NOTIFY_CHANGE_SECURITY' -> 16r100.
		'FILE_NOTIFY_CHANGE_SIZE' -> 16r8.
		'FO_COPY' -> 16r2.
		'FO_DELETE' -> 16r3.
		'FO_MOVE' -> 16r1.
		'FO_RENAME' -> 16r4.
		'FOF_ALLOWUNDO' -> 16r40.
		'FOF_CONFIRMMOUSE' -> 16r2.
		'FOF_COPYFLAGS' -> 16r3DD.
		'FOF_DELETEFLAGS' -> 16r154.
		'FOF_FILESONLY' -> 16r80.
		'FOF_MOVEFLAGS' -> 16r3DD.
		'FOF_MULTIDESTFILES' -> 16r1.
		'FOF_NOCONFIRMATION' -> 16r10.
		'FOF_NOCONFIRMMKDIR' -> 16r200.
		'FOF_RENAMEFLAGS' -> 16r3DD.
		'FOF_RENAMEONCOLLISION' -> 16r8.
		'FOF_SILENT' -> 16r4.
		'FOF_SIMPLEPROGRESS' -> 16r100.
		'FOF_WANTMAPPINGHANDLE' -> 16r20.
		'FORMAT_MESSAGE_ALLOCATE_BUFFER' -> 16r100.
		'FORMAT_MESSAGE_ARGUMENT_ARRAY' -> 16r2000.
		'FORMAT_MESSAGE_FROM_HMODULE' -> 16r800.
		'FORMAT_MESSAGE_FROM_STRING' -> 16r400.
		'FORMAT_MESSAGE_FROM_SYSTEM' -> 16r1000.
		'FORMAT_MESSAGE_IGNORE_INSERTS' -> 16r200.
		'FORMAT_MESSAGE_MAX_WIDTH_MASK' -> 16rFF.
		'FORMAT_MESSAGE_NONE' -> 16r0.
		'FR_DIALOGTERM' -> 16r40.
		'FR_DOWN' -> 16r1.
		'FR_ENABLEHOOK' -> 16r100.
		'FR_ENABLETEMPLATE' -> 16r200.
		'FR_ENABLETEMPLATEHANDLE' -> 16r2000.
		'FR_FINDNEXT' -> 16r8.
		'FR_HIDEMATCHCASE' -> 16r8000.
		'FR_HIDEUPDOWN' -> 16r4000.
		'FR_HIDEWHOLEWORD' -> 16r10000.
		'FR_MATCHCASE' -> 16r4.
		'FR_NOMATCHCASE' -> 16r800.
		'FR_NOUPDOWN' -> 16r400.
		'FR_NOWHOLEWORD' -> 16r1000.
		'FR_REPLACE' -> 16r10.
		'FR_REPLACEALL' -> 16r20.
		'FR_SHOWHELP' -> 16r80.
		'FR_WHOLEWORD' -> 16r2.
		'FUNC_DISPATCH' -> 16r4.
		'FUNC_NONVIRTUAL' -> 16r2.
		'FUNC_PUREVIRTUAL' -> 16r1.
		'FUNC_STATIC' -> 16r3.
		'FUNC_VIRTUAL' -> 16r0.
		'FVM_DETAILS' -> 16r4.
		'FVM_ICON' -> 16r1.
		'FVM_LIST' -> 16r3.
		'FVM_SMALLICON' -> 16r2.
		'FWF_ABBREVIATEDNAMES' -> 16r2.
		'FWF_ALIGNLEFT' -> 16r800.
		'FWF_AUTOARRANGE' -> 16r1.
		'FWF_BESTFITWINDOW' -> 16r10.
		'FWF_DESKTOP' -> 16r20.
		'FWF_NOCLIENTEDGE' -> 16r200.
		'FWF_NOSCROLL' -> 16r400.
		'FWF_NOSUBFOLDERS' -> 16r80.
		'FWF_OWNERDATA' -> 16r8.
		'FWF_SINGLECLICKACTIVATE' -> 16r8000.
		'FWF_SINGLESEL' -> 16r40.
		'FWF_SNAPTOGRID' -> 16r4.
		'FWF_TRANSPARENT' -> 16r100.
		'GCS_HELPTEXTA' -> 16r1.
		'GCS_HELPTEXTW' -> 16r5.
		'GCS_UNICODE' -> 16r4.
		'GCS_VALIDATEA' -> 16r2.
		'GCS_VALIDATEW' -> 16r6.
		'GCS_VERBA' -> 16r0.
		'GCS_VERBW' -> 16r4.
		'HIST_ADDTOFAVORITES' -> 16r3.
		'HIST_BACK' -> 16r0.
		'HIST_FAVORITES' -> 16r2.
		'HIST_FORWARD' -> 16r1.
		'HIST_VIEWTREE' -> 16r4.
		'HKEY_CLASSES_ROOT' -> -16r80000000.
		'HKEY_CURRENT_CONFIG' -> -16r7FFFFFFB.
		'HKEY_CURRENT_USER' -> -16r7FFFFFFF.
		'HKEY_DYN_DATA' -> -16r7FFFFFFA.
		'HKEY_LOCAL_MACHINE' -> -16r7FFFFFFE.
		'HKEY_PERFORMANCE_DATA' -> -16r7FFFFFFC.
		'HKEY_USERS' -> -16r7FFFFFFD.
		'ICMP4_DST_UNREACH' -> 16r3.
		'ICMP4_ECHO_REPLY' -> 16r0.
		'ICMP4_ECHO_REQUEST' -> 16r8.
		'ICMP4_MASK_REPLY' -> 16r12.
		'ICMP4_MASK_REQUEST' -> 16r11.
		'ICMP4_PARAM_PROB' -> 16rC.
		'ICMP4_REDIRECT' -> 16r5.
		'ICMP4_ROUTER_ADVERT' -> 16r9.
		'ICMP4_ROUTER_SOLICIT' -> 16rA.
		'ICMP4_SOURCE_QUENCH' -> 16r4.
		'ICMP4_TIME_EXCEEDED' -> 16rB.
		'ICMP4_TIMESTAMP_REPLY' -> 16rE.
		'ICMP4_TIMESTAMP_REQUEST' -> 16rD.
		'ICMP6_DST_UNREACH' -> 16r1.
		'ICMP6_ECHO_REPLY' -> 16r81.
		'ICMP6_ECHO_REQUEST' -> 16r80.
		'ICMP6_MEMBERSHIP_QUERY' -> 16r82.
		'ICMP6_MEMBERSHIP_REDUCTION' -> 16r84.
		'ICMP6_MEMBERSHIP_REPORT' -> 16r83.
		'ICMP6_PACKET_TOO_BIG' -> 16r2.
		'ICMP6_PARAM_PROB' -> 16r4.
		'ICMP6_TIME_EXCEEDED' -> 16r3.
		'IDB_HIST_LARGE_COLOR' -> 16r9.
		'IDB_HIST_SMALL_COLOR' -> 16r8.
		'IDB_STD_LARGE_COLOR' -> 16r1.
		'IDB_STD_SMALL_COLOR' -> 16r0.
		'IDB_VIEW_LARGE_COLOR' -> 16r5.
		'IDB_VIEW_SMALL_COLOR' -> 16r4.
		'ILC_COLOR' -> 16r0.
		'ILC_COLOR16' -> 16r10.
		'ILC_COLOR24' -> 16r18.
		'ILC_COLOR32' -> 16r20.
		'ILC_COLOR4' -> 16r4.
		'ILC_COLOR8' -> 16r8.
		'ILC_COLORDDB' -> 16rFE.
		'ILC_MASK' -> 16r1.
		'ILD_BLEND' -> 16rF00.
		'ILD_BLEND25' -> 16r2.
		'ILD_BLEND50' -> 16r4.
		'ILD_FOCUS' -> 16r4.
		'ILD_IMAGE' -> 16r20.
		'ILD_MASK' -> 16r10.
		'ILD_NORMAL' -> 16r0.
		'ILD_OVERLAYMASK' -> 16rF00.
		'ILD_SELECTED' -> 16r4.
		'ILD_TRANSPARENT' -> 16r1.
		'INPUT_HARDWARE' -> 16r2.
		'INPUT_KEYBOARD' -> 16r1.
		'INPUT_MOUSE' -> 16r0.
		'INVOKE_FUNC' -> 16r1.
		'INVOKE_PROPERTYGET' -> 16r2.
		'INVOKE_PROPERTYPUT' -> 16r4.
		'INVOKE_PROPERTYPUTREF' -> 16r8.
		'ITALIC_FONTTYPE' -> 16r200.
		'KEY_ALL_ACCESS' -> 16rF003F.
		'KEY_CREATE_LINK' -> 16r20.
		'KEY_CREATE_SUB_KEY' -> 16r4.
		'KEY_ENUMERATE_SUB_KEYS' -> 16r8.
		'KEY_EXECUTE' -> 16r20009.
		'KEY_NOTIFY' -> 16r10.
		'KEY_QUERY_VALUE' -> 16r1.
		'KEY_READ' -> 16r20009.
		'KEY_SET_VALUE' -> 16r2.
		'KEY_WRITE' -> 16r20006.
		'ND_NEIGHBOR_ADVERT' -> 16r88.
		'ND_NEIGHBOR_SOLICIT' -> 16r87.
		'ND_REDIRECT' -> 16r89.
		'ND_ROUTER_ADVERT' -> 16r86.
		'ND_ROUTER_SOLICIT' -> 16r85.
		'OFN_ALLOWMULTISELECT' -> 16r200.
		'OFN_CREATEPROMPT' -> 16r2000.
		'OFN_ENABLEHOOK' -> 16r20.
		'OFN_ENABLETEMPLATE' -> 16r40.
		'OFN_ENABLETEMPLATEHANDLE' -> 16r80.
		'OFN_EXPLORER' -> 16r80000.
		'OFN_EXTENSIONDIFFERENT' -> 16r400.
		'OFN_FILEMUSTEXIST' -> 16r1000.
		'OFN_HIDEREADONLY' -> 16r4.
		'OFN_LONGNAMES' -> 16r200000.
		'OFN_NOCHANGEDIR' -> 16r8.
		'OFN_NODEREFERENCELINKS' -> 16r100000.
		'OFN_NOLONGNAMES' -> 16r40000.
		'OFN_NONETWORKBUTTON' -> 16r20000.
		'OFN_NOREADONLYRETURN' -> 16r8000.
		'OFN_NOTESTFILECREATE' -> 16r10000.
		'OFN_NOVALIDATE' -> 16r100.
		'OFN_OVERWRITEPROMPT' -> 16r2.
		'OFN_PATHMUSTEXIST' -> 16r800.
		'OFN_READONLY' -> 16r1.
		'OFN_SHAREAWARE' -> 16r4000.
		'OFN_SHOWHELP' -> 16r10.
		'PD_ALLPAGES' -> 16r0.
		'PD_COLLATE' -> 16r10.
		'PD_DISABLEPRINTTOFILE' -> 16r80000.
		'PD_ENABLEPRINTHOOK' -> 16r1000.
		'PD_ENABLEPRINTTEMPLATE' -> 16r4000.
		'PD_ENABLEPRINTTEMPLATEHANDLE' -> 16r10000.
		'PD_ENABLESETUPHOOK' -> 16r2000.
		'PD_ENABLESETUPTEMPLATE' -> 16r8000.
		'PD_ENABLESETUPTEMPLATEHANDLE' -> 16r20000.
		'PD_HIDEPRINTTOFILE' -> 16r100000.
		'PD_NONETWORKBUTTON' -> 16r200000.
		'PD_NOPAGENUMS' -> 16r8.
		'PD_NOSELECTION' -> 16r4.
		'PD_NOWARNING' -> 16r80.
		'PD_PAGENUMS' -> 16r2.
		'PD_PRINTSETUP' -> 16r40.
		'PD_PRINTTOFILE' -> 16r20.
		'PD_RETURNDC' -> 16r100.
		'PD_RETURNDEFAULT' -> 16r400.
		'PD_RETURNIC' -> 16r200.
		'PD_SELECTION' -> 16r1.
		'PD_SHOWHELP' -> 16r800.
		'PD_USEDEVMODECOPIES' -> 16r40000.
		'PD_USEDEVMODECOPIESANDCOLLATE' -> 16r40000.
		'PIDMSI_STATUS_DRAFT' -> 16r3.
		'PIDMSI_STATUS_EDIT' -> 16r5.
		'PIDMSI_STATUS_FINAL' -> 16r8.
		'PIDMSI_STATUS_INPROGRESS' -> 16r4.
		'PIDMSI_STATUS_NEW' -> 16r1.
		'PIDMSI_STATUS_NORMAL' -> 16r0.
		'PIDMSI_STATUS_OTHER' -> 16r7FFF.
		'PIDMSI_STATUS_PRELIM' -> 16r2.
		'PIDMSI_STATUS_PROOF' -> 16r7.
		'PIDMSI_STATUS_REVIEW' -> 16r6.
		'PO_DELETE' -> 16r13.
		'PO_PORTCHANGE' -> 16r20.
		'PO_REN_PORT' -> 16r34.
		'PO_RENAME' -> 16r14.
		'PRINTER_FONTTYPE' -> 16r4000.
		'PROCESS_ALL_ACCESS' -> 16r1F0FFF.
		'PROCESS_CREATE_PROCESS' -> 16r80.
		'PROCESS_CREATE_THREAD' -> 16r2.
		'PROCESS_DUP_HANDLE' -> 16r40.
		'PROCESS_QUERY_INFORMATION' -> 16r400.
		'PROCESS_SET_INFORMATION' -> 16r200.
		'PROCESS_SET_QUOTA' -> 16r100.
		'PROCESS_TERMINATE' -> 16r1.
		'PROCESS_VM_OPERATION' -> 16r8.
		'PROCESS_VM_READ' -> 16r10.
		'PROCESS_VM_WRITE' -> 16r20.
		'PSD_DEFAULTMINMARGINS' -> 16r0.
		'PSD_DISABLEMARGINS' -> 16r10.
		'PSD_DISABLEORIENTATION' -> 16r100.
		'PSD_DISABLEPAGEPAINTING' -> 16r80000.
		'PSD_DISABLEPAPER' -> 16r200.
		'PSD_DISABLEPRINTER' -> 16r20.
		'PSD_ENABLEPAGEPAINTHOOK' -> 16r40000.
		'PSD_ENABLEPAGESETUPHOOK' -> 16r2000.
		'PSD_ENABLEPAGESETUPTEMPLATE' -> 16r8000.
		'PSD_ENABLEPAGESETUPTEMPLATEHANDLE' -> 16r20000.
		'PSD_INHUNDREDTHSOFMILLIMETERS' -> 16r8.
		'PSD_INTHOUSANDTHSOFINCHES' -> 16r4.
		'PSD_INWININIINTLMEASURE' -> 16r0.
		'PSD_MARGINS' -> 16r2.
		'PSD_MINMARGINS' -> 16r1.
		'PSD_NOWARNING' -> 16r80.
		'PSD_RETURNDEFAULT' -> 16r400.
		'PSD_SHOWHELP' -> 16r800.
		'qbBlack' -> 16r0.
		'qbBlue' -> 16r1.
		'qbBrightWhite' -> 16rF.
		'qbCyan' -> 16r3.
		'qbGray' -> 16r8.
		'qbGreen' -> 16r2.
		'qbLightBlue' -> 16r9.
		'qbLightCyan' -> 16rB.
		'qbLightGreen' -> 16rA.
		'qbLightMagenta' -> 16rD.
		'qbLightRed' -> 16rC.
		'qbLightYellow' -> 16rE.
		'qbMagenta' -> 16r5.
		'qbRed' -> 16r4.
		'qbWhite' -> 16r7.
		'qbYellow' -> 16r6.
		'REG_BINARY' -> 16r3.
		'REG_DWORD' -> 16r4.
		'REG_DWORD_BIG_ENDIAN' -> 16r5.
		'REG_DWORD_LITTLE_ENDIAN' -> 16r4.
		'REG_EXPAND_SZ' -> 16r2.
		'REG_FULL_RESOURCE_DESCRIPTOR' -> 16r9.
		'REG_LINK' -> 16r6.
		'REG_MULTI_SZ' -> 16r7.
		'REG_NONE' -> 16r0.
		'REG_RESOURCE_LIST' -> 16r8.
		'REG_RESOURCE_REQUIREMENTS_LIST' -> 16rA.
		'REG_SZ' -> 16r1.
		'REGCLS_MULTI_SEPARATE' -> 16r2.
		'REGCLS_MULTIPLEUSE' -> 16r1.
		'REGCLS_SINGLEUSE' -> 16r0.
		'REGULAR_FONTTYPE' -> 16r400.
		'SBCMDID_CANCELNAVIGATION' -> 16r2.
		'SBCMDID_ENABLESHOWTREE' -> 16r0.
		'SBCMDID_ENABLESTOP' -> 16r5.
		'SBCMDID_MAYSAVECHANGES' -> 16r3.
		'SBCMDID_OPTIONS' -> 16r6.
		'SBCMDID_SETHLINKFRAME' -> 16r4.
		'SBCMDID_SHOWCONTROL' -> 16r1.
		'SBSC_HIDE' -> 16r0.
		'SBSC_QUERY' -> 16r3.
		'SBSC_SHOW' -> 16r1.
		'SBSC_TOGGLE' -> 16r2.
		'SCREEN_FONTTYPE' -> 16r2000.
		'SFGAO_CANCOPY' -> 16r1.
		'SFGAO_CANDELETE' -> 16r20.
		'SFGAO_CANLINK' -> 16r4.
		'SFGAO_CANMOVE' -> 16r2.
		'SFGAO_CANRENAME' -> 16r10.
		'SFGAO_CAPABILITYMASK' -> 16r177.
		'SFGAO_COMPRESSED' -> 16r4000000.
		'SFGAO_CONTENTSMASK' -> -16r80000000.
		'SFGAO_DISPLAYATTRMASK' -> 16rF0000.
		'SFGAO_DROPTARGET' -> 16r100.
		'SFGAO_FILESYSANCESTOR' -> 16r10000000.
		'SFGAO_FILESYSTEM' -> 16r40000000.
		'SFGAO_FOLDER' -> 16r20000000.
		'SFGAO_GHOSTED' -> 16r80000.
		'SFGAO_HASPROPSHEET' -> 16r40.
		'SFGAO_HASSUBFOLDER' -> -16r80000000.
		'SFGAO_LINK' -> 16r10000.
		'SFGAO_READONLY' -> 16r40000.
		'SFGAO_REMOVABLE' -> 16r2000000.
		'SFGAO_SHARE' -> 16r20000.
		'SFGAO_VALIDATE' -> 16r1000000.
		'SHARD_PATH' -> 16r2.
		'SHARD_PATHA' -> 16r2.
		'SHARD_PATHW' -> 16r3.
		'SHARD_PIDL' -> 16r1.
		'SHCONTF_FOLDERS' -> 16r20.
		'SHCONTF_INCLUDEHIDDEN' -> 16r80.
		'SHCONTF_NONFOLDERS' -> 16r40.
		'SHDVID_FINALTITLEAVAIL' -> 16r7.
		'SHDVID_REFRESH' -> 16r3.
		'SHDVID_SETPROGRESSPOS' -> 16r0.
		'SHDVID_SETPROGRESSRANGE' -> 16r1.
		'SHDVID_SETSTATUSTEXT' -> 16r2.
		'SHDVID_SETTITLE' -> 16r6.
		'SHDVID_STARTLOAD' -> 16r8.
		'SHDVID_STOP' -> 16r4.
		'SHDVID_STOPLOAD' -> 16r9.
		'SHDVID_UPDATECOMMANDS' -> 16r5.
		'SHGDFIL_FINDDATA' -> 16r1.
		'SHGDFIL_NETRESOURCE' -> 16r2.
		'SHGDN_FORADDRESSBAR' -> 16r4000.
		'SHGDN_FORPARSING' -> 16r8000.
		'SHGDN_INFOLDER' -> 16r1.
		'SHGDN_NORMAL' -> 16r0.
		'SHGFI_ATTRIBUTES' -> 16r800.
		'SHGFI_DISPLAYNAME' -> 16r200.
		'SHGFI_EXETYPE' -> 16r2000.
		'SHGFI_ICON' -> 16r100.
		'SHGFI_ICONLOCATION' -> 16r1000.
		'SHGFI_LARGEICON' -> 16r0.
		'SHGFI_LINKOVERLAY' -> 16r8000.
		'SHGFI_OPENICON' -> 16r2.
		'SHGFI_PIDL' -> 16r8.
		'SHGFI_SELECTED' -> 16r10000.
		'SHGFI_SHELLICONSIZE' -> 16r4.
		'SHGFI_SMALLICON' -> 16r1.
		'SHGFI_SYSICONINDEX' -> 16r4000.
		'SHGFI_TYPENAME' -> 16r400.
		'SHGFI_USEFILEATTRIBUTES' -> 16r10.
		'SHREGDEL_BOTH' -> 16r11.
		'SHREGDEL_DEFAULT' -> 16r0.
		'SHREGDEL_HKCU' -> 16r1.
		'SHREGDEL_HKLM' -> 16r10.
		'SHREGENUM_BOTH' -> 16r11.
		'SHREGENUM_DEFAULT' -> 16r0.
		'SHREGENUM_HKCU' -> 16r1.
		'SHREGENUM_HKLM' -> 16r10.
		'SIMULATED_FONTTYPE' -> 16r8000.
		'SLGP_SHORTPATH' -> 16r1.
		'SLGP_UNCPRIORITY' -> 16r2.
		'SLR_ANY_MATCH' -> 16r2.
		'SLR_NO_UI' -> 16r1.
		'SLR_UPDATE' -> 16r4.
		'STD_COPY' -> 16r1.
		'STD_CUT' -> 16r0.
		'STD_DELETE' -> 16r5.
		'STD_FILENEW' -> 16r6.
		'STD_FILEOPEN' -> 16r7.
		'STD_FILESAVE' -> 16r8.
		'STD_FIND' -> 16rC.
		'STD_HELP' -> 16rB.
		'STD_PASTE' -> 16r2.
		'STD_PRINT' -> 16rE.
		'STD_PRINTPRE' -> 16r9.
		'STD_PROPERTIES' -> 16rA.
		'STD_REDOW' -> 16r4.
		'STD_REPLACE' -> 16rD.
		'STD_UNDO' -> 16r3.
		'STG_E_ABNORMALAPIEXIT' -> -16r7FFCFF06.
		'STG_E_ACCESSDENIED' -> -16r7FFCFFFB.
		'STG_E_BADBASEADDRESS' -> -16r7FFCFEF0.
		'STG_E_CANTSAVE' -> -16r7FFCFEFD.
		'STG_E_DISKISWRITEPROTECTED' -> -16r7FFCFFED.
		'STG_E_DOCFILECORRUPT' -> -16r7FFCFEF7.
		'STG_E_EXTANTMARSHALLINGS' -> -16r7FFCFEF8.
		'STG_E_FILEALREADYEXISTS' -> -16r7FFCFFB0.
		'STG_E_FILENOTFOUND' -> -16r7FFCFFFE.
		'STG_E_INCOMPLETE' -> -16r7FFCFDFF.
		'STG_E_INSUFFICIENTMEMORY' -> -16r7FFCFFF8.
		'STG_E_INUSE' -> -16r7FFCFF00.
		'STG_E_INVALIDFLAG' -> -16r7FFCFF01.
		'STG_E_INVALIDFUNCTION' -> -16r7FFCFFFF.
		'STG_E_INVALIDHANDLE' -> -16r7FFCFFFA.
		'STG_E_INVALIDHEADER' -> -16r7FFCFF05.
		'STG_E_INVALIDNAME' -> -16r7FFCFF04.
		'STG_E_INVALIDPARAMETER' -> -16r7FFCFFA9.
		'STG_E_INVALIDPOINTER' -> -16r7FFCFFF7.
		'STG_E_LOCKVIOLATION' -> -16r7FFCFFDF.
		'STG_E_MEDIUMFULL' -> -16r7FFCFF90.
		'STG_E_NOMOREFILES' -> -16r7FFCFFEE.
		'STG_E_NOTCURRENT' -> -16r7FFCFEFF.
		'STG_E_NOTFILEBASEDSTORAGE' -> -16r7FFCFEF9.
		'STG_E_OLDDLL' -> -16r7FFCFEFB.
		'STG_E_OLDFORMAT' -> -16r7FFCFEFC.
		'STG_E_PATHNOTFOUND' -> -16r7FFCFFFD.
		'STG_E_PROPSETMISMATCHED' -> -16r7FFCFF10.
		'STG_E_READFAULT' -> -16r7FFCFFE2.
		'STG_E_REVERTED' -> -16r7FFCFEFE.
		'STG_E_SEEKERROR' -> -16r7FFCFFE7.
		'STG_E_SHAREREQUIRED' -> -16r7FFCFEFA.
		'STG_E_SHAREVIOLATION' -> -16r7FFCFFE0.
		'STG_E_TERMINATED' -> -16r7FFCFDFE.
		'STG_E_TOOMANYOPENFILES' -> -16r7FFCFFFC.
		'STG_E_UNIMPLEMENTEDFUNCTION' -> -16r7FFCFF02.
		'STG_E_UNKNOWN' -> -16r7FFCFF03.
		'STG_E_WRITEFAULT' -> -16r7FFCFFE3.
		'STGM_CONVERT' -> 16r20000.
		'STGM_CREATE' -> 16r1000.
		'STGM_DELETEONRELEASE' -> 16r4000000.
		'STGM_DIRECT' -> 16r0.
		'STGM_FAILIFTHERE' -> 16r0.
		'STGM_NOSCRATCH' -> 16r100000.
		'STGM_NOSNAPSHOT' -> 16r200000.
		'STGM_PRIORITY' -> 16r40000.
		'STGM_READ' -> 16r0.
		'STGM_READWRITE' -> 16r2.
		'STGM_SHARE_DENY_NONE' -> 16r40.
		'STGM_SHARE_DENY_READ' -> 16r30.
		'STGM_SHARE_DENY_WRITE' -> 16r20.
		'STGM_SHARE_EXCLUSIVE' -> 16r10.
		'STGM_SIMPLE' -> 16r8000000.
		'STGM_TRANSACTED' -> 16r10000.
		'STGM_WRITE' -> 16r1.
		'STRRET_CSTR' -> 16r2.
		'STRRET_OFFSET' -> 16r1.
		'STRRET_WSTR' -> 16r0.
		'SVUIA_ACTIVATE_FOCUS' -> 16r2.
		'SVUIA_ACTIVATE_NOFOCUS' -> 16r1.
		'SVUIA_DEACTIVATE' -> 16r0.
		'SVUIA_INPLACEACTIVATE' -> 16r3.
		'SW_HIDE' -> 16r0.
		'SW_MAX' -> 16rA.
		'SW_MAXIMIZE' -> 16r3.
		'SW_MINIMIZE' -> 16r6.
		'SW_NORMAL' -> 16r1.
		'SW_RESTORE' -> 16r9.
		'SW_SHOW' -> 16r5.
		'SW_SHOWDEFAULT' -> 16rA.
		'SW_SHOWMAXIMIZED' -> 16r3.
		'SW_SHOWMINIMIZED' -> 16r2.
		'SW_SHOWMINNOACTIVE' -> 16r7.
		'SW_SHOWNA' -> 16r8.
		'SW_SHOWNOACTIVATE' -> 16r4.
		'SW_SHOWNORMAL' -> 16r1.
		'SYS_MAC' -> 16r2.
		'SYS_WIN16' -> 16r0.
		'SYS_WIN32' -> 16r1.
		'SYS_WIN64' -> 16r3.
		'TBSTATE_CHECKED' -> 16r1.
		'TBSTATE_ELLIPSES' -> 16r40.
		'TBSTATE_ENABLED' -> 16r4.
		'TBSTATE_HIDDEN' -> 16r8.
		'TBSTATE_INDETERMINATE' -> 16r10.
		'TBSTATE_PRESSED' -> 16r2.
		'TBSTATE_WRAP' -> 16r20.
		'TBSTYLE_ALTDRAG' -> 16r400.
		'TBSTYLE_BUTTON' -> 16r0.
		'TBSTYLE_CHECK' -> 16r2.
		'TBSTYLE_CHECKGROUP' -> 16r6.
		'TBSTYLE_CUSTOMERASE' -> 16r2000.
		'TBSTYLE_DROPDOWN' -> 16r8.
		'TBSTYLE_EX_DRAWDDARROWS' -> 16r1.
		'TBSTYLE_FLAT' -> 16r800.
		'TBSTYLE_GROUP' -> 16r4.
		'TBSTYLE_LIST' -> 16r1000.
		'TBSTYLE_REGISTERDROP' -> 16r4000.
		'TBSTYLE_SEP' -> 16r1.
		'TBSTYLE_TOOLTIPS' -> 16r100.
		'TBSTYLE_TRANSPARENT' -> 16r8000.
		'TBSTYLE_WRAPABLE' -> 16r200.
		'TKIND_ALIAS' -> 16r6.
		'TKIND_COCLASS' -> 16r5.
		'TKIND_DISPATCH' -> 16r4.
		'TKIND_ENUM' -> 16r0.
		'TKIND_INTERFACE' -> 16r3.
		'TKIND_MAX' -> 16r8.
		'TKIND_MODULE' -> 16r2.
		'TKIND_RECORD' -> 16r1.
		'TKIND_UNION' -> 16r7.
		'TM_MULTICODEPAGE' -> 16r20.
		'TM_MULTILEVELUNDO' -> 16r8.
		'TM_PLAINTEXT' -> 16r1.
		'TM_RICHTEXT' -> 16r2.
		'TM_SINGLECODEPAGE' -> 16r10.
		'TM_SINGLELEVELUNDO' -> 16r4.
		'triChecked' -> 16r1.
		'triGray' -> 16r2.
		'triUnchecked' -> 16r0.
		'UID_CUT' -> 16r4.
		'UID_DELETE' -> 16r2.
		'UID_DRAGDROP' -> 16r3.
		'UID_PASTE' -> 16r5.
		'UID_TYPING' -> 16r1.
		'UID_UNKNOWN' -> 16r0.
		'VAR_CONST' -> 16r2.
		'VAR_DISPATCH' -> 16r3.
		'VAR_PERINSTANCE' -> 16r0.
		'VAR_STATIC' -> 16r1.
		'VIEW_DETAILS' -> 16r3.
		'VIEW_LARGEICONS' -> 16r0.
		'VIEW_LIST' -> 16r2.
		'VIEW_NETCONNECT' -> 16r9.
		'VIEW_NETDISCONNECT' -> 16rA.
		'VIEW_NEWFOLDER' -> 16rB.
		'VIEW_PARENTFOLDER' -> 16r8.
		'VIEW_SMALLICONS' -> 16r1.
		'VIEW_SORTDATE' -> 16r6.
		'VIEW_SORTNAME' -> 16r4.
		'VIEW_SORTSIZE' -> 16r5.
		'VIEW_SORTTYPE' -> 16r7.
		'WPSTYLE_CENTER' -> 16r0.
		'WPSTYLE_MAX' -> 16r3.
		'WPSTYLE_STRETCH' -> 16r2.
		'WPSTYLE_TILE' -> 16r1
	}!
External.Structure subclass: #'OS.FIXED_INFO'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
External.Structure subclass: #'OS.IP_ADAPTER_INDEX_MAP'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_IP_ADAPTER_INDEX_MAP_Size' -> 16r104.
		'_OffsetOf_index' -> 16r0.
		'_OffsetOf_Name' -> 16r4
	}!
External.Structure subclass: #'OS.IP_ADAPTER_INFO'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_IP_ADAPTER_INFO_Size' -> 16r280.
		'_OffsetOf_AdapterName' -> 16r8.
		'_OffsetOf_Address' -> 16r194.
		'_OffsetOf_AddressLength' -> 16r190.
		'_OffsetOf_ComboIndex' -> 16r4.
		'_OffsetOf_CurrentIpAddress' -> 16r1A8.
		'_OffsetOf_Description' -> 16r10C.
		'_OffsetOf_DhcpEnabled' -> 16r1A4.
		'_OffsetOf_DhcpServer' -> 16r1FC.
		'_OffsetOf_GatewayList' -> 16r1D4.
		'_OffsetOf_HaveWins' -> 16r224.
		'_OffsetOf_index' -> 16r19C.
		'_OffsetOf_IpAddressList' -> 16r1AC.
		'_OffsetOf_LeaseExpires' -> 16r27C.
		'_OffsetOf_LeaseObtained' -> 16r278.
		'_OffsetOf_Next' -> 16r0.
		'_OffsetOf_PrimaryWinsServer' -> 16r228.
		'_OffsetOf_SecondaryWinsServer' -> 16r250.
		'_OffsetOf_type' -> 16r1A0
	}!
External.Structure subclass: #'OS.IP_ADDR_STRING'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_IP_ADDR_STRING_Size' -> 16r28.
		'_OffsetOf_Context' -> 16r24.
		'_OffsetOf_IpAddress' -> 16r4.
		'_OffsetOf_IpMask' -> 16r14.
		'_OffsetOf_Next' -> 16r0
	}!
External.Structure subclass: #'OS.IP_PER_ADAPTER_INFO'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_IP_PER_ADAPTER_INFO_Size' -> 16r34.
		'_OffsetOf_AutoconfigActive' -> 16r4.
		'_OffsetOf_AutoconfigEnabled' -> 16r0.
		'_OffsetOf_CurrentDnsServer' -> 16r8.
		'_OffsetOf_DnsServerList' -> 16rC
	}!
External.Structure subclass: #'OS.IP_UNIDIRECTIONAL_ADAPTER_ADDRESS'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_IP_UNIDIRECTIONAL_ADAPTER_ADDRESS_Size' -> 16r8.
		'_OffsetOf_Address' -> 16r4.
		'_OffsetOf_NumAdapters' -> 16r0
	}!
External.Structure subclass: #'OS.IpHlpApiTableStruct'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_IpHlpApiTableStruct_Size' -> 16r4.
		'_OffsetOf_dwNumEntries' -> 16r0
	}!
External.Structure subclass: #'OS.MIB_ICMP'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_ICMP_Size' -> 16r68.
		'_OffsetOf_stats' -> 16r0
	}!
External.Structure subclass: #'OS.MIB_ICMP_EX'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_ICMP_EX_Size' -> 16r810.
		'_OffsetOf_icmpInStats' -> 16r0.
		'_OffsetOf_icmpOutStats' -> 16r408
	}!
External.Structure subclass: #'OS.MIB_IFNUMBER'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IFNUMBER_Size' -> 16r4.
		'_OffsetOf_dwValue' -> 16r0
	}!
External.Structure subclass: #'OS.MIB_IFROW'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IFROW_Size' -> 16r35C.
		'_OffsetOf_bDescr' -> 16r25C.
		'_OffsetOf_bPhysAddr' -> 16r214.
		'_OffsetOf_dwAdminStatus' -> 16r21C.
		'_OffsetOf_dwDescrLen' -> 16r258.
		'_OffsetOf_dwIndex' -> 16r200.
		'_OffsetOf_dwInDiscards' -> 16r234.
		'_OffsetOf_dwInErrors' -> 16r238.
		'_OffsetOf_dwInNUcastPkts' -> 16r230.
		'_OffsetOf_dwInOctets' -> 16r228.
		'_OffsetOf_dwInUcastPkts' -> 16r22C.
		'_OffsetOf_dwInUnknownProtos' -> 16r23C.
		'_OffsetOf_dwLastChange' -> 16r224.
		'_OffsetOf_dwMtu' -> 16r208.
		'_OffsetOf_dwOperStatus' -> 16r220.
		'_OffsetOf_dwOutDiscards' -> 16r24C.
		'_OffsetOf_dwOutErrors' -> 16r250.
		'_OffsetOf_dwOutNUcastPkts' -> 16r248.
		'_OffsetOf_dwOutOctets' -> 16r240.
		'_OffsetOf_dwOutQLen' -> 16r254.
		'_OffsetOf_dwOutUcastPkts' -> 16r244.
		'_OffsetOf_dwPhysAddrLen' -> 16r210.
		'_OffsetOf_dwSpeed' -> 16r20C.
		'_OffsetOf_dwType' -> 16r204.
		'_OffsetOf_wszName' -> 16r0
	}!
External.Structure subclass: #'OS.MIB_IPADDRROW'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IPADDRROW_Size' -> 16r18.
		'_OffsetOf_dwAddr' -> 16r0.
		'_OffsetOf_dwBCastAddr' -> 16rC.
		'_OffsetOf_dwIndex' -> 16r4.
		'_OffsetOf_dwMask' -> 16r8.
		'_OffsetOf_dwReasmSize' -> 16r10.
		'_OffsetOf_Unused1' -> 16r14.
		'_OffsetOf_wType' -> 16r16
	}!
External.Structure subclass: #'OS.MIB_IPFORWARDROW'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IPFORWARDROW_Size' -> 16r38.
		'_OffsetOf_dwForwardAge' -> 16r1C.
		'_OffsetOf_dwForwardDest' -> 16r0.
		'_OffsetOf_dwForwardIfIndex' -> 16r10.
		'_OffsetOf_dwForwardMask' -> 16r4.
		'_OffsetOf_dwForwardMetric1' -> 16r24.
		'_OffsetOf_dwForwardMetric2' -> 16r28.
		'_OffsetOf_dwForwardMetric3' -> 16r2C.
		'_OffsetOf_dwForwardMetric4' -> 16r30.
		'_OffsetOf_dwForwardMetric5' -> 16r34.
		'_OffsetOf_dwForwardNextHop' -> 16rC.
		'_OffsetOf_dwForwardNextHopAS' -> 16r20.
		'_OffsetOf_dwForwardPolicy' -> 16r8.
		'_OffsetOf_dwForwardProto' -> 16r18.
		'_OffsetOf_dwForwardType' -> 16r14
	}!
External.Structure subclass: #'OS.MIB_IPNETROW'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IPNETROW_Size' -> 16r18.
		'_OffsetOf_bPhysAddr' -> 16r8.
		'_OffsetOf_dwAddr' -> 16r10.
		'_OffsetOf_dwIndex' -> 16r0.
		'_OffsetOf_dwPhysAddrLen' -> 16r4.
		'_OffsetOf_dwType' -> 16r14
	}!
External.Structure subclass: #'OS.MIB_IPSTATS'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IPSTATS_Size' -> 16r5C.
		'_OffsetOf_dwDefaultTTL' -> 16r4.
		'_OffsetOf_dwForwarding' -> 16r0.
		'_OffsetOf_dwForwDatagrams' -> 16r14.
		'_OffsetOf_dwFragCreates' -> 16r4C.
		'_OffsetOf_dwFragFails' -> 16r48.
		'_OffsetOf_dwFragOks' -> 16r44.
		'_OffsetOf_dwInAddrErrors' -> 16r10.
		'_OffsetOf_dwInDelivers' -> 16r20.
		'_OffsetOf_dwInDiscards' -> 16r1C.
		'_OffsetOf_dwInHdrErrors' -> 16rC.
		'_OffsetOf_dwInReceives' -> 16r8.
		'_OffsetOf_dwInUnknownProtos' -> 16r18.
		'_OffsetOf_dwNumAddr' -> 16r54.
		'_OffsetOf_dwNumIf' -> 16r50.
		'_OffsetOf_dwNumRoutes' -> 16r58.
		'_OffsetOf_dwOutDiscards' -> 16r2C.
		'_OffsetOf_dwOutNoRoutes' -> 16r30.
		'_OffsetOf_dwOutRequests' -> 16r24.
		'_OffsetOf_dwReasmFails' -> 16r40.
		'_OffsetOf_dwReasmOks' -> 16r3C.
		'_OffsetOf_dwReasmReqds' -> 16r38.
		'_OffsetOf_dwReasmTimeout' -> 16r34.
		'_OffsetOf_dwRoutingDiscards' -> 16r28
	}!
External.Structure subclass: #'OS.MIB_TCPROW'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_TCPROW_Size' -> 16r14.
		'_OffsetOf_dwLocalAddr' -> 16r4.
		'_OffsetOf_dwLocalPort' -> 16r8.
		'_OffsetOf_dwRemoteAddr' -> 16rC.
		'_OffsetOf_dwRemotePort' -> 16r10.
		'_OffsetOf_dwState' -> 16r0
	}!
External.Structure subclass: #'OS.MIB_TCPSTATS'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_TCPSTATS_Size' -> 16r3C.
		'_OffsetOf_dwActiveOpens' -> 16r10.
		'_OffsetOf_dwAttemptFails' -> 16r18.
		'_OffsetOf_dwCurrEstab' -> 16r20.
		'_OffsetOf_dwEstabResets' -> 16r1C.
		'_OffsetOf_dwInErrs' -> 16r30.
		'_OffsetOf_dwInSegs' -> 16r24.
		'_OffsetOf_dwMaxConn' -> 16rC.
		'_OffsetOf_dwNumConns' -> 16r38.
		'_OffsetOf_dwOutRsts' -> 16r34.
		'_OffsetOf_dwOutSegs' -> 16r28.
		'_OffsetOf_dwPassiveOpens' -> 16r14.
		'_OffsetOf_dwRetransSegs' -> 16r2C.
		'_OffsetOf_dwRtoAlgorithm' -> 16r0.
		'_OffsetOf_dwRtoMax' -> 16r8.
		'_OffsetOf_dwRtoMin' -> 16r4
	}!
External.Structure subclass: #'OS.MIB_UDPROW'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_UDPROW_Size' -> 16r8.
		'_OffsetOf_dwLocalAddr' -> 16r0.
		'_OffsetOf_dwLocalPort' -> 16r4
	}!
External.Structure subclass: #'OS.MIB_UDPSTATS'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_UDPSTATS_Size' -> 16r14.
		'_OffsetOf_dwInDatagrams' -> 16r0.
		'_OffsetOf_dwInErrors' -> 16r8.
		'_OffsetOf_dwNoPorts' -> 16r4.
		'_OffsetOf_dwNumAddrs' -> 16r10.
		'_OffsetOf_dwOutDatagrams' -> 16rC
	}!
External.Structure subclass: #'OS.MIBICMPINFO'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIBICMPINFO_Size' -> 16r68.
		'_OffsetOf_icmpInStats' -> 16r0.
		'_OffsetOf_icmpOutStats' -> 16r34
	}!
External.Structure subclass: #'OS.MIBICMPSTATS'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIBICMPSTATS_Size' -> 16r34.
		'_OffsetOf_dwAddrMaskReps' -> 16r30.
		'_OffsetOf_dwAddrMasks' -> 16r2C.
		'_OffsetOf_dwDestUnreachs' -> 16r8.
		'_OffsetOf_dwEchoReps' -> 16r20.
		'_OffsetOf_dwEchos' -> 16r1C.
		'_OffsetOf_dwErrors' -> 16r4.
		'_OffsetOf_dwMsgs' -> 16r0.
		'_OffsetOf_dwParmProbs' -> 16r10.
		'_OffsetOf_dwRedirects' -> 16r18.
		'_OffsetOf_dwSrcQuenchs' -> 16r14.
		'_OffsetOf_dwTimeExcds' -> 16rC.
		'_OffsetOf_dwTimestampReps' -> 16r28.
		'_OffsetOf_dwTimestamps' -> 16r24
	}!
External.Structure subclass: #'OS.MIBICMPSTATS_EX'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIBICMPSTATS_EX_Size' -> 16r408.
		'_OffsetOf_dwErrors' -> 16r4.
		'_OffsetOf_dwMsgs' -> 16r0.
		'_OffsetOf_rgdwTypeCount' -> 16r8
	}!
OS.IpHlpApiTableStruct subclass: #'OS.IP_ADAPTER_ORDER_MAP'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_IP_ADAPTER_ORDER_MAP_Size' -> 16r8.
		'_OffsetOf_table' -> 16r4
	}!
OS.IpHlpApiTableStruct subclass: #'OS.IP_INTERFACE_INFO'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_IP_INTERFACE_INFO_Size' -> 16r108.
		'_OffsetOf_table' -> 16r4
	}!
OS.IpHlpApiTableStruct subclass: #'OS.MIB_IFTABLE'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IFTABLE_Size' -> 16r360.
		'_OffsetOf_table' -> 16r4
	}!
OS.IpHlpApiTableStruct subclass: #'OS.MIB_IPADDRTABLE'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IPADDRTABLE_Size' -> 16r1C.
		'_OffsetOf_table' -> 16r4
	}!
OS.IpHlpApiTableStruct subclass: #'OS.MIB_IPFORWARDTABLE'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IPFORWARDTABLE_Size' -> 16r3C.
		'_OffsetOf_table' -> 16r4
	}!
OS.IpHlpApiTableStruct subclass: #'OS.MIB_IPNETTABLE'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_IPNETTABLE_Size' -> 16r1C.
		'_OffsetOf_table' -> 16r4
	}!
OS.IpHlpApiTableStruct subclass: #'OS.MIB_TCPTABLE'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_TCPTABLE_Size' -> 16r18.
		'_OffsetOf_table' -> 16r4
	}!
OS.IpHlpApiTableStruct subclass: #'OS.MIB_UDPTABLE'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_UDPTABLE_Size' -> 16rC.
		'_OffsetOf_table' -> 16r4
	}!
OS.MIB_TCPTABLE subclass: #'OS.MIB_TCPEXTABLE'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_TCPEXTABLE_Size' -> 16r1C
	}!
OS.MIB_UDPTABLE subclass: #'OS.MIB_UDPEXTABLE'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_UDPEXTABLE_Size' -> 16r10
	}!
OS.MIB_TCPROW subclass: #'OS.MIB_TCPEXROW'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_TCPEXROW_Size' -> 16r18.
		'_OffsetOf_dwProcessId' -> 16r14
	}!
OS.MIB_UDPROW subclass: #'OS.MIB_UDPEXROW'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {
		'_MIB_UDPEXROW_Size' -> 16rC.
		'_OffsetOf_dwProcessId' -> 16r8
	}!

"Loose Methods"!

!OS.IPHlpApiLibrary methodsFor!

AddIPAddress: address ipMask: ipMask ifIndex: ifIndex nteContext: nteContext nteInstance: nteInstance
	"Invoke the AddIPAddress() function of the module wrapped by the receiver.

		unsigned long __stdcall AddIPAddress(
			unsigned long Address,
			unsigned long IpMask,
			unsigned long IfIndex,
			unsigned long* NTEContext,
			unsigned long* NTEInstance);"

	<stdcall: dword AddIPAddress  dword dword dword dword* dword*>
	^self invalidCall!

AllocateAndGetTcpExTableFromStack: pTcpTable bOrder: bOrder heap: heap zero: zero flags: flags
	"Invoke the AllocateAndGetTcpExTableFromStack() function of the module wrapped by the receiver.

		unsigned long __stdcall AllocateAndGetTcpExTableFromStack(
			MIB_TCPEXTABLE** pTcpTable,
			long bOrder,
			long heap,
			unsigned long zero,
			unsigned long flags);"

	<stdcall: dword AllocateAndGetTcpExTableFromStack  MIB_TCPEXTABLE** sdword sdword dword dword>
	^self invalidCall!

AllocateAndGetUdpExTableFromStack: pTcpTable bOrder: bOrder heap: heap zero: zero flags: flags
	"Invoke the AllocateAndGetUdpExTableFromStack() function of the module wrapped by the receiver.

		unsigned long __stdcall AllocateAndGetUdpExTableFromStack(
			MIB_UDPEXTABLE** pTcpTable,
			long bOrder,
			long heap,
			unsigned long zero,
			unsigned long flags);"

	<stdcall: dword AllocateAndGetUdpExTableFromStack  MIB_UDPEXTABLE** sdword sdword dword dword>
	^self invalidCall!

CancelIPChangeNotify: notifyOverlapped
	"Invoke the CancelIPChangeNotify() function of the module wrapped by the receiver.

		long __stdcall CancelIPChangeNotify(
			[in]OVERLAPPED* notifyOverlapped);"

	<stdcall: sdword CancelIPChangeNotify  OVERLAPPED*>
	^self invalidCall!

CreateIpForwardEntry: pRoute
	"Invoke the CreateIpForwardEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall CreateIpForwardEntry(
			[in]MIB_IPFORWARDROW* pRoute);"

	<stdcall: dword CreateIpForwardEntry  MIB_IPFORWARDROW*>
	^self invalidCall!

CreateIpNetEntry: pArpEntry
	"Invoke the CreateIpNetEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall CreateIpNetEntry(
			[in]MIB_IPNETROW* pArpEntry);"

	<stdcall: dword CreateIpNetEntry  MIB_IPNETROW*>
	^self invalidCall!

CreateProxyArpEntry: dwAddress dwMask: dwMask dwIfIndex: dwIfIndex
	"Invoke the CreateProxyArpEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall CreateProxyArpEntry(
			[in]unsigned long dwAddress,
			[in]unsigned long dwMask,
			[in]unsigned long dwIfIndex);"

	<stdcall: dword CreateProxyArpEntry  dword dword dword>
	^self invalidCall!

DeleteIPAddress: nteContext
	"Invoke the DeleteIPAddress() function of the module wrapped by the receiver.

		unsigned long __stdcall DeleteIPAddress(
			unsigned long NTEContext);"

	<stdcall: dword DeleteIPAddress  dword>
	^self invalidCall!

DeleteIpForwardEntry: pRoute
	"Invoke the DeleteIpForwardEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall DeleteIpForwardEntry(
			[in]MIB_IPFORWARDROW* pRoute);"

	<stdcall: dword DeleteIpForwardEntry  MIB_IPFORWARDROW*>
	^self invalidCall!

DeleteIpNetEntry: pArpEntry
	"Invoke the DeleteIpNetEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall DeleteIpNetEntry(
			[in]MIB_IPNETROW* pArpEntry);"

	<stdcall: dword DeleteIpNetEntry  MIB_IPNETROW*>
	^self invalidCall!

DeleteProxyArpEntry: dwAddress dwMask: dwMask dwIfIndex: dwIfIndex
	"Invoke the DeleteProxyArpEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall DeleteProxyArpEntry(
			[in]unsigned long dwAddress,
			[in]unsigned long dwMask,
			[in]unsigned long dwIfIndex);"

	<stdcall: dword DeleteProxyArpEntry  dword dword dword>
	^self invalidCall!

DisableMediaSense: pHandle pOverlapped: pOverlapped
	"Invoke the DisableMediaSense() function of the module wrapped by the receiver.

		unsigned long __stdcall DisableMediaSense(
			long* pHandle,
			OVERLAPPED* pOverlapped);"

	<stdcall: dword DisableMediaSense  sdword* OVERLAPPED*>
	^self invalidCall!

EnableRouter: pHandle pOverlapped: pOverlapped
	"Invoke the EnableRouter() function of the module wrapped by the receiver.

		unsigned long __stdcall EnableRouter(
			long* pHandle,
			OVERLAPPED* pOverlapped);"

	<stdcall: dword EnableRouter  sdword* OVERLAPPED*>
	^self invalidCall!

FlushIpNetTable: dwIfIndex
	"Invoke the FlushIpNetTable() function of the module wrapped by the receiver.

		unsigned long __stdcall FlushIpNetTable(
			[in]unsigned long dwIfIndex);"

	<stdcall: dword FlushIpNetTable  dword>
	^self invalidCall!

GetAdapterIndex: adapterName ifIndex: ifIndex
	"Invoke the GetAdapterIndex() function of the module wrapped by the receiver.

		unsigned long __stdcall GetAdapterIndex(
			[in]LPWSTR AdapterName,
			[out]unsigned long* IfIndex);"

	<stdcall: dword GetAdapterIndex  lpwstr dword*>
	^self invalidCall!

GetAdapterOrderMap
	"Invoke the GetAdapterOrderMap() function of the module wrapped by the receiver.

		IP_ADAPTER_ORDER_MAP* __stdcall GetAdapterOrderMap();"

	<stdcall: IP_ADAPTER_ORDER_MAP* GetAdapterOrderMap >
	^self invalidCall!

getAdaptersInfo
	"
	self default getAdaptersInfo
	"

	| dwSize struct |
	dwSize := UInt32 new.
	self GetAdaptersInfo: nil pOutBufLen: dwSize.
	struct := IP_ADAPTER_INFO new: dwSize value.
	self GetAdaptersInfo: struct pOutBufLen: dwSize.
	^struct!

GetAdaptersInfo: pAdapterInfo pOutBufLen: pOutBufLen
	"Invoke the GetAdaptersInfo() function of the module wrapped by the receiver.

		unsigned long __stdcall GetAdaptersInfo(
			IP_ADAPTER_INFO* pAdapterInfo,
			unsigned long* pOutBufLen);"

	<stdcall: dword GetAdaptersInfo  IP_ADAPTER_INFO* dword*>
	^self invalidCall!

GetBestInterface: dwDestAddr pdwBestIfIndex: pdwBestIfIndex
	"Invoke the GetBestInterface() function of the module wrapped by the receiver.

		unsigned long __stdcall GetBestInterface(
			[in]unsigned long dwDestAddr,
			[out]unsigned long* pdwBestIfIndex);"

	<stdcall: dword GetBestInterface  dword dword*>
	^self invalidCall!

GetBestRoute: dwDestAddr dwSourceAddr: dwSourceAddr pBestRoute: pBestRoute
	"Invoke the GetBestRoute() function of the module wrapped by the receiver.

		unsigned long __stdcall GetBestRoute(
			[in]unsigned long dwDestAddr,
			[in]unsigned long dwSourceAddr,
			[out]MIB_IPFORWARDROW* pBestRoute);"

	<stdcall: dword GetBestRoute  dword dword MIB_IPFORWARDROW*>
	^self invalidCall!

GetFriendlyIfIndex: ifIndex
	"Invoke the GetFriendlyIfIndex() function of the module wrapped by the receiver.

		unsigned long __stdcall GetFriendlyIfIndex(
			unsigned long IfIndex);"

	<stdcall: dword GetFriendlyIfIndex  dword>
	^self invalidCall!

getIcmpStatistics
	"
	self default getIcmpStatistics
	"

	| struct err |
	struct := MIB_ICMP new.
	err := self GetIcmpStatistics: struct.
	err == 0 ifFalse: [Win32Error signalWith: err].
	^struct!

GetIcmpStatistics: pStats
	"Invoke the GetIcmpStatistics() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIcmpStatistics(
			[out]MIB_ICMP* pStats);"

	<stdcall: dword GetIcmpStatistics  MIB_ICMP*>
	^self invalidCall!

GetIcmpStatisticsEx: pStats dwFamily: dwFamily
	"Invoke the GetIcmpStatisticsEx() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIcmpStatisticsEx(
			[out]MIB_ICMP_EX* pStats,
			[in]unsigned long dwFamily);"

	<stdcall: dword GetIcmpStatisticsEx  MIB_ICMP_EX* dword>
	^self invalidCall!

GetIfEntry: pIfRow
	"Invoke the GetIfEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIfEntry(
			[in, out]MIB_IFROW* pIfRow);"

	<stdcall: dword GetIfEntry  MIB_IFROW*>
	^self invalidCall!

getIfTable
	"
	self default getIfTable
	"

	| struct err dwSize |
	dwSize := UInt32 new.
	self
		GetIfTable: nil
		pdwSize: dwSize
		bOrder: TRUE.
	struct := MIB_IFTABLE new: dwSize value.
	err := self
				GetIfTable: struct
				pdwSize: dwSize
				bOrder: TRUE.
	err == 0 ifFalse: [Win32Error signalWith: err].
	^struct!

GetIfTable: pIfTable pdwSize: pdwSize bOrder: bOrder
	"Invoke the GetIfTable() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIfTable(
			[out]MIB_IFTABLE* pIfTable,
			[in, out]unsigned long* pdwSize,
			[in]long bOrder);"

	<stdcall: dword GetIfTable  MIB_IFTABLE* dword* sdword>
	^self invalidCall!

getInterfaceInfo
	"
	self default getInterfaceInfo
	"

	| dwSize struct |
	dwSize := UInt32 new.
	self GetInterfaceInfo: nil dwOutBufLen: dwSize.
	struct := IP_INTERFACE_INFO new: dwSize value.
	self GetInterfaceInfo: struct dwOutBufLen: dwSize.
	^struct!

GetInterfaceInfo: pIfTable dwOutBufLen: dwOutBufLen
	"Invoke the GetInterfaceInfo() function of the module wrapped by the receiver.

		unsigned long __stdcall GetInterfaceInfo(
			[in]IP_INTERFACE_INFO* pIfTable,
			[out]unsigned long* dwOutBufLen);"

	<stdcall: dword GetInterfaceInfo  IP_INTERFACE_INFO* dword*>
	^self invalidCall!

getIpAddrTable
	"
	self default getIpAddrTable
	"

	| struct err dwSize |
	dwSize := UInt32 new.
	self
		GetIpAddrTable: nil
		pdwSize: dwSize
		bOrder: TRUE.
	struct := MIB_IPADDRTABLE new: dwSize value.
	err := self
				GetIpAddrTable: struct
				pdwSize: dwSize
				bOrder: TRUE.
	err == 0 ifFalse: [Win32Error signalWith: err].
	^struct!

GetIpAddrTable: pIpAddrTable pdwSize: pdwSize bOrder: bOrder
	"Invoke the GetIpAddrTable() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIpAddrTable(
			[out]MIB_IPADDRTABLE* pIpAddrTable,
			[in, out]unsigned long* pdwSize,
			[in]long bOrder);"

	<stdcall: dword GetIpAddrTable  MIB_IPADDRTABLE* dword* sdword>
	^self invalidCall!

GetIpErrorString: errorCode buffer: buffer size: size
	"Invoke the GetIpErrorString() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIpErrorString(
			[in]unsigned long ErrorCode,
			[out]unsigned short* Buffer,
			[in, out]unsigned long* Size);"

	<stdcall: dword GetIpErrorString  dword word* dword*>
	^self invalidCall!

getIpForwardTable
	"
	self default getIpForwardTable
	"

	| struct err dwSize |
	dwSize := UInt32 new.
	self
		GetIpForwardTable: nil
		pdwSize: dwSize
		bOrder: TRUE.
	struct := MIB_IPFORWARDTABLE new: dwSize value.
	err := self
				GetIpForwardTable: struct
				pdwSize: dwSize
				bOrder: TRUE.
	err == 0 ifFalse: [Win32Error signalWith: err].
	^struct!

GetIpForwardTable: pIpForwardTable pdwSize: pdwSize bOrder: bOrder
	"Invoke the GetIpForwardTable() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIpForwardTable(
			[out]MIB_IPFORWARDTABLE* pIpForwardTable,
			[in, out]unsigned long* pdwSize,
			[in]long bOrder);"

	<stdcall: dword GetIpForwardTable  MIB_IPFORWARDTABLE* dword* sdword>
	^self invalidCall!

getIpNetTable
	"
	self default getIpNetTable
	"

	| struct err dwSize |
	dwSize := UInt32 new.
	self
		GetIpNetTable: nil
		pdwSize: dwSize
		bOrder: TRUE.
	struct := MIB_IPNETTABLE new: dwSize value.
	err := self
				GetIpNetTable: struct
				pdwSize: dwSize
				bOrder: TRUE.
	err == 0 ifFalse: [Win32Error signalWith: err].
	^struct!

GetIpNetTable: pIpNetTable pdwSize: pdwSize bOrder: bOrder
	"Invoke the GetIpNetTable() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIpNetTable(
			[out]MIB_IPNETTABLE* pIpNetTable,
			[in, out]unsigned long* pdwSize,
			[in]long bOrder);"

	<stdcall: dword GetIpNetTable  MIB_IPNETTABLE* dword* sdword>
	^self invalidCall!

getIpStatistics
	"
	self default getIpStatistics
	"

	| struct err |
	struct := MIB_IPSTATS new.
	err := self GetIpStatistics: struct.
	err == 0 ifFalse: [Win32Error signalWith: err].
	^struct!

GetIpStatistics: pStats
	"Invoke the GetIpStatistics() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIpStatistics(
			[out]MIB_IPSTATS* pStats);"

	<stdcall: dword GetIpStatistics  MIB_IPSTATS*>
	^self invalidCall!

GetIpStatisticsEx: pStats dwFamily: dwFamily
	"Invoke the GetIpStatisticsEx() function of the module wrapped by the receiver.

		unsigned long __stdcall GetIpStatisticsEx(
			[out]MIB_IPSTATS* pStats,
			[in]unsigned long dwFamily);"

	<stdcall: dword GetIpStatisticsEx  MIB_IPSTATS* dword>
	^self invalidCall!

GetNetworkParams: pFixedInfo pOutBufLen: pOutBufLen
	"Invoke the GetNetworkParams() function of the module wrapped by the receiver.

		unsigned long __stdcall GetNetworkParams(
			FIXED_INFO* pFixedInfo,
			unsigned long* pOutBufLen);"

	<stdcall: dword GetNetworkParams  FIXED_INFO* dword*>
	^self invalidCall!

GetNumberOfInterfaces: pdwNumIf
	"Invoke the GetNumberOfInterfaces() function of the module wrapped by the receiver.

		unsigned long __stdcall GetNumberOfInterfaces(
			[out]unsigned long* pdwNumIf);"

	<stdcall: dword GetNumberOfInterfaces  dword*>
	^self invalidCall!

getPerAdapterInfo: ifIndex
	"
	self default getPerAdapterInfo: 3
	"

	| struct dwSize error |
	struct := IP_PER_ADAPTER_INFO new.
	dwSize := UInt32 fromInteger: struct byteSize.
	error := self
				GetPerAdapterInfo: ifIndex
				pPerAdapterInfo: struct
				pOutBufLen: dwSize.
	error == 0
		ifFalse: 
			[Win32Error signal: 'Error retrieving per-adapter info for ' , ifIndex printString with: error].
	^struct!

GetPerAdapterInfo: ifIndex pPerAdapterInfo: pPerAdapterInfo pOutBufLen: pOutBufLen
	"Invoke the GetPerAdapterInfo() function of the module wrapped by the receiver.

		unsigned long __stdcall GetPerAdapterInfo(
			unsigned long IfIndex,
			IP_PER_ADAPTER_INFO* pPerAdapterInfo,
			unsigned long* pOutBufLen);"

	<stdcall: dword GetPerAdapterInfo  dword IP_PER_ADAPTER_INFO* dword*>
	^self invalidCall!

GetRTTAndHopCount: destIpAddress hopCount: hopCount maxHops: maxHops rtt: rtt
	"Invoke the GetRTTAndHopCount() function of the module wrapped by the receiver.

		long __stdcall GetRTTAndHopCount(
			unsigned long DestIpAddress,
			unsigned long* HopCount,
			unsigned long MaxHops,
			unsigned long* RTT);"

	<stdcall: sdword GetRTTAndHopCount  dword dword* dword dword*>
	^self invalidCall!

getTcpExTable
	"
	self default getTcpExTable
	"
	| struct |
	struct := MIB_TCPEXTABLE newHeapPointer.
	self AllocateAndGetTcpExTableFromStack: struct bOrder: TRUE heap: Memory processHeap zero: 2 flags: 2.
	^struct!

getTcpStatistics
	"
	self default getTcpStatistics
	"

	| struct err |
	struct := MIB_TCPSTATS new.
	err := self GetTcpStatistics: struct.
	err == 0 ifFalse: [Win32Error signalWith: err].
	^struct!

GetTcpStatistics: pStats
	"Invoke the GetTcpStatistics() function of the module wrapped by the receiver.

		unsigned long __stdcall GetTcpStatistics(
			[out]MIB_TCPSTATS* pStats);"

	<stdcall: dword GetTcpStatistics  MIB_TCPSTATS*>
	^self invalidCall!

GetTcpStatisticsEx: pStats dwFamily: dwFamily
	"Invoke the GetTcpStatisticsEx() function of the module wrapped by the receiver.

		unsigned long __stdcall GetTcpStatisticsEx(
			[out]MIB_TCPSTATS* pStats,
			[in]unsigned long dwFamily);"

	<stdcall: dword GetTcpStatisticsEx  MIB_TCPSTATS* dword>
	^self invalidCall!

getTcpTable
	"
	table := IPHlpApiLibrary default getTcpTable.
	table collect: [:each | each dwLocalPort].
	"

	| dwSize error tcpTable |
	dwSize := UInt32 new.
	error := self
				GetTcpTable: nil
				pdwSize: dwSize
				bOrder: TRUE.
	"		if( error !!= ERROR_INSUFFICIENT_BUFFER ) {"
	tcpTable := MIB_TCPTABLE new: dwSize asInteger.
	error := self
				GetTcpTable: tcpTable
				pdwSize: dwSize
				bOrder: TRUE.
	error == 0 ifFalse: [self error: 'Failed to snapshot TCP endpoints.'].
	^tcpTable!

GetTcpTable: pTcpTable pdwSize: pdwSize bOrder: bOrder
	"Invoke the GetTcpTable() function of the module wrapped by the receiver.

		unsigned long __stdcall GetTcpTable(
			[out]MIB_TCPTABLE* pTcpTable,
			[in, out]unsigned long* pdwSize,
			[in]long bOrder);"

	<stdcall: dword GetTcpTable  MIB_TCPTABLE* dword* sdword>
	^self invalidCall!

getUdpStatistics
	"
	self default getUdpStatistics
	"

	| struct err |
	struct := MIB_UDPSTATS new.
	err := self GetUdpStatistics: struct.
	err == 0 ifFalse: [Win32Error signalWith: err].
	^struct!

GetUdpStatistics: pStats
	"Invoke the GetUdpStatistics() function of the module wrapped by the receiver.

		unsigned long __stdcall GetUdpStatistics(
			[out]MIB_UDPSTATS* pStats);"

	<stdcall: dword GetUdpStatistics  MIB_UDPSTATS*>
	^self invalidCall!

GetUdpStatisticsEx: pStats dwFamily: dwFamily
	"Invoke the GetUdpStatisticsEx() function of the module wrapped by the receiver.

		unsigned long __stdcall GetUdpStatisticsEx(
			[out]MIB_UDPSTATS* pStats,
			[in]unsigned long dwFamily);"

	<stdcall: dword GetUdpStatisticsEx  MIB_UDPSTATS* dword>
	^self invalidCall!

getUdpTable
	"
	table := IPHlpApiLibrary default getUdpTable
	table talbe collect: [:each | each port].
	"

	| dwSize error struct |
	dwSize := UInt32 new.
	error := self
				GetUdpTable: nil
				pdwSize: dwSize
				bOrder: TRUE.
	struct := MIB_UDPTABLE new: dwSize asInteger.
	error := self
				GetUdpTable: struct
				pdwSize: dwSize
				bOrder: TRUE.
	error == 0 ifFalse: [Win32Error signalWith: error].
	^struct!

GetUdpTable: pUdpTable pdwSize: pdwSize bOrder: bOrder
	"Invoke the GetUdpTable() function of the module wrapped by the receiver.

		unsigned long __stdcall GetUdpTable(
			[out]MIB_UDPTABLE* pUdpTable,
			[in, out]unsigned long* pdwSize,
			[in]long bOrder);"

	<stdcall: dword GetUdpTable  MIB_UDPTABLE* dword* sdword>
	^self invalidCall!

getUniDirectionalAdapterInfo
	"
	self default getUniDirectionalAdapterInfo
	"

	| dwSize struct error |
	struct := IP_UNIDIRECTIONAL_ADAPTER_ADDRESS new.
	dwSize := UInt32 fromInteger: struct size.
	error := self GetUniDirectionalAdapterInfo: struct dwOutBufLen: dwSize.
	error == 0 ifFalse: [Win32Error signalWith: error].
	^struct!

GetUniDirectionalAdapterInfo: pIPIfInfo dwOutBufLen: dwOutBufLen
	"Invoke the GetUniDirectionalAdapterInfo() function of the module wrapped by the receiver.

		unsigned long __stdcall GetUniDirectionalAdapterInfo(
			[out]IP_UNIDIRECTIONAL_ADAPTER_ADDRESS* pIPIfInfo,
			[out]unsigned long* dwOutBufLen);"

	<stdcall: dword GetUniDirectionalAdapterInfo  IP_UNIDIRECTIONAL_ADAPTER_ADDRESS* dword*>
	^self invalidCall!

IpReleaseAddress: adapterInfo
	"Invoke the IpReleaseAddress() function of the module wrapped by the receiver.

		unsigned long __stdcall IpReleaseAddress(
			IP_ADAPTER_INDEX_MAP* AdapterInfo);"

	<stdcall: dword IpReleaseAddress  IP_ADAPTER_INDEX_MAP*>
	^self invalidCall!

IpRenewAddress: adapterInfo
	"Invoke the IpRenewAddress() function of the module wrapped by the receiver.

		unsigned long __stdcall IpRenewAddress(
			IP_ADAPTER_INDEX_MAP* AdapterInfo);"

	<stdcall: dword IpRenewAddress  IP_ADAPTER_INDEX_MAP*>
	^self invalidCall!

NhpAllocateAndGetInterfaceInfoFromStack: ppTable pdwCount: pdwCount bOrder: bOrder hHeap: hHeap dwFlags: dwFlags
	"Invoke the NhpAllocateAndGetInterfaceInfoFromStack() function of the module wrapped by the receiver.

		unsigned long __stdcall NhpAllocateAndGetInterfaceInfoFromStack(
			[out]ip_interface_name_info** ppTable,
			[out]unsigned long* pdwCount,
			[in]long bOrder,
			[in]long hHeap,
			[in]unsigned long dwFlags);"

	<stdcall: dword NhpAllocateAndGetInterfaceInfoFromStack  void** dword* sdword sdword dword>
	^self invalidCall!

NotifyAddrChange: handle1 overlapped: overlapped
	"Invoke the NotifyAddrChange() function of the module wrapped by the receiver.

		unsigned long __stdcall NotifyAddrChange(
			[out]long* Handle,
			[in]OVERLAPPED* overlapped);"

	<stdcall: dword NotifyAddrChange  sdword* OVERLAPPED*>
	^self invalidCall!

NotifyRouteChange: handle1 overlapped: overlapped
	"Invoke the NotifyRouteChange() function of the module wrapped by the receiver.

		unsigned long __stdcall NotifyRouteChange(
			[out]long* Handle,
			[in]OVERLAPPED* overlapped);"

	<stdcall: dword NotifyRouteChange  sdword* OVERLAPPED*>
	^self invalidCall!

RestoreMediaSense: pOverlapped lpdwEnableCount: lpdwEnableCount
	"Invoke the RestoreMediaSense() function of the module wrapped by the receiver.

		unsigned long __stdcall RestoreMediaSense(
			OVERLAPPED* pOverlapped,
			unsigned long* lpdwEnableCount);"

	<stdcall: dword RestoreMediaSense  OVERLAPPED* dword*>
	^self invalidCall!

SendARP: destIP srcIP: srcIP pMacAddr: pMacAddr phyAddrLen: phyAddrLen
	"Invoke the SendARP() function of the module wrapped by the receiver.

		unsigned long __stdcall SendARP(
			unsigned long DestIP,
			unsigned long SrcIP,
			unsigned long* pMacAddr,
			unsigned long* PhyAddrLen);"

	<stdcall: dword SendARP  dword dword dword* dword*>
	^self invalidCall!

SetIfEntry: pIfRow
	"Invoke the SetIfEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall SetIfEntry(
			[in]MIB_IFROW* pIfRow);"

	<stdcall: dword SetIfEntry  MIB_IFROW*>
	^self invalidCall!

SetIpForwardEntry: pRoute
	"Invoke the SetIpForwardEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall SetIpForwardEntry(
			[in]MIB_IPFORWARDROW* pRoute);"

	<stdcall: dword SetIpForwardEntry  MIB_IPFORWARDROW*>
	^self invalidCall!

SetIpNetEntry: pArpEntry
	"Invoke the SetIpNetEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall SetIpNetEntry(
			[in]MIB_IPNETROW* pArpEntry);"

	<stdcall: dword SetIpNetEntry  MIB_IPNETROW*>
	^self invalidCall!

SetIpStatistics: pIpStats
	"Invoke the SetIpStatistics() function of the module wrapped by the receiver.

		unsigned long __stdcall SetIpStatistics(
			[in]MIB_IPSTATS* pIpStats);"

	<stdcall: dword SetIpStatistics  MIB_IPSTATS*>
	^self invalidCall!

SetIpTTL: nTTL
	"Invoke the SetIpTTL() function of the module wrapped by the receiver.

		unsigned long __stdcall SetIpTTL(
			unsigned int nTTL);"

	<stdcall: dword SetIpTTL  dword>
	^self invalidCall!

SetTcpEntry: pTcpRow
	"Invoke the SetTcpEntry() function of the module wrapped by the receiver.

		unsigned long __stdcall SetTcpEntry(
			[in]MIB_TCPROW* pTcpRow);"

	<stdcall: dword SetTcpEntry  MIB_TCPROW*>
	^self invalidCall!

UnenableRouter: pOverlapped lpdwEnableCount: lpdwEnableCount
	"Invoke the UnenableRouter() function of the module wrapped by the receiver.

		unsigned long __stdcall UnenableRouter(
			OVERLAPPED* pOverlapped,
			unsigned long* lpdwEnableCount);"

	<stdcall: dword UnenableRouter  OVERLAPPED* dword*>
	^self invalidCall! !
!OS.IPHlpApiLibrary categoriesForMethods!
AddIPAddress:ipMask:ifIndex:nteContext:nteInstance:!**auto generated**!public! !
AllocateAndGetTcpExTableFromStack:bOrder:heap:zero:flags:!**auto generated**!public! !
AllocateAndGetUdpExTableFromStack:bOrder:heap:zero:flags:!**auto generated**!public! !
CancelIPChangeNotify:!**auto generated**!public! !
CreateIpForwardEntry:!**auto generated**!public! !
CreateIpNetEntry:!**auto generated**!public! !
CreateProxyArpEntry:dwMask:dwIfIndex:!**auto generated**!public! !
DeleteIPAddress:!**auto generated**!public! !
DeleteIpForwardEntry:!**auto generated**!public! !
DeleteIpNetEntry:!**auto generated**!public! !
DeleteProxyArpEntry:dwMask:dwIfIndex:!**auto generated**!public! !
DisableMediaSense:pOverlapped:!**auto generated**!public! !
EnableRouter:pOverlapped:!**auto generated**!public! !
FlushIpNetTable:!**auto generated**!public! !
GetAdapterIndex:ifIndex:!**auto generated**!public! !
GetAdapterOrderMap!**auto generated**!public! !
getAdaptersInfo!enquiries!public! !
GetAdaptersInfo:pOutBufLen:!**auto generated**!public! !
GetBestInterface:pdwBestIfIndex:!**auto generated**!public! !
GetBestRoute:dwSourceAddr:pBestRoute:!**auto generated**!public! !
GetFriendlyIfIndex:!**auto generated**!public! !
getIcmpStatistics!enquiries!public! !
GetIcmpStatistics:!**auto generated**!public! !
GetIcmpStatisticsEx:dwFamily:!**auto generated**!public! !
GetIfEntry:!**auto generated**!public! !
getIfTable!enquiries!public! !
GetIfTable:pdwSize:bOrder:!**auto generated**!public! !
getInterfaceInfo!enquiries!public! !
GetInterfaceInfo:dwOutBufLen:!**auto generated**!public! !
getIpAddrTable!enquiries!public! !
GetIpAddrTable:pdwSize:bOrder:!**auto generated**!public! !
GetIpErrorString:buffer:size:!**auto generated**!public! !
getIpForwardTable!enquiries!public! !
GetIpForwardTable:pdwSize:bOrder:!**auto generated**!public! !
getIpNetTable!enquiries!public! !
GetIpNetTable:pdwSize:bOrder:!**auto generated**!public! !
getIpStatistics!enquiries!public! !
GetIpStatistics:!**auto generated**!public! !
GetIpStatisticsEx:dwFamily:!**auto generated**!public! !
GetNetworkParams:pOutBufLen:!**auto generated**!public! !
GetNumberOfInterfaces:!**auto generated**!public! !
getPerAdapterInfo:!enquiries!public! !
GetPerAdapterInfo:pPerAdapterInfo:pOutBufLen:!**auto generated**!public! !
GetRTTAndHopCount:hopCount:maxHops:rtt:!**auto generated**!public! !
getTcpExTable!enquiries!public! !
getTcpStatistics!enquiries!public! !
GetTcpStatistics:!**auto generated**!public! !
GetTcpStatisticsEx:dwFamily:!**auto generated**!public! !
getTcpTable!enquiries!public! !
GetTcpTable:pdwSize:bOrder:!**auto generated**!public! !
getUdpStatistics!enquiries!public! !
GetUdpStatistics:!**auto generated**!public! !
GetUdpStatisticsEx:dwFamily:!**auto generated**!public! !
getUdpTable!enquiries!public! !
GetUdpTable:pdwSize:bOrder:!**auto generated**!public! !
getUniDirectionalAdapterInfo!enquiries!public! !
GetUniDirectionalAdapterInfo:dwOutBufLen:!**auto generated**!public! !
IpReleaseAddress:!**auto generated**!public! !
IpRenewAddress:!**auto generated**!public! !
NhpAllocateAndGetInterfaceInfoFromStack:pdwCount:bOrder:hHeap:dwFlags:!**auto generated**!public! !
NotifyAddrChange:overlapped:!**auto generated**!public! !
NotifyRouteChange:overlapped:!**auto generated**!public! !
RestoreMediaSense:lpdwEnableCount:!**auto generated**!public! !
SendARP:srcIP:pMacAddr:phyAddrLen:!**auto generated**!public! !
SetIfEntry:!**auto generated**!public! !
SetIpForwardEntry:!**auto generated**!public! !
SetIpNetEntry:!**auto generated**!public! !
SetIpStatistics:!**auto generated**!public! !
SetIpTTL:!**auto generated**!public! !
SetTcpEntry:!**auto generated**!public! !
UnenableRouter:lpdwEnableCount:!**auto generated**!public! !
!

"End of package definition"!

