"Filed out from Dolphin Smalltalk 7"!

Presenter subclass: #EtchASketch
	instanceVariableNames: 'upDownKnob leftRightKnob sketchPad lastLocation'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
EtchASketch guid: (GUID fromString: '{87b4c68a-026e-11d3-9fd7-00a0cc3e4a32}')!
EtchASketch comment: 'EtchASketch is a <compositePresenter> component that emulates the popular Etch-a-Sketch toy. It allows "ink" to be drawn onto a sketch pad by means of two "knobs"; one for horizontal movement and one for vertical movement. In the basic view the knobs are represented by scroll bars. EtchASketch makes use of the Scribble component for its sketch area.

There are a couple of limitations that make this example not ideal:

1/ It is not possible (with the Windows interface) to move both "knobs" simultaneously. This means that it is not possible to draw diagonal lines.

2/ A new InkStroke object is added for each incremental movement of a "knob". This is relatively inefficient, since a scrollbar will create many events as it is moved, resulting in many InkStrokes being created. A more sophisticated approach would be to coalesce the consequetive movements of a knob into one stroke. This is left as an exercise for the reader.

Example: 

EtchASketch show.

See the package comment for further examples of use.

Instance Variables:
	upDownKnob	<NumberPresenter> for the vertical drawing "knob".
	leftRightKnob	<NumberPresenter> for the horizontal drawing "knob".
	sketchPad		<Scribble> displaying the picture.
	lastLocation	<Point> holding the last location drawn to.





'!
!EtchASketch categoriesForClass!MVP-Presenters!Samples! !
!EtchASketch methodsFor!

createComponents
	"Create the presenters contained by the receiver"

	super createComponents.
	upDownKnob := self add: NumberPresenter new name: 'upDownKnob'.
	leftRightKnob := self add: NumberPresenter new name: 'leftRightKnob'.
	sketchPad := self add: Scribble new name: 'sketchPad'.
!

createSchematicWiring
	"Create the trigger wiring for the receiver"

	super createSchematicWiring.
	leftRightKnob when: #valueChanged send: #onKnobChanged to: self.
	upDownKnob when: #valueChanged send: #onKnobChanged to: self.
!

initialize
	"Private - Initialize the receiver"

	super initialize.
	lastLocation := 0@0.!

model: aListModel
	"Connects the receiver to aListModel. Since the receiver has the same model as the
	sketch pad (Scribble) component that it holds we pass this down to it."

	super model: aListModel.
	sketchPad model: aListModel.!

onKnobChanged
	"Private - Once of the knobs has been moved. Draw to the correct location in the sketch pad"

	| newLocation inkStroke scale |

	"Find the location indicated by the current state of the knobs. Their range is 0-100%
	so scale this to the extent of the sketch pad view"
	scale := sketchPad view extent / 100.
	newLocation := ((leftRightKnob value @ upDownKnob value) * scale) truncated.

	"Create an InkStroke representing this movement from the last known location.
	Add this to the model."
	inkStroke := InkStroke new
		addPoint: lastLocation;
		addPoint: newLocation;
		yourself.
	self model add: inkStroke.

	"Remember the current location as the last"
	lastLocation := newLocation.! !
!EtchASketch categoriesFor: #createComponents!initializing!public! !
!EtchASketch categoriesFor: #createSchematicWiring!initializing!public! !
!EtchASketch categoriesFor: #initialize!initializing!private! !
!EtchASketch categoriesFor: #model:!accessing!public! !
!EtchASketch categoriesFor: #onKnobChanged!event handling!private! !

!EtchASketch class methodsFor!

defaultModel
	"Answer a default model to be assigned to the receiver when it
	is initialized."

	^ListModel new!

icon

	"Generated from:
	self createIconMethod: #icon ofSize: 48@48 fromFile: 'C:\Object Arts\Dev\Dolphin6\Object Arts\Samples\MVP\Etch-a-Sketch\Etch-a-Sketch.png'.
	"
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 48 0 0 0 48 8 6 0 0 0 87 2 249 135 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 13 88 73 68 65 84 104 67 237 89 121 84 84 215 25 87 1 1 97 216 134 89 24 54 217 21 23 20 87 68 4 68 20 119 141 98 112 193 37 154 168 77 154 152 38 141 199 102 41 77 210 196 212 147 198 166 73 107 76 52 42 81 131 102 57 77 210 36 231 104 76 154 180 39 132 157 97 64 64 16 68 145 1 102 123 243 230 13 96 218 254 250 221 55 60 36 206 68 52 205 201 201 31 114 206 239 220 251 238 155 251 222 247 251 182 251 125 143 97 195 238 252 221 209 192 29 13 220 209 192 207 66 3 189 233 73 176 167 38 129 79 155 8 126 142 3 54 9 116 207 70 224 51 38 131 79 119 64 188 166 251 92 250 36 216 104 159 121 246 36 88 83 167 194 156 154 12 99 202 36 8 51 198 194 146 50 22 252 244 177 48 206 76 132 144 28 15 219 228 49 48 39 199 130 155 24 13 123 210 104 216 19 35 209 147 24 13 243 184 72 240 99 34 96 77 8 131 45 46 12 246 216 112 216 226 195 96 141 211 64 136 84 131 15 87 160 39 76 9 187 60 0 54 79 79 244 184 15 135 147 210 174 165 77 3 247 233 105 240 239 190 5 43 129 59 125 140 198 66 88 78 31 133 229 157 67 34 184 83 116 175 232 36 132 162 34 152 79 29 21 127 99 63 85 8 161 240 48 132 227 135 96 61 121 16 157 111 189 2 225 200 107 176 189 121 16 252 155 47 163 247 173 87 193 253 101 31 186 14 189 12 227 225 125 176 30 216 7 203 171 123 209 187 127 63 190 221 251 2 236 47 62 75 248 45 122 94 120 18 194 222 39 96 45 120 12 246 223 237 134 240 212 163 16 158 124 4 61 191 249 21 108 143 61 8 251 238 95 160 119 215 14 216 183 109 192 41 153 183 51 1 123 202 100 152 246 60 12 227 206 245 48 238 200 135 113 59 97 199 102 24 118 108 162 113 3 44 15 108 132 253 207 207 161 126 215 253 248 111 225 27 232 126 226 17 116 238 220 2 211 61 59 176 127 246 20 52 62 254 48 154 214 229 226 111 15 229 130 223 178 18 198 77 107 209 124 100 15 44 27 239 198 201 237 185 184 240 242 227 232 222 176 10 205 43 22 162 101 205 82 92 121 128 158 189 124 49 244 57 179 96 221 187 7 215 158 123 28 173 235 86 163 231 233 199 192 101 103 192 178 112 14 204 11 82 97 157 151 10 115 198 116 244 164 37 195 78 22 20 200 74 111 251 184 59 19 224 167 199 161 107 207 46 152 182 230 145 80 4 54 110 203 167 49 31 214 123 55 194 178 125 19 170 182 174 193 153 133 153 248 100 241 92 84 255 50 31 93 247 174 67 245 125 43 112 225 245 125 56 115 223 90 212 31 122 14 207 47 75 65 85 238 82 156 125 118 23 90 239 207 71 115 222 18 180 28 222 143 150 231 119 67 251 250 111 209 88 248 34 145 121 26 197 143 108 129 237 208 94 180 228 164 224 131 25 99 240 229 236 100 84 166 205 68 213 226 84 8 153 179 96 155 159 6 115 230 76 114 219 20 114 229 25 224 103 145 219 38 197 161 55 46 20 39 253 92 16 224 166 198 64 191 251 33 112 36 60 183 197 1 11 205 249 123 215 139 115 211 214 181 176 145 86 141 219 214 194 188 125 3 244 219 243 32 208 53 183 101 53 76 155 115 209 189 109 61 122 242 215 192 176 125 45 236 121 43 96 36 45 91 242 150 194 150 119 23 248 181 43 97 165 81 88 181 2 246 213 11 192 173 204 194 181 101 243 193 45 202 64 55 211 244 226 44 152 23 101 194 178 104 14 254 157 149 1 33 43 77 212 60 151 69 214 73 159 41 18 224 102 80 28 78 188 9 1 43 89 160 251 215 15 193 186 153 4 223 124 183 67 104 210 142 153 52 98 156 151 14 99 246 28 152 230 103 136 48 206 79 135 57 103 174 3 139 232 229 11 153 0 217 48 44 153 239 64 78 22 12 139 179 105 255 60 152 179 233 55 243 104 31 61 195 144 73 90 77 155 5 83 234 76 24 83 167 161 107 230 100 232 167 39 65 63 105 140 136 142 164 4 92 157 24 143 246 9 241 184 58 46 14 109 9 209 232 148 123 195 146 54 3 246 169 227 208 51 62 158 44 16 142 19 178 17 206 46 100 157 30 139 174 71 31 132 101 211 221 48 111 90 35 194 178 52 7 186 234 102 104 107 90 69 232 106 219 104 108 65 21 173 85 84 54 137 40 175 104 68 105 89 3 202 202 206 163 172 164 90 68 105 113 141 19 202 250 215 74 74 181 40 43 215 161 164 162 30 37 229 245 40 173 108 160 231 56 80 165 189 0 173 174 9 213 4 54 106 117 205 248 106 116 2 140 179 103 64 152 66 153 44 49 22 61 177 97 56 233 138 0 63 53 26 134 135 119 128 35 193 185 141 36 124 126 46 172 203 50 80 83 211 4 93 77 195 0 170 171 234 80 89 161 19 81 81 94 131 178 210 106 148 124 83 121 219 96 251 36 176 231 72 207 100 207 31 252 190 143 53 49 232 156 49 1 125 147 38 192 30 63 26 125 49 161 56 18 48 210 133 5 166 70 161 227 129 109 224 214 174 18 193 83 70 176 44 154 61 64 160 86 215 8 109 245 121 81 104 134 242 50 45 74 75 170 110 91 112 87 100 25 17 246 60 70 194 137 64 168 131 128 125 66 34 122 201 165 122 162 66 112 196 223 21 129 41 163 209 113 255 86 88 197 128 91 9 75 238 114 74 101 169 208 105 29 22 24 76 128 189 140 225 135 104 254 251 246 72 4 152 114 106 180 245 3 86 96 22 208 147 251 216 18 227 33 196 70 194 70 135 154 75 2 252 196 8 24 118 18 129 188 101 3 48 45 78 67 93 181 131 0 211 62 211 142 228 54 63 150 246 37 66 236 121 146 117 7 91 225 35 178 128 113 98 34 185 15 105 159 78 104 33 76 142 163 126 46 44 192 8 116 239 184 7 150 53 75 6 208 77 89 136 17 96 218 151 124 159 105 234 86 253 158 9 37 97 40 107 177 223 177 231 50 18 85 149 181 162 194 152 226 28 4 198 66 136 139 134 45 138 74 11 145 128 135 115 12 8 227 195 41 135 231 131 191 43 103 0 220 252 217 148 133 90 69 147 74 218 191 21 205 15 22 102 112 176 14 181 151 221 103 10 98 36 36 43 188 31 17 3 235 184 104 244 198 132 131 143 80 131 11 11 198 97 87 65 204 39 106 208 185 109 29 184 21 116 192 244 195 50 111 22 197 64 171 168 17 41 235 220 76 8 41 24 37 127 150 50 11 27 37 203 221 44 118 36 107 73 4 152 226 24 1 99 66 4 236 163 53 215 9 248 187 176 128 53 49 4 93 91 232 100 93 150 45 194 74 48 101 77 129 182 170 81 36 48 84 202 148 124 88 34 202 246 48 45 178 81 218 47 101 175 161 92 240 122 70 170 197 123 225 100 129 152 40 8 163 149 164 253 32 152 195 131 112 200 223 211 217 133 108 9 26 24 54 82 9 177 52 11 150 37 14 152 178 166 146 230 207 223 54 1 38 248 224 76 34 37 0 182 126 43 49 244 93 2 177 48 71 70 64 136 34 2 36 188 57 60 208 53 1 33 94 13 211 122 58 196 22 209 209 79 197 26 131 33 147 10 172 242 243 3 238 115 179 64 28 28 128 76 248 243 117 77 34 234 207 55 163 174 246 194 64 34 184 149 51 68 178 102 117 85 45 222 15 39 2 17 225 176 70 200 9 193 48 106 252 241 134 204 69 22 178 196 171 232 0 203 5 151 147 57 0 235 220 105 168 162 35 127 40 173 13 118 31 230 46 44 107 49 193 27 27 90 112 161 177 21 13 245 23 69 18 140 152 20 79 67 185 17 187 207 220 241 84 84 60 76 97 161 176 132 43 97 14 83 160 59 52 16 7 93 165 81 70 192 146 183 26 124 118 186 8 97 62 85 135 233 201 168 40 115 152 253 251 180 127 99 224 49 119 97 194 50 2 205 77 109 34 24 17 182 198 210 226 237 16 96 214 98 4 44 17 97 162 240 166 208 96 232 67 252 241 154 175 171 126 32 70 137 110 58 196 4 170 58 249 108 71 35 97 153 51 249 150 44 192 200 73 126 43 89 64 34 193 44 192 200 72 103 201 237 38 132 227 17 84 145 134 107 96 214 168 208 25 162 64 91 72 32 94 117 69 128 139 38 243 80 253 206 103 205 22 235 112 6 195 172 137 3 49 48 84 237 115 227 33 196 4 150 72 72 238 35 101 40 166 217 155 197 211 245 24 168 195 177 208 72 116 132 82 124 18 1 189 58 24 151 212 1 120 197 101 71 22 173 132 129 14 49 107 6 235 130 168 137 160 78 200 56 115 60 149 185 183 150 133 152 64 146 223 178 108 195 192 220 137 249 61 27 165 180 122 43 241 52 184 176 59 166 14 135 94 163 70 7 105 255 138 42 8 151 148 1 216 47 115 113 14 216 34 131 97 90 177 128 190 54 144 240 4 158 186 160 174 169 99 81 173 189 181 115 96 48 1 169 166 145 206 0 54 74 39 236 237 17 168 197 17 85 24 174 170 20 104 215 4 227 178 218 65 224 37 87 4 248 208 0 152 168 181 227 211 166 195 218 15 125 114 130 88 78 51 13 74 167 233 247 5 180 20 204 82 233 112 227 105 60 148 224 76 1 174 78 226 55 149 26 180 43 131 69 2 109 170 64 180 4 251 225 143 174 98 160 87 49 10 93 57 228 255 83 233 123 15 181 122 182 148 100 180 79 74 160 14 236 146 152 61 126 72 45 116 99 29 52 84 45 36 149 34 82 41 193 226 232 40 185 80 187 138 132 215 4 161 69 233 143 70 185 47 254 32 115 145 133 250 168 64 234 158 155 2 142 250 81 158 62 95 176 30 180 61 41 94 36 32 245 2 67 89 225 198 192 252 49 170 81 230 66 109 10 135 240 23 21 126 104 8 242 193 11 62 46 122 98 139 239 8 24 231 36 193 58 134 202 214 113 177 16 136 72 219 248 40 156 175 106 249 73 250 1 41 70 152 246 153 203 50 165 49 203 31 80 135 160 149 130 183 137 220 167 129 98 64 167 244 195 179 94 46 106 33 163 215 112 24 166 36 128 139 164 170 47 58 148 26 136 8 92 26 31 141 134 106 135 11 73 86 144 2 242 167 234 200 254 170 82 227 130 220 31 205 68 160 54 88 6 45 185 208 51 158 46 178 144 201 99 56 172 36 48 31 30 140 190 48 21 108 17 74 92 78 136 68 121 195 21 212 106 233 32 210 94 132 150 190 26 84 84 157 167 175 9 148 199 217 151 5 54 210 87 6 241 75 67 41 53 248 37 52 47 166 62 185 184 194 25 172 241 167 245 226 226 114 20 211 156 225 155 254 192 45 43 163 70 166 130 26 153 42 157 136 26 93 3 106 106 29 56 16 74 94 160 144 161 78 233 11 173 194 23 229 20 196 207 184 178 64 247 200 97 232 162 166 134 11 11 161 170 79 142 107 148 186 58 101 110 56 171 80 227 115 101 32 206 169 2 240 5 153 240 156 66 142 207 20 129 248 135 90 129 47 148 114 124 174 150 227 28 29 48 12 103 200 212 103 232 250 44 213 43 103 52 215 241 25 93 179 253 103 233 229 127 87 249 225 35 114 131 79 25 200 167 63 145 203 240 177 220 7 31 146 111 127 40 247 195 7 65 126 120 47 192 15 239 7 250 225 157 0 25 218 182 174 70 19 201 80 175 246 65 53 89 162 218 223 23 79 141 116 81 204 93 246 36 23 26 23 131 226 132 56 52 109 162 222 152 126 204 42 64 33 84 1 33 66 69 95 3 212 212 84 168 168 46 87 128 157 25 18 122 168 66 236 33 171 49 216 169 221 99 99 47 117 78 34 232 203 178 157 190 42 247 208 126 11 89 148 163 145 35 37 152 41 151 243 68 212 170 12 2 23 28 0 189 34 0 157 52 239 32 23 209 19 169 118 210 248 85 90 187 26 236 143 90 82 82 169 202 19 231 102 167 226 195 76 250 204 35 147 225 113 55 55 231 126 160 117 132 27 254 99 235 132 205 108 133 213 100 134 165 171 27 197 81 212 198 133 249 82 33 37 167 106 80 78 214 113 6 91 119 134 210 81 61 246 151 0 172 12 48 133 170 96 160 211 148 213 51 172 36 184 74 121 157 229 246 43 33 114 42 15 2 69 176 64 189 64 228 26 21 148 46 9 245 100 157 182 32 82 138 208 13 129 115 200 101 227 44 216 229 49 202 153 192 87 30 222 176 154 251 96 179 112 34 4 66 95 159 13 6 210 148 81 163 32 97 148 84 214 42 97 28 4 3 173 177 117 39 80 229 104 212 208 190 16 250 61 193 64 232 164 223 117 208 115 58 84 114 17 151 201 221 216 193 196 208 74 238 37 230 120 73 112 154 235 200 10 186 96 95 180 23 252 30 223 118 11 215 229 34 5 127 241 110 145 51 129 51 228 103 188 89 128 197 202 161 215 200 129 163 177 143 255 22 250 96 119 122 185 28 122 66 23 53 212 12 157 228 38 6 42 109 37 24 217 188 127 157 221 235 38 173 118 144 181 174 18 46 83 44 56 64 115 90 111 35 77 51 180 18 90 168 48 187 168 242 39 205 7 161 129 92 166 145 220 72 71 22 96 194 179 128 173 150 7 194 116 244 56 236 102 11 140 54 82 170 153 131 137 231 81 249 245 215 206 4 170 221 60 208 195 219 192 25 204 48 89 204 48 152 141 56 72 126 119 33 194 135 94 46 19 209 174 150 225 74 63 216 252 178 202 247 59 184 164 246 197 149 80 63 210 180 63 90 67 124 209 162 241 197 197 126 52 171 253 232 58 0 77 180 175 153 208 72 89 165 65 57 10 245 10 111 212 209 65 85 71 194 215 82 114 168 164 216 43 167 181 114 165 55 74 130 70 225 43 186 215 169 55 136 194 243 86 30 102 142 67 166 155 139 131 236 75 239 17 120 209 205 11 186 127 254 11 188 209 136 77 147 103 161 144 82 235 113 175 145 56 49 114 4 78 120 142 64 17 141 167 61 24 134 163 200 211 13 167 189 28 56 69 243 34 111 55 156 244 26 129 83 190 35 241 158 143 39 78 251 121 161 72 230 137 183 233 250 164 143 7 78 140 242 196 9 122 214 49 79 119 20 82 30 47 244 166 185 151 7 142 208 51 15 141 244 196 235 238 30 120 131 198 3 238 238 248 19 189 227 37 202 138 47 185 15 195 62 175 97 216 73 107 250 203 109 48 116 234 49 103 184 55 118 208 181 211 191 152 118 14 31 86 144 229 47 47 200 150 203 196 113 97 160 127 193 98 127 7 150 202 229 5 43 3 3 69 44 151 59 176 42 80 94 176 148 93 43 228 5 171 232 62 187 94 73 227 114 90 91 202 246 16 196 57 61 71 4 93 139 247 9 108 31 123 254 2 90 91 224 47 19 231 12 217 52 103 200 34 100 6 58 144 37 147 21 164 249 248 23 164 200 188 11 210 100 129 5 211 124 60 11 166 120 251 20 252 44 254 177 120 71 136 59 26 184 163 129 255 95 3 255 3 205 178 172 4 35 132 222 78 0 0 0 0 73 69 78 68 174 66 96 130]!

initialize
	"Private - Initialize the receiver's class variables
		self initialize
	"

	Smalltalk developmentSystem 
		addSamplesFolderIconFor: self
		description: self sampleDescription
		helpId: 10619!

resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 3 788558 10 ##(STBViewProxy)  8 ##(ContainerView)  98 15 0 0 98 2 8 1140850688 131073 416 0 196934 1 ##(RGB)  511 0 7 0 0 0 416 788230 ##(BorderLayout)  1 1 410 8 ##(StaticText)  98 16 0 416 98 2 8 1140850945 1 560 0 498 511 0 7 0 263174 ##(Font)  0 16 459014 ##(LOGFONT)  8 #[241 255 255 255 0 0 0 0 0 0 0 0 0 0 0 0 144 1 0 0 0 0 0 0 3 2 1 34 65 114 105 97 108 32 66 108 97 99 107 0 109 97 110 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] 328198 ##(Point)  193 193 0 560 498 33554431 8 4294906439 852486 ##(NullConverter)  0 0 0 983302 ##(MessageSequence)  202 208 98 2 721670 ##(MessageSend)  8 #createAt:extent: 98 2 738 41 1 738 621 51 560 898 8 #text: 98 1 8 'Etch-a-Sketch(tm)' 560 983302 ##(WINDOWPLACEMENT)  8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 20 0 0 0 0 0 0 0 74 1 0 0 25 0 0 0] 98 0 738 193 193 0 27 410 8 ##(Slider)  98 18 0 416 98 2 8 1140916224 1 1136 721990 2 ##(ValueHolder)  0 32 1376774 ##(PluggableSearchPolicy)  459270 ##(Message)  8 #= 98 0 1282 8 #hash 98 0 0 524550 ##(ColorRef)  8 4278190080 0 7 0 0 0 1136 0 8 4294907137 802 0 0 3 0 0 834 202 208 98 4 898 928 98 2 738 41 411 738 621 51 1136 898 8 #ticks: 98 1 98 2 1 201 1136 898 8 #pageSize: 98 1 1 1136 898 8 #range: 98 1 525062 ##(Interval)  1 201 3 1136 1058 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 20 0 0 0 205 0 0 0 74 1 0 0 230 0 0 0] 98 0 1120 0 27 410 1152 98 18 0 416 98 2 8 1140916226 1 1824 1218 0 32 1264 0 1394 1424 0 7 0 0 0 1824 0 8 4294907137 802 0 0 3 0 0 834 202 208 98 4 898 928 98 2 738 611 51 738 51 361 1824 898 1600 98 1 98 2 1 201 1824 898 1664 98 1 1 1824 898 1712 98 1 1746 1 201 3 1824 1058 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 49 1 0 0 25 0 0 0 74 1 0 0 205 0 0 0] 98 0 1120 0 27 0 410 8 ##(ScribbleView)  98 12 0 416 98 2 8 1140850688 1 2240 590662 2 ##(ListModel)  202 208 98 0 0 1114638 ##(STBSingletonProxy)  8 ##(SearchPolicy)  8 #identity 721158 ##(SystemColor)  31 0 7 0 0 0 2240 834 202 208 98 1 898 928 98 2 738 41 51 738 571 361 2240 1058 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 20 0 0 0 25 0 0 0 49 1 0 0 205 0 0 0] 98 0 1120 0 27 234 256 98 6 2240 8 'sketchPad' 1136 8 'leftRightKnob' 1824 8 'upDownKnob' 590342 ##(Rectangle)  738 41 1 738 41 41 834 202 208 98 1 898 928 98 2 738 11 11 738 701 501 416 1058 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 5 0 0 0 5 0 0 0 99 1 0 0 255 0 0 0] 98 4 1136 1824 2240 560 1120 0 27 )!

sampleDescription
	"Private - Answer the description of the receiver to be used in the samples folder."

	^'Etch-a-Sketch'!

uninitialize
	"Private - Un-register the system folder icon for the receiver.
		self uninitialize
	"

	Smalltalk developmentSystem 
		removeSystemFolderIconNamed: self sampleDescription! !
!EtchASketch class categoriesFor: #defaultModel!models!public! !
!EtchASketch class categoriesFor: #icon!constants!public! !
!EtchASketch class categoriesFor: #initialize!initializing!private! !
!EtchASketch class categoriesFor: #resource_Default_view!public!resources-views! !
!EtchASketch class categoriesFor: #sampleDescription!constants!development!private! !
!EtchASketch class categoriesFor: #uninitialize!initializing!must strip!private! !

