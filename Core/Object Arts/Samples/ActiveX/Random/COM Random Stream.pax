| package |
package := Package name: 'COM Random Stream'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk Random Stream COM Server Sample
Copyright (c) Object Arts Ltd, 1997-2025. Portions copyright CGI Group (Europe) Ltd, 1997.

The RandomStream Sample demonstrates Dolphin''s basic COM facilities (i.e. calling and implementation of COM interfaces, class factories, automatic reference counting, etc).

N.B. This package must be distributed with its type library, Random.tlb, if it is to be invoked from another process, e.g. VB. The typelib can be built into an in-process DLL (see example below), and then the result registered with `regsvr32.exe` before use.

The package provides client (IRandomStream) and server (COMRandomStream) implementations of a simple Random Number Generator object. The interface is OLE automation compatible, and can therefore be used without a marshalling DLL if the supplied type library is first registered.

This sample is compatible with Visual Basic 5 and later. When VB (or another tool) is used as a client then for development purposes Dolphin can be started automatically in embedded (headless) mode and will act as the server. Dolphin automatically registers the class factory when this package is installed (see the post install script to see how this is done). When you release the last interface pointer from a client then Dolphin should close down automatically.

## Development

You can use Dolphin as both client and server:
```
r := OS.COM.Examples.IRandomStream2 new.
r next 	"Debug it (F11)"
```

To debug/test the server from another client, first register the component: `OS.COM.Examples.RandomStream registerComServer`

Now shutdown the development image and start the RandomVBClient.exe found in the package folder. This should launch the Dolphin development image in-proc, i.e. as a DLL (IPDolphin.dll) loaded into the VB process.

## Deployment as DLL:

```
Smalltalk developmentSystem saveImage.	"Save the image if you don''t want to lose changes"
(AXDllImageStripper new)
	rootPackage: OS.COM.Examples.IRandomStream owningPackage;
	executableName: ''DRandom.dll'';
	typeLibPath: OS.COM.Examples.IRandomStream typeLibraryPath;
	stripDeprecatedMethods: true;
	"logReferencesToClasses: true;"
	deploy
```

And to examine the content: 

```
Smalltalk developmentSystem browseDeploymentLog: ''DRandom.xml''
"Or view the log"
UI.Examples.XmlPad openOn: ''DRandom.xml''
```
'.

package basicScriptAt: #postinstall put: 'OS.COM.Examples.RandomStream registerClassFactory'.
package basicScriptAt: #preuninstall put: '"Revoke the class factory registration."
OS.COM.Examples.RandomStream revokeClassFactories'.

package setClassNames: #(
	#{OS.COM.Examples.IRandomStream}
	#{OS.COM.Examples.IRandomStream2}
	#{OS.COM.Examples.RandomStream}
	#{OS.COM.Examples.RandomStreamSessionManager}
).

package setVariableNames: #(
	#{OS.COM.Examples.RANDOMLib}
).

package setBinaryVariableNames: #(
	#{OS.COM.Examples.RANDOMLib}
).

package setPrerequisites: #(
	'..\..\..\Dolphin\ActiveX\Automation\ActiveX Automation'
	'..\..\..\Dolphin\Lagoon\ActiveX DLL Server'
	'..\COM Examples'
	'..\..\..\Dolphin\Base\Dolphin'
	'..\..\..\Dolphin\System\Random\Dolphin Random Stream'
	'..\..\..\Dolphin\ActiveX\COM\OLE COM'
).

package!

"Class Definitions"!

OS.COM.DualInterfaceImplementation
	subclass: #'OS.COM.Examples.RandomStream'
	instanceVariableNames: 'lowerBound upperBound stream'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

Kernel.AXDllSessionManager
	subclass: #'OS.COM.Examples.RandomStreamSessionManager'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

OS.COM.IDispatch
	subclass: #'OS.COM.Examples.IRandomStream'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

OS.COM.Examples.IRandomStream
	subclass: #'OS.COM.Examples.IRandomStream2'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"End of package definition"!

