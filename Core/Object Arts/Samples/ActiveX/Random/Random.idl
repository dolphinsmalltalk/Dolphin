// Random.idl : IDL source for Random.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (Random.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	
	[
		object,
		uuid(0E2CEA3B-E6C4-11D2-833B-0020AFAB8EFE),
		dual,
		helpstring("IRandomStream Interface"),
		pointer_default(unique),
		nonextensible
	]
	interface IRandomStream : IDispatch
	{
		[id(1), helpstring("Answer the next random number in the stream")]
			HRESULT Next([out,retval]long* plNext);
		[propget, id(2), helpstring("Current random seed")]
			HRESULT Seed([out, retval] long *pVal);
		[propput, id(2), helpstring("Current random seed")]
			HRESULT Seed([in] long newVal);
		[propget, id(3), helpstring("Lower bound of range of random numbers generated")]
			HRESULT LowerBound([out, retval] long *pVal);
		[propput, id(3), helpstring("Lower bound of range of random numbers generated")]
			HRESULT LowerBound([in] long newVal);
		[propget, id(4), helpstring("Upper bound of range of random numbers generated")]
			HRESULT UpperBound([out, retval] long *pVal);
		[propput, id(4), helpstring("Upper bound of range of random numbers generated")]
			HRESULT UpperBound([in] long newVal);
	};

	[
		object,
			uuid(32829FC4-B067-4665-99AE-8F9E452D996E),
			dual,
			helpstring("IRandomStream2 Interface"),
			pointer_default(unique),
			nonextensible,
			restricted	// Uses unsigned integers, so not really suitable for scripting languages
	]
	interface IRandomStream2 : IRandomStream
	{
		[propget, id(5), helpstring("LCG multiplier")]
			HRESULT Multiplier([out, retval] DWORD* pVal);
		[propput, id(5), helpstring("LCG multiplier")]
			HRESULT Multiplier([in] DWORD newVal);
		[propget, id(6), helpstring("LCG increment")]
			HRESULT Increment([out, retval] DWORD * pVal);
		[propput, id(6), helpstring("LCG increment")]
			HRESULT Increment([in] DWORD newVal);
		[propget, id(7), helpstring("LCG modulus")]
			HRESULT Modulus([out, retval] DWORD* pVal);
		[propput, id(7), helpstring("LCG modulus")]
			HRESULT Modulus([in] DWORD newVal);
	};

[
	uuid(0E2CEA2F-E6C4-11D2-833B-0020AFAB8EFE),
	version(1.1),
	helpstring("Random 1.1 Type Library")
]
library RANDOMLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	interface IRandomStream;

	[
		uuid(A1D42F35-E6C0-11D2-833B-0020AFAB8EFE)
	]
	coclass RandomStream
	{
		[default] interface IRandomStream;
		interface IRandomStream2;
	};
};
