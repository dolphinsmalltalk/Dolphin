<?xml version="1.0" encoding="UTF-8"?>
<Lagoon xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="Lagoon.xsd">
	<Configuration>
		<ImagePath>D:\dev\blairmcg\Dolphin\DPRO</ImagePath> 
		<TimeStamp> 2022-03-04T17:34:54.3696412+00:00</TimeStamp>
		<Target>D:\dev\blairmcg\Dolphin\HelloCli.exe</Target>
		<ImageStatistics>
			<ObjectCount>491662</ObjectCount>
			<ClassCount>3053</ClassCount>
			<MethodCount>55898</MethodCount>
			<SymbolCount>35070</SymbolCount>
		</ImageStatistics>
		<DevelopmentMethodCategories>
			<MethodCategory>development</MethodCategory>
			<MethodCategory>class hierarchy-adding</MethodCategory>
		</DevelopmentMethodCategories>
		<RequiredMethodCategories>
			<MethodCategory>must not strip</MethodCategory>
		</RequiredMethodCategories>
	</Configuration>
	<!-- Creating executable stub: D:\dev\blairmcg\Dolphin\HelloCli.exe -->
	<PreStrip>
		<Method methodClass="Kernel.AbsoluteFileLocator class">onPreStripImage</Method>
		<Method methodClass="UI.Examples.Animal class">onPreStripImage</Method>
		<Method methodClass="Kernel.ChunkReader class">onPreStripImage</Method>
		<Method methodClass="UI.Clipboard class">onPreStripImage</Method>
		<Method methodClass="Kernel.CompiledCode class">onPreStripImage</Method>
		<Method methodClass="Graphics.Cursor class">onPreStripImage</Method>
		<Method methodClass="Core.Delay class">onPreStripImage</Method>
		<Method methodClass="UI.DividerMenuItem class">onPreStripImage</Method>
		<Method methodClass="UI.DragDropSession class">onPreStripImage</Method>
		<Method methodClass="Core.Duration class">onPreStripImage</Method>
		<Method methodClass="External.DynamicLinkLibrary class">onPreStripImage</Method>
		<Method methodClass="Graphics.Font class">onPreStripImage</Method>
		<Method methodClass="Graphics.Gdiplus.FontFamilyInitializer class">onPreStripImage</Method>
		<Method methodClass="UI.FramingCalculation class">onPreStripImage</Method>
		<Method methodClass="Core.GUID class">onPreStripImage</Method>
		<Method methodClass="OS.COM.ICatInformation class">onPreStripImage</Method>
		<Method methodClass="Graphics.Icon class">onPreStripImage</Method>
		<Method methodClass="Graphics.IconImageManager class">onPreStripImage</Method>
		<Method methodClass="Graphics.Gdiplus.ImageAttributesInitializer class">onPreStripImage</Method>
		<Method methodClass="Kernel.ImageRelativeFileLocator class">onPreStripImage</Method>
		<Method methodClass="Smalltalk.ImageStripperProgress class">onPreStripImage</Method>
		<Method methodClass="Graphics.Gdiplus.InstalledFontCollectionInitializer class">onPreStripImage</Method>
		<Method methodClass="Kernel.InstallRelativeFileLocator class">onPreStripImage</Method>
		<Method methodClass="UI.Keyboard class">onPreStripImage</Method>
		<Method methodClass="Core.Locale class">onPreStripImage</Method>
		<Method methodClass="UI.Examples.Notepad class">onPreStripImage</Method>
		<Method methodClass="Tools.Examples.OAIDEExtensions class">onPreStripImage</Method>
		<Method methodClass="Core.Object class">onPreStripImage</Method>
		<Method methodClass="Kernel.Package class">onPreStripImage</Method>
		<Method methodClass="Graphics.Gdiplus.PrivateFontCollectionInitializer class">onPreStripImage</Method>
		<Method methodClass="Refactory.Browser.Refactoring class">onPreStripImage</Method>
		<Method methodClass="Refactory.Browser.RefactoringManager class">onPreStripImage</Method>
		<Method methodClass="Refactory.Browser.RefactoryChangeManager class">onPreStripImage</Method>
		<Method methodClass="UI.Examples.RegEdit class">onPreStripImage</Method>
		<Method methodClass="Graphics.Gdiplus.RegionInitializer class">onPreStripImage</Method>
		<Method methodClass="UI.ResourceIdentifier class">onPreStripImage</Method>
		<Method methodClass="External.ResourceLibrary class">onPreStripImage</Method>
		<Method methodClass="UI.RichText class">onPreStripImage</Method>
		<Method methodClass="Kernel.SingletonSearchPolicy class">onPreStripImage</Method>
		<Method methodClass="Graphics.Gdiplus.StringFormat class">onPreStripImage</Method>
		<Method methodClass="Graphics.Gdiplus.StringFormatInitializer class">onPreStripImage</Method>
		<Method methodClass="OS.SystemMetrics class">onPreStripImage</Method>
		<Method methodClass="OS.COM.TypeLibraryAnalyzer class">onPreStripImage</Method>
	</PreStrip>
	<DefineExternalStructures></DefineExternalStructures>
	<PrepareExternalStructures>
		<CompileExternalStructures>
			<!-- Error: Structure class>>byteSize at line 2: undeclared '_Structure_Size' -->
			<!-- Error: Structure class>>byteSize at line 2: undeclared '_Structure_Size' -->
			<StripMethods reason="explicit">
				<Method methodClass="External.Structure class">canUnderstand:</Method>
				<Method methodClass="External.Structure class">getFieldNames</Method>
			</StripMethods>
			<StripMethods reason="explicit">
				<Method methodClass="External.Structure">doesNotUnderstand:</Method>
			</StripMethods>
			<StripClasses reason="structure field descriptors">
				<RemoveClass>Smalltalk.ConformantArrayField</RemoveClass>
				<RemoveClass>External.StringField</RemoveClass>
				<RemoveClass>Smalltalk.ConformantStructureArrayField</RemoveClass>
				<RemoveClass>External.PointerArrayField</RemoveClass>
				<RemoveClass>External.StructureArrayField</RemoveClass>
				<RemoveClass>External.ArrayField</RemoveClass>
				<RemoveClass>External.StructureField</RemoveClass>
				<RemoveClass>External.EmbeddedField</RemoveClass>
				<RemoveClass>External.FillerField</RemoveClass>
				<RemoveClass>Smalltalk.ConformantArrayPointerField</RemoveClass>
				<RemoveClass>Smalltalk.ConformantStructureArrayPointerField</RemoveClass>
				<RemoveClass>External.PointerArrayPointerField</RemoveClass>
				<RemoveClass>External.StructureArrayPointerField</RemoveClass>
				<RemoveClass>External.ArrayPointerField</RemoveClass>
				<RemoveClass>External.PointerField</RemoveClass>
				<RemoveClass>External.CHARField</RemoveClass>
				<RemoveClass>External.WCHARField</RemoveClass>
				<RemoveClass>External.AbstractCHARField</RemoveClass>
				<RemoveClass>External.BOOLEANField</RemoveClass>
				<RemoveClass>External.BOOLField</RemoveClass>
				<RemoveClass>External.BYTEField</RemoveClass>
				<RemoveClass>External.DOUBLEField</RemoveClass>
				<RemoveClass>External.DWORDField</RemoveClass>
				<RemoveClass>External.FLOATField</RemoveClass>
				<RemoveClass>External.INT_PTRField</RemoveClass>
				<RemoveClass>External.QWORDField</RemoveClass>
				<RemoveClass>External.SBYTEField</RemoveClass>
				<RemoveClass>External.SDWORDField</RemoveClass>
				<RemoveClass>External.SQWORDField</RemoveClass>
				<RemoveClass>External.SWORDField</RemoveClass>
				<RemoveClass>External.HANDLEField</RemoveClass>
				<RemoveClass>External.LPVOIDField</RemoveClass>
				<RemoveClass>External.UINT_PTRField</RemoveClass>
				<RemoveClass>External.WORDField</RemoveClass>
				<RemoveClass>External.ScalarField</RemoveClass>
				<RemoveClass>External.Field</RemoveClass>
				<RemoveClass>External.ConformantArrayFieldLength</RemoveClass>
				<RemoveClass>External.FixedArrayFieldLength</RemoveClass>
				<RemoveClass>External.SizeIsArrayFieldLength</RemoveClass>
				<RemoveClass>External.ArrayFieldLength</RemoveClass>
			</StripClasses>
		</CompileExternalStructures>
		<StripMethods reason="structure definition: compiling">
			<Method methodClass="External.Structure class">autoGenCategory</Method>
			<Method methodClass="External.Structure class">compileAllDefinitions</Method>
			<Method methodClass="External.Structure class">compileByteSize</Method>
			<Method methodClass="External.Structure class">compileDefinition</Method>
			<Method methodClass="External.Structure class">compileGetFieldNames</Method>
			<Method methodClass="External.Structure class">compileGetMethod:forField:</Method>
			<Method methodClass="External.Structure class">compileNewFields</Method>
			<Method methodClass="External.Structure class">compileSetMethod:forField:</Method>
			<Method methodClass="External.Structure class">decompileDefinition</Method>
			<Method methodClass="External.Structure class">dynamicSelectorsDo:</Method>
			<Method methodClass="External.Structure class">formatAndCompile:categories:</Method>
			<Method methodClass="External.Structure class">fullyCompileDefinition</Method>
			<Method methodClass="External.Structure class">hasHandCodedMethodFor:</Method>
			<Method methodClass="External.Structure class">inheritsFieldNamed:</Method>
			<Method methodClass="External.Structure class">newCodeGenerationContext</Method>
			<Method methodClass="External.Structure class">recompileDefinition</Method>
			<Method methodClass="External.Structure class">shouldCompile:forField:</Method>
			<Method methodClass="External.Structure class">shouldOverrideGetFieldNames</Method>
		</StripMethods>
		<StripMethods reason="structure definition: template definition">
			<Method methodClass="External.Structure class">baseAlignment</Method>
			<Method methodClass="External.Structure class">beCompiled</Method>
			<Method methodClass="External.Structure class">beUncompiled</Method>
			<Method methodClass="External.Structure class">changedByteSizeFrom:</Method>
			<Method methodClass="External.Structure class">defineField:type:</Method>
			<Method methodClass="External.Structure class">defineField:type:offset:</Method>
			<Method methodClass="External.Structure class">defineFields</Method>
			<Method methodClass="External.Structure class">definesNewFields</Method>
			<Method methodClass="External.Structure class">defineTemplate</Method>
			<Method methodClass="External.Structure class">fieldOffsetConstantPrefix</Method>
			<Method methodClass="External.Structure class">inheritTemplate</Method>
			<Method methodClass="External.Structure class">initializeTemplate</Method>
			<Method methodClass="External.Structure class">newTemplate</Method>
			<Method methodClass="External.Structure class">offsetFor:base:</Method>
			<Method methodClass="External.Structure class">paddedSizeFor:</Method>
			<Method methodClass="External.Structure class">recompileReferences</Method>
			<Method methodClass="External.Structure class">removeRedundantOffsetConstants</Method>
			<Method methodClass="External.Structure class">removeTemplate</Method>
			<Method methodClass="External.Structure class">resetTemplate</Method>
			<Method methodClass="External.Structure class">structurePacker</Method>
		</StripMethods>
		<StripMethods reason="structure definition: defineFields">
			<Method methodClass="OS._FPIEEE_RECORD class">defineFields</Method>
			<Method methodClass="OS._FPIEEE_VALUE class">defineFields</Method>
			<Method methodClass="External.BOOL class">defineFields</Method>
			<Method methodClass="External.BOOLEAN class">defineFields</Method>
			<Method methodClass="External.BYTE class">defineFields</Method>
			<Method methodClass="OS.CPINFOEXW class">defineFields</Method>
			<Method methodClass="External.DOUBLE class">defineFields</Method>
			<Method methodClass="External.DWORD class">defineFields</Method>
			<Method methodClass="OS.EXCEPTION_RECORD class">defineFields</Method>
			<Method methodClass="OS.FILETIME class">defineFields</Method>
			<Method methodClass="External.FLOAT class">defineFields</Method>
			<Method methodClass="OS.HRESULT class">defineFields</Method>
			<Method methodClass="External.INT_PTR class">defineFields</Method>
			<Method methodClass="OS.LARGE_INTEGER class">defineFields</Method>
			<Method methodClass="External.LPVOID class">defineFields</Method>
			<Method methodClass="OS.MSG class">defineFields</Method>
			<Method methodClass="OS.MSGBOXPARAMSW class">defineFields</Method>
			<Method methodClass="OS.NUMBERFMTW class">defineFields</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW class">defineFields</Method>
			<Method methodClass="External.QWORD class">defineFields</Method>
			<Method methodClass="External.SBYTE class">defineFields</Method>
			<Method methodClass="External.SCALAR class">defineFields</Method>
			<Method methodClass="External.SDWORD class">defineFields</Method>
			<Method methodClass="OS.SECURITY_ATTRIBUTES class">defineFields</Method>
			<Method methodClass="External.SWORD class">defineFields</Method>
			<Method methodClass="OS.SYSTEMTIME class">defineFields</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION class">defineFields</Method>
			<Method methodClass="External.UINT_PTR class">defineFields</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO class">defineFields</Method>
			<Method methodClass="OS.VS_VERSION_INFO_HEADER class">defineFields</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW class">defineFields</Method>
			<Method methodClass="External.WORD class">defineFields</Method>
		</StripMethods>
	</PrepareExternalStructures>
	<ForcedStripMethods>
		<StripMethods reason="must strip">
			<Method methodClass="Tools.Aspect class">menu:</Method>
			<Method methodClass="Tools.Aspect class">menuBar:</Method>
			<Method methodClass="Tools.AXControlBrowser class">initialize</Method>
			<Method methodClass="UI.AXControlSite class">publishedAspectsOfInstances</Method>
			<Method methodClass="UI.AXDllGUISessionManager class">icon</Method>
			<Method methodClass="Smalltalk.AXDllImageStripper class">publishedAspectsOfInstances</Method>
			<Method methodClass="Kernel.AXDllSessionManager class">icon</Method>
			<Method methodClass="UI.AXValueConvertingControlSite class">applicableTypeConverterCategories</Method>
			<Method methodClass="UI.AXValueConvertingControlSite class">publishedAspectsOfInstances</Method>
			<Method methodClass="Core.ClassDescription">removeSelector:ifAbsent:</Method>
			<Method methodClass="OS.Crypt32Library class">example1</Method>
			<Method methodClass="Smalltalk.ExternalPipe class">example1</Method>
			<Method methodClass="Smalltalk.ExternalPipe class">example2</Method>
			<Method methodClass="OS.COM.ICatRegister class">example1</Method>
			<Method methodClass="Graphics.Gdiplus.ImageView class">publishedAspectsOfInstances</Method>
			<Method methodClass="OS.ITEMIDLIST class">publishedAspectsOfInstances</Method>
			<Method methodClass="UI.ListTreeView class">publishedAspectsOfInstances</Method>
			<Method methodClass="Kernel.MemoryManager class">initialize</Method>
			<Method methodClass="Core.SessionManager class">initialize</Method>
			<Method methodClass="Tools.SmalltalkToolShell class">showExistingInstanceOf:</Method>
			<Method methodClass="Kernel.SourceManager">packageManager</Method>
			<Method methodClass="UI.SpinButton">publishedAspects</Method>
			<Method methodClass="UI.SpinButton class">publishedAspectsOfInstances</Method>
			<Method methodClass="Smalltalk.SUnitAbsBrowser class">initializeToolClass:</Method>
			<Method methodClass="Smalltalk.SUnitBrowser class">initialize</Method>
			<Method methodClass="Smalltalk.SUnitBrowser class">uninitialize</Method>
			<Method methodClass="Smalltalk.SUnitResourceBrowser class">initialize</Method>
			<Method methodClass="Smalltalk.SUnitResourceBrowser class">uninitialize</Method>
			<Method methodClass="XProgramming.SUnit.TestRunner class">initialize</Method>
			<Method methodClass="OS.COM.TypeLibraryAnalyzer">addVariableToPackage:</Method>
			<Method methodClass="OS.COM.TypeLibraryAnalyzer class">example1</Method>
			<Method methodClass="OS.COM.TypeLibraryAnalyzer class">example3</Method>
		</StripMethods>
		<StripMethods reason="class initializers">
			<Method methodClass="OS.AbstractWindowsLocale class">initialize</Method>
			<Method methodClass="UI.AccelToHotKey class">initialize</Method>
			<Method methodClass="OS.COM.AddRefFunction class">initialize</Method>
			<Method methodClass="Tools.AllMethodsCategory class">initialize</Method>
			<Method methodClass="Core.AnsiString class">initialize</Method>
			<Method methodClass="Tools.ApplicationDeploymentWizard class">initialize</Method>
			<Method methodClass="Core.Array class">initialize</Method>
			<Method methodClass="Tools.Aspect class">initialize</Method>
			<Method methodClass="Tools.AXComponentWizard class">initialize</Method>
			<Method methodClass="Tools.AXControlBrowser class">initialize</Method>
			<Method methodClass="UI.AXControlSite class">initialize</Method>
			<Method methodClass="Kernel.Base64Codec class">initialize</Method>
			<Method methodClass="UI.BasicListAbstract class">initialize</Method>
			<Method methodClass="Core.Behavior class">initialize</Method>
			<Method methodClass="Kernel.BindingReference class">initialize</Method>
			<Method methodClass="Graphics.Bitmap class">initialize</Method>
			<Method methodClass="UI.Examples.BouncingBallView class">initialize</Method>
			<Method methodClass="OS.COM.BSTR class">initialize</Method>
			<Method methodClass="External.BYTE class">initialize</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher class">initialize</Method>
			<Method methodClass="UI.Examples.Calculator class">initialize</Method>
			<Method methodClass="External.Callback class">initialize</Method>
			<Method methodClass="UI.Scintilla.CallTipStyle class">initialize</Method>
			<Method methodClass="Tools.ChangedMethodsCategory class">initialize</Method>
			<Method methodClass="Core.Character class">initialize</Method>
			<Method methodClass="UI.Scintilla.CharacterRepresentation class">initialize</Method>
			<Method methodClass="Net.Examples.Chat class">initialize</Method>
			<Method methodClass="UI.CheckButton class">initialize</Method>
			<Method methodClass="Tools.ClassBrowserShell class">initialize</Method>
			<Method methodClass="Kernel.ClassBuilder class">initialize</Method>
			<Method methodClass="Core.ClassCategory class">initialize</Method>
			<Method methodClass="Tools.ClassCommentPlugin class">initialize</Method>
			<Method methodClass="OS.COM.ClassFactory class">initialize</Method>
			<Method methodClass="Tools.ClassHierarchyDiagram class">initialize</Method>
			<Method methodClass="Kernel.ClassLocator class">initialize</Method>
			<Method methodClass="Refactory.Browser.Tests.ClassToRename class">initialize</Method>
			<Method methodClass="OS.COM.CLSID class">initialize</Method>
			<Method methodClass="Tools.CodeMentorPlugin class">initialize</Method>
			<Method methodClass="Core.Collection class">initialize</Method>
			<Method methodClass="Smalltalk.CollectionHelper class">initialize</Method>
			<Method methodClass="Smalltalk.CollectionStreamHelper class">initialize</Method>
			<Method methodClass="Graphics.Color class">initialize</Method>
			<Method methodClass="UI.ColorDialog class">initialize</Method>
			<Method methodClass="UI.CommandButton class">initialize</Method>
			<Method methodClass="UI.CommandDescription class">initialize</Method>
			<Method methodClass="UI.CommonDialog class">initialize</Method>
			<Method methodClass="Tools.CommunityEditionSmalltalkSystem class">initialize</Method>
			<Method methodClass="Kernel.CompiledCode class">initialize</Method>
			<Method methodClass="Kernel.Compiler class">initialize</Method>
			<Method methodClass="Kernel.CompilerNotification class">initialize</Method>
			<Method methodClass="Kernel.Tests.CompilerTest class">initialize</Method>
			<Method methodClass="UI.ControlBarAbstract class">initialize</Method>
			<Method methodClass="UI.ControlView class">initialize</Method>
			<Method methodClass="OS.COM.CountedArray class">initialize</Method>
			<Method methodClass="OS.COM.CURRENCY class">initialize</Method>
			<Method methodClass="Graphics.Cursor class">initialize</Method>
			<Method methodClass="OS.COM.CUSTDATA class">initialize</Method>
			<Method methodClass="Kernel.D5BytecodeRewriter class">initialize</Method>
			<Method methodClass="Core.Date class">initialize</Method>
			<Method methodClass="OS.COM.DATE class">initialize</Method>
			<Method methodClass="Core.DateAndTime class">initialize</Method>
			<Method methodClass="UI.DateTimeCommonControl class">initialize</Method>
			<Method methodClass="Database.DBAbstractStatement class">initialize</Method>
			<Method methodClass="Database.DBColAttr class">initialize</Method>
			<Method methodClass="Database.DBConnection class">initialize</Method>
			<Method methodClass="Database.DBField class">initialize</Method>
			<Method methodClass="Kernel.DeadObject class">initialize</Method>
			<Method methodClass="Kernel.DeafObject class">initialize</Method>
			<Method methodClass="Tools.Debugger class">initialize</Method>
			<Method methodClass="Tools.DebuggerMethodCategory class">initialize</Method>
			<Method methodClass="OS.COM.DECIMAL class">initialize</Method>
			<Method methodClass="Kernel.DefaultSortAlgorithm class">initialize</Method>
			<Method methodClass="Core.DeferredValue class">initialize</Method>
			<Method methodClass="Core.Delay class">initialize</Method>
			<Method methodClass="UI.DesktopView class">initialize</Method>
			<Method methodClass="UI.DialogView class">initialize</Method>
			<Method methodClass="UI.DifferencesPresenter class">initialize</Method>
			<Method methodClass="Security.DigitalSignatureAlgorithm class">initialize</Method>
			<Method methodClass="OS.COM.DISPPARAMS class">initialize</Method>
			<Method methodClass="UI.DividerMenuItem class">initialize</Method>
			<Method methodClass="Tools.DolphinProduct class">initialize</Method>
			<Method methodClass="Security.DolphinSureCertificate class">initialize</Method>
			<Method methodClass="Security.DolphinSureCertificateInfo class">initialize</Method>
			<Method methodClass="Security.DolphinSureCertificateStore class">initialize</Method>
			<Method methodClass="Security.DolphinSureTrustedData class">initialize</Method>
			<Method methodClass="External.DOUBLE class">initialize</Method>
			<Method methodClass="UI.DragDropSession class">initialize</Method>
			<Method methodClass="Smalltalk.DTDEntityDeclaration class">initialize</Method>
			<Method methodClass="Smalltalk.DTDExternalEntityDeclaration class">initialize</Method>
			<Method methodClass="Smalltalk.DTDParameterEntityDeclaration class">initialize</Method>
			<Method methodClass="External.DWORD class">initialize</Method>
			<Method methodClass="OS.ENHMETARECORD class">initialize</Method>
			<Method methodClass="OS.COM.Examples.EnumRECT class">initialize</Method>
			<Method methodClass="UI.Examples.EtchASketch class">initialize</Method>
			<Method methodClass="Kernel.ExceptionHandlerAbstract class">initialize</Method>
			<Method methodClass="External.ExternalMethod class">initialize</Method>
			<Method methodClass="Core.File class">initialize</Method>
			<Method methodClass="UI.FileOpenDialog class">initialize</Method>
			<Method methodClass="UI.FileSaveDialog class">initialize</Method>
			<Method methodClass="Core.FileStream class">initialize</Method>
			<Method methodClass="OS.FileSystemChangeReader class">initialize</Method>
			<Method methodClass="OS.Examples.FileSystemMonitor class">initialize</Method>
			<Method methodClass="OS.FileSystemWatcher class">initialize</Method>
			<Method methodClass="OS.FILETIME class">initialize</Method>
			<Method methodClass="OS.COM.FinalizableStructure class">initialize</Method>
			<Method methodClass="UI.FindDetails class">initialize</Method>
			<Method methodClass="UI.FindDialog class">initialize</Method>
			<Method methodClass="UI.FindReplaceDialog class">initialize</Method>
			<Method methodClass="Tools.FlipperInspector class">initialize</Method>
			<Method methodClass="External.FLOAT class">initialize</Method>
			<Method methodClass="Core.Float class">initialize</Method>
			<Method methodClass="UI.FlowLayout class">initialize</Method>
			<Method methodClass="UI.FolderHierarchyModel class">initialize</Method>
			<Method methodClass="UI.FontDialog class">initialize</Method>
			<Method methodClass="UI.FramingCalculation class">initialize</Method>
			<Method methodClass="External.FunctionDescriptor class">initialize</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusError class">initialize</Method>
			<Method methodClass="Smalltalk.GettableStreamHelper class">initialize</Method>
			<Method methodClass="Tools.Grabber class">initialize</Method>
			<Method methodClass="Core.GUID class">initialize</Method>
			<Method methodClass="UI.GuiInputState class">initialize</Method>
			<Method methodClass="Smalltalk.HistoryBrowser class">initialize</Method>
			<Method methodClass="UI.HotKey class">initialize</Method>
			<Method methodClass="OS.HRESULT class">initialize</Method>
			<Method methodClass="OS.HRESULTError class">initialize</Method>
			<Method methodClass="WinHttpServer.HTTP_CACHE_POLICY class">initialize</Method>
			<Method methodClass="Graphics.Icon class">initialize</Method>
			<Method methodClass="UI.IconicListAbstract class">initialize</Method>
			<Method methodClass="Tools.IdeaSpaceShell class">initialize</Method>
			<Method methodClass="OS.COM.IID class">initialize</Method>
			<Method methodClass="UI.ImageViewAbstract class">initialize</Method>
			<Method methodClass="Graphics.IndexedColor class">initialize</Method>
			<Method methodClass="UI.Scintilla.IndicatorStyle class">initialize</Method>
			<Method methodClass="Kernel.InputState class">initialize</Method>
			<Method methodClass="Tools.InstVarInspector class">initialize</Method>
			<Method methodClass="External.IntegerBytes class">initialize</Method>
			<Method methodClass="OS.COM.Interface class">initialize</Method>
			<Method methodClass="Kernel.IPDolphin class">initialize</Method>
			<Method methodClass="OS.ITEMIDLIST class">initialize</Method>
			<Method methodClass="MSXML.IXMLDOMNode class">initialize</Method>
			<Method methodClass="UI.Scintilla.KeyBinding class">initialize</Method>
			<Method methodClass="UI.Keyboard class">initialize</Method>
			<Method methodClass="Tools.LintRuleFailuresBrowserShell class">initialize</Method>
			<Method methodClass="UI.ListBox class">initialize</Method>
			<Method methodClass="UI.ListView class">initialize</Method>
			<Method methodClass="Core.Locale class">initialize</Method>
			<Method methodClass="OS.COM.LPBSTR class">initialize</Method>
			<Method methodClass="External.LPVOID class">initialize</Method>
			<Method methodClass="OS.LVCOLUMNW class">initialize</Method>
			<Method methodClass="OS.LVITEMW class">initialize</Method>
			<Method methodClass="UI.Scintilla.Margin class">initialize</Method>
			<Method methodClass="UI.Scintilla.MarkerDefinition class">initialize</Method>
			<Method methodClass="Kernel.MemoryManager class">initialize</Method>
			<Method methodClass="UI.Menu class">initialize</Method>
			<Method methodClass="UI.MenuItem class">initialize</Method>
			<Method methodClass="UI.MessageBox class">initialize</Method>
			<Method methodClass="UI.MessageBoxAbstract class">initialize</Method>
			<Method methodClass="UI.MessageBubble class">initialize</Method>
			<Method methodClass="Kernel.MessageSendCollector class">initialize</Method>
			<Method methodClass="Kernel.MethodAnnotations class">initialize</Method>
			<Method methodClass="Tools.MethodBrowser class">initialize</Method>
			<Method methodClass="Tools.MethodBrowserShell class">initialize</Method>
			<Method methodClass="Tools.MethodCategorizationPolicy class">initialize</Method>
			<Method methodClass="Core.MethodCategory class">initialize</Method>
			<Method methodClass="Tools.MethodExplorerShell class">initialize</Method>
			<Method methodClass="Tools.MethodPrivacyCategory class">initialize</Method>
			<Method methodClass="Kernel.MethodProtocol class">initialize</Method>
			<Method methodClass="UI.MoenTreeView class">initialize</Method>
			<Method methodClass="Core.MourningWeakArray class">initialize</Method>
			<Method methodClass="Kernel.NullEventsCollection class">initialize</Method>
			<Method methodClass="Graphics.NullIcon class">initialize</Method>
			<Method methodClass="Core.Number class">initialize</Method>
			<Method methodClass="Tools.Examples.OAIDEExtensions class">initialize</Method>
			<Method methodClass="Core.Object class">initialize</Method>
			<Method methodClass="Smalltalk.ObjectHelper class">initialize</Method>
			<Method methodClass="OS.COM.ObjectStub class">initialize</Method>
			<Method methodClass="Kernel.Package class">initialize</Method>
			<Method methodClass="Tools.PackageBrowserShell class">initialize</Method>
			<Method methodClass="Kernel.PackageManager class">initialize</Method>
			<Method methodClass="Kernel.Parser class">initialize</Method>
			<Method methodClass="UI.Examples.Plimbole class">initialize</Method>
			<Method methodClass="UI.Examples.PlimboleShell class">initialize</Method>
			<Method methodClass="Tools.PluggableVirtualMethodCategory class">initialize</Method>
			<Method methodClass="Graphics.Point class">initialize</Method>
			<Method methodClass="Tools.PoolDictionariesShell class">initialize</Method>
			<Method methodClass="Core.Process class">initialize</Method>
			<Method methodClass="Tools.ProcessMonitor class">initialize</Method>
			<Method methodClass="Kernel.ProcessorScheduler class">initialize</Method>
			<Method methodClass="Tools.ProfessionalSmalltalkSystem class">initialize</Method>
			<Method methodClass="Tools.ProfStef class">initialize</Method>
			<Method methodClass="UI.ProgressBar class">initialize</Method>
			<Method methodClass="Tools.PropertyInspector class">initialize</Method>
			<Method methodClass="Security.ProtectedProductSerialNumber class">initialize</Method>
			<Method methodClass="Tools.ProtocolBrowserShell class">initialize</Method>
			<Method methodClass="Smalltalk.ProtocolSpec class">initialize</Method>
			<Method methodClass="Tools.PublishedAspectInspector class">initialize</Method>
			<Method methodClass="UI.PushButton class">initialize</Method>
			<Method methodClass="Smalltalk.PuttableStreamHelper class">initialize</Method>
			<Method methodClass="OS.COM.QueryInterfaceFunction class">initialize</Method>
			<Method methodClass="Core.Random class">initialize</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass class">initialize</Method>
			<Method methodClass="Refactory.Browser.RBClass class">initialize</Method>
			<Method methodClass="Refactory.Browser.RBConfigurableFormatter class">initialize</Method>
			<Method methodClass="Refactory.Browser.RBEmptyCondition class">initialize</Method>
			<Method methodClass="Refactory.Browser.RBFormatter class">initialize</Method>
			<Method methodClass="Refactory.Browser.RBSourceFormatter class">initialize</Method>
			<Method methodClass="STON.Reader class">initialize</Method>
			<Method methodClass="Smalltalk.ReadStreamHelper class">initialize</Method>
			<Method methodClass="Graphics.Rectangle class">initialize</Method>
			<Method methodClass="Refactory.Browser.Refactoring class">initialize</Method>
			<Method methodClass="Tools.RefactoringSmalltalkSystem class">initialize</Method>
			<Method methodClass="Refactory.Browser.RefactoryChangeManager class">initialize</Method>
			<Method methodClass="Refactory.Browser.TestData.RefactoryTestDataApp class">initialize</Method>
			<Method methodClass="Tools.ReferencesCategory class">initialize</Method>
			<Method methodClass="UI.Examples.RegEdit class">initialize</Method>
			<Method methodClass="OS.RegistrySerializer class">initialize</Method>
			<Method methodClass="OS.RegKeyAbstract class">initialize</Method>
			<Method methodClass="OS.COM.ReleaseFunction class">initialize</Method>
			<Method methodClass="Smalltalk.ResourceAccessor class">initialize</Method>
			<Method methodClass="Tools.ResourceBrowser class">initialize</Method>
			<Method methodClass="UI.ResourceIdentifier class">initialize</Method>
			<Method methodClass="External.ResourceLibrary class">initialize</Method>
			<Method methodClass="Tools.ResourceListPlugin class">initialize</Method>
			<Method methodClass="UI.RichText class">initialize</Method>
			<Method methodClass="UI.RichTextEdit class">initialize</Method>
			<Method methodClass="OS.COM.SAFEARRAY class">initialize</Method>
			<Method methodClass="External.SBYTE class">initialize</Method>
			<Method methodClass="Kernel.Scanner class">initialize</Method>
			<Method methodClass="UI.Scintilla.ScintillaView class">initialize</Method>
			<Method methodClass="Smalltalk.Scribble class">initialize</Method>
			<Method methodClass="UI.ScrollBar class">initialize</Method>
			<Method methodClass="External.SDWORD class">initialize</Method>
			<Method methodClass="Smalltalk.SequencedStreamHelper class">initialize</Method>
			<Method methodClass="Core.SessionManager class">initialize</Method>
			<Method methodClass="Core.Set class">initialize</Method>
			<Method methodClass="Core.SharedQueue class">initialize</Method>
			<Method methodClass="UI.ShellView class">initialize</Method>
			<Method methodClass="Tools.SingleUnarySendMethodCategory class">initialize</Method>
			<Method methodClass="UI.Slider class">initialize</Method>
			<Method methodClass="UI.SlideyInneyOuteyThing class">initialize</Method>
			<Method methodClass="UI.SlidingCardTray class">initialize</Method>
			<Method methodClass="Tools.SmalllintCachingContext class">initialize</Method>
			<Method methodClass="Kernel.SmalltalkLocale class">initialize</Method>
			<Method methodClass="Tools.SmalltalkSearchPresenter class">initialize</Method>
			<Method methodClass="Tools.SmalltalkSystem class">initialize</Method>
			<Method methodClass="Tools.SmalltalkSystemShell class">initialize</Method>
			<Method methodClass="Tools.SmalltalkWorkspace class">initialize</Method>
			<Method methodClass="Tools.SmalltalkWorkspaceDocument class">initialize</Method>
			<Method methodClass="Net.SocketClosed class">initialize</Method>
			<Method methodClass="Net.SocketError class">initialize</Method>
			<Method methodClass="Net.SocketWaitCancelled class">initialize</Method>
			<Method methodClass="Core.Sound class">initialize</Method>
			<Method methodClass="Tools.SourceBrowser class">initialize</Method>
			<Method methodClass="Kernel.SourceManager class">initialize</Method>
			<Method methodClass="UI.SpinButton class">initialize</Method>
			<Method methodClass="UI.StaticRectangle class">initialize</Method>
			<Method methodClass="UI.StaticText class">initialize</Method>
			<Method methodClass="UI.StatusBarItemAbstract class">initialize</Method>
			<Method methodClass="Kernel.STBPrefix class">initialize</Method>
			<Method methodClass="UI.STBViewProxy class">initialize</Method>
			<Method methodClass="Kernel.StOptimizedNode class">initialize</Method>
			<Method methodClass="Kernel.StProgramNode class">initialize</Method>
			<Method methodClass="Core.Stream class">initialize</Method>
			<Method methodClass="Core.String class">initialize</Method>
			<Method methodClass="OS.COM.StructureTypeAnalyzer class">initialize</Method>
			<Method methodClass="Kernel.StSemanticAnalyser class">initialize</Method>
			<Method methodClass="Smalltalk.SUnitBrowser class">initialize</Method>
			<Method methodClass="Smalltalk.SUnitResourceBrowser class">initialize</Method>
			<Method methodClass="External.SWORD class">initialize</Method>
			<Method methodClass="Core.Symbol class">initialize</Method>
			<Method methodClass="UI.SysLinkView class">initialize</Method>
			<Method methodClass="Tools.SystemBrowserShell class">initialize</Method>
			<Method methodClass="Graphics.SystemColor class">initialize</Method>
			<Method methodClass="UI.TabView class">initialize</Method>
			<Method methodClass="OS.COM.TaskMemory class">initialize</Method>
			<Method methodClass="Smalltalk.TestCaseHelper class">initialize</Method>
			<Method methodClass="Smalltalk.TestCaseProtocol class">initialize</Method>
			<Method methodClass="XProgramming.SUnit.TestRunner class">initialize</Method>
			<Method methodClass="UI.TextEdit class">initialize</Method>
			<Method methodClass="UI.Scintilla.TextStyle class">initialize</Method>
			<Method methodClass="Graphics.ThemeColor class">initialize</Method>
			<Method methodClass="OS.COM.TKindAliasAnalyzer class">initialize</Method>
			<Method methodClass="OS.COM.TKindDispatchAnalyzer class">initialize</Method>
			<Method methodClass="UI.ToolbarSystemButton class">initialize</Method>
			<Method methodClass="UI.TranscriptShell class">initialize</Method>
			<Method methodClass="UI.TreeView class">initialize</Method>
			<Method methodClass="OS.COM.TYPEDESC class">initialize</Method>
			<Method methodClass="OS.COM.TypeInfoAnalyzer class">initialize</Method>
			<Method methodClass="OS.COM.TypeLibraryAnalyzer class">initialize</Method>
			<Method methodClass="Tools.UnclassifiedMethodsCategory class">initialize</Method>
			<Method methodClass="Tools.UnitTestPlugin class">initialize</Method>
			<Method methodClass="Tools.UserPreferencesShell class">initialize</Method>
			<Method methodClass="Core.Utf16String class">initialize</Method>
			<Method methodClass="Core.Utf8String class">initialize</Method>
			<Method methodClass="Tools.ValueWorkspace class">initialize</Method>
			<Method methodClass="OS.COM.VARIANT class">initialize</Method>
			<Method methodClass="OS.COM.VARIANT_BOOL class">initialize</Method>
			<Method methodClass="UI.Examples.VideoLibraryShell class">initialize</Method>
			<Method methodClass="UI.View class">initialize</Method>
			<Method methodClass="Tools.ViewComposer class">initialize</Method>
			<Method methodClass="Tools.VisualObjectFinder class">initialize</Method>
			<Method methodClass="Kernel.VMLibrary class">initialize</Method>
			<Method methodClass="Tools.WalkbackDialog class">initialize</Method>
			<Method methodClass="Core.WeakIdentityDictionary class">initialize</Method>
			<Method methodClass="Core.WeakIdentitySet class">initialize</Method>
			<Method methodClass="Core.WeakLookupTable class">initialize</Method>
			<Method methodClass="Core.WeakSet class">initialize</Method>
			<Method methodClass="OS.COM.Examples.WebBrowserShell class">initialize</Method>
			<Method methodClass="UI.WebView2View class">initialize</Method>
			<Method methodClass="OS.Win32Fault class">initialize</Method>
			<Method methodClass="OS.WindowsShellMemory class">initialize</Method>
			<Method methodClass="External.WORD class">initialize</Method>
			<Method methodClass="STON.Writer class">initialize</Method>
			<Method methodClass="Smalltalk.WriteStreamHelper class">initialize</Method>
			<Method methodClass="UI.Examples.XmlPad class">initialize</Method>
			<Method methodClass="Smalltalk.XMLTokenizer class">initialize</Method>
			<Method methodClass="Smalltalk.XMLWriter class">initialize</Method>
		</StripMethods>
		<StripMethods reason="deprecated">
			<Method methodClass="OS._FPIEEE_RECORD">causeCode</Method>
			<Method methodClass="OS._FPIEEE_RECORD">causeName</Method>
			<Method methodClass="OS._FPIEEE_VALUE">valueType</Method>
			<Method methodClass="OS.AbstractWindowsLocale">dateOrder</Method>
			<Method methodClass="OS.AbstractWindowsLocale">dateSeparator</Method>
			<Method methodClass="OS.AbstractWindowsLocale">timeSeparator</Method>
			<Method methodClass="UI.AcceleratorTable">accelerators</Method>
			<Method methodClass="UI.AcceleratorTable">addKey:commandDescription:</Method>
			<Method methodClass="Refactory.Browser.AddMethodChange">protocol</Method>
			<Method methodClass="Refactory.Browser.AddMethodChange class">compile:in:classified:</Method>
			<Method methodClass="ADODB.ADOCollection">item:</Method>
			<Method methodClass="Graphics.ARGB">asARGB</Method>
			<Method methodClass="Core.ArithmeticValue">quoAndRem:</Method>
			<Method methodClass="Tools.Aspect class">list:</Method>
			<Method methodClass="Tools.Aspect class">list:addEvaluationFrom:</Method>
			<Method methodClass="Tools.Aspect class">list:addFrom:</Method>
			<Method methodClass="UI.AspectBuffer">isValidBlock</Method>
			<Method methodClass="UI.BasicListAbstract">basicSelectionByIndex:</Method>
			<Method methodClass="UI.BasicListAbstract class">value:</Method>
			<Method methodClass="Core.Behavior">makeIndirect</Method>
			<Method methodClass="Core.Behavior">makeNullTerminated</Method>
			<Method methodClass="OS.BLENDFUNCTION">beAlpha</Method>
			<Method methodClass="OS.BLENDFUNCTION">beNotAlpha</Method>
			<Method methodClass="Graphics.Brush class">dkGray</Method>
			<Method methodClass="Graphics.Brush class">hatchedDiagonal</Method>
			<Method methodClass="Graphics.Brush class">hollow</Method>
			<Method methodClass="Graphics.Brush class">ltGray</Method>
			<Method methodClass="OS.COM.BSTR">asUnicodeString</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">byteCodeSegments</Method>
			<Method methodClass="Graphics.Canvas">fonts:do:</Method>
			<Method methodClass="Graphics.Canvas">origin:</Method>
			<Method methodClass="Graphics.Canvas">setBkMode:</Method>
			<Method methodClass="Graphics.Canvas">setTextColor:</Method>
			<Method methodClass="UI.CardContainer">isInverted:</Method>
			<Method methodClass="UI.CardContainer">isVertical:</Method>
			<Method methodClass="Core.Category">contents</Method>
			<Method methodClass="Core.Character class">safeCodePoint:</Method>
			<Method methodClass="Core.Class">allSharedPoolNames</Method>
			<Method methodClass="Core.Class">subclass:instanceVariableNames:classVariableNames:poolDictionaries:</Method>
			<Method methodClass="Core.Class">subclass:instanceVariableNames:classVariableNames:poolDictionaries:classInstanceVariableNames:</Method>
			<Method methodClass="Core.Class">variableByteSubclass:instanceVariableNames:classVariableNames:poolDictionaries:</Method>
			<Method methodClass="Core.Class">variableByteSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category:</Method>
			<Method methodClass="Core.Class">variableByteSubclass:instanceVariableNames:classVariableNames:poolDictionaries:classInstanceVariableNames:</Method>
			<Method methodClass="Core.Class">variableSubclass:instanceVariableNames:classVariableNames:poolDictionaries:</Method>
			<Method methodClass="Core.Class">variableSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category:</Method>
			<Method methodClass="Core.Class">variableSubclass:instanceVariableNames:classVariableNames:poolDictionaries:classInstanceVariableNames:</Method>
			<Method methodClass="Core.Class class">foldLiteralStrings</Method>
			<Method methodClass="Core.ClassCategory">contents</Method>
			<Method methodClass="Core.ClassDescription">allSharedPoolNames</Method>
			<Method methodClass="Core.ClassDescription">allSharedPools</Method>
			<Method methodClass="Core.ClassDescription">sharedPoolNames</Method>
			<Method methodClass="Core.ClassDescription">sharedPools</Method>
			<Method methodClass="Core.ClassDescription">sharedPoolsDo:</Method>
			<Method methodClass="UI.Clipboard">getObjectBinaryStoreBytes</Method>
			<Method methodClass="UI.Clipboard">getObjectBinaryStoreBytesIfNone:</Method>
			<Method methodClass="UI.Clipboard">setText:format:</Method>
			<Method methodClass="Graphics.Color">asARGB</Method>
			<Method methodClass="Graphics.Color">asIndexedColor</Method>
			<Method methodClass="Graphics.Color">saturation</Method>
			<Method methodClass="Graphics.Color class">buttonFace</Method>
			<Method methodClass="Graphics.Color class">buttonShadow</Method>
			<Method methodClass="Graphics.ColorNone">saturation</Method>
			<Method methodClass="Graphics.ColorRef">asIndexedColor</Method>
			<Method methodClass="Smalltalk.ComparisonPolicy class">always</Method>
			<Method methodClass="Smalltalk.ComparisonPolicy class">equality</Method>
			<Method methodClass="Smalltalk.ComparisonPolicy class">identity</Method>
			<Method methodClass="Smalltalk.ComparisonPolicy class">never</Method>
			<Method methodClass="Kernel.Compiler class">compileDebugExpression:in:evaluationPools:</Method>
			<Method methodClass="Kernel.Compiler class">compileDebugMethod:in:</Method>
			<Method methodClass="Kernel.Compiler class">compileExpression:in:flags:</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:for:evaluationPools:</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:for:evaluationPools:logged:</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:for:evaluationPools:logged:ifFail:</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:for:logged:</Method>
			<Method methodClass="Kernel.CompilerNotification">extra</Method>
			<Method methodClass="Refactory.Browser.CompositeRefactoryChange">compile:in:classified:</Method>
			<Method methodClass="OS.CRTLibrary">_chmod:pmode:</Method>
			<Method methodClass="OS.CRTLibrary">_spawnvp:cmdname:argv:</Method>
			<Method methodClass="OS.CRTLibraryNonBlocking">_chmod:pmode:</Method>
			<Method methodClass="OS.COM.DATE">asDate</Method>
			<Method methodClass="OS.COM.DATE">asTimeStamp</Method>
			<Method methodClass="OS.COM.DATE class">max</Method>
			<Method methodClass="OS.COM.DATE class">min</Method>
			<Method methodClass="Database.DBConnection">accessibleTables</Method>
			<Method methodClass="Database.DBConnection">autoCommit</Method>
			<Method methodClass="Database.DBConnection">autoCommit:</Method>
			<Method methodClass="Database.DBConnection">dbmsVer</Method>
			<Method methodClass="Database.DBConnection">defaultTxnIsolation</Method>
			<Method methodClass="Database.DBConnection">driverVer</Method>
			<Method methodClass="Database.DBConnection">expressionsInOrderBy</Method>
			<Method methodClass="Database.DBConnection">identifierQuoteChar</Method>
			<Method methodClass="Database.DBConnection">iefSupport</Method>
			<Method methodClass="Database.DBConnection">indicesOf:type:</Method>
			<Method methodClass="Database.DBConnection">invalidate</Method>
			<Method methodClass="Database.DBConnection">maxColumnNameLen</Method>
			<Method methodClass="Database.DBConnection">maxCursorNameLen</Method>
			<Method methodClass="Database.DBConnection">maxOwnerNameLen</Method>
			<Method methodClass="Database.DBConnection">maxProcedureNameLen</Method>
			<Method methodClass="Database.DBConnection">maxQualifierNameLen</Method>
			<Method methodClass="Database.DBConnection">maxTableNameLen</Method>
			<Method methodClass="Database.DBConnection">multipleActiveTxn</Method>
			<Method methodClass="Database.DBConnection">multResultSets</Method>
			<Method methodClass="Database.DBConnection">odbcSAGConformance</Method>
			<Method methodClass="Database.DBConnection">odbcVer</Method>
			<Method methodClass="Database.DBConnection">outerJoins</Method>
			<Method methodClass="Database.DBConnection">ownerTerm</Method>
			<Method methodClass="Database.DBConnection">qualifierNameSeparator</Method>
			<Method methodClass="Database.DBConnection">qualifierTerm</Method>
			<Method methodClass="Database.DBConnection">readOnly</Method>
			<Method methodClass="Database.DBConnection">readOnly:</Method>
			<Method methodClass="Database.DBConnection">rowIdCols:</Method>
			<Method methodClass="Database.DBConnection">rowUpdates</Method>
			<Method methodClass="Database.DBConnection">rowVer:</Method>
			<Method methodClass="Database.DBConnection">scrollConcurrency</Method>
			<Method methodClass="Database.DBConnection">scrollOptions</Method>
			<Method methodClass="Database.DBConnection">sourceReadOnly</Method>
			<Method methodClass="Database.DBConnection">trace</Method>
			<Method methodClass="Database.DBConnection">trace:</Method>
			<Method methodClass="Database.DBConnection">txnCapable</Method>
			<Method methodClass="Database.DBConnection">txnIsolationOptions</Method>
			<Method methodClass="Database.DBConnection">uniqueIndexOf:</Method>
			<Method methodClass="Database.DBConnection class">interpretTxnIsolationMask:</Method>
			<Method methodClass="Database.DBResultSet">invalidate</Method>
			<Method methodClass="Database.DBResultSet">prev</Method>
			<Method methodClass="Core.Delay class">resolution</Method>
			<Method methodClass="Core.Delay class">resolution:do:</Method>
			<Method methodClass="Core.Delay class">resolution:set:</Method>
			<Method methodClass="Tools.DevelopmentSessionManager">whatsThis:</Method>
			<Method methodClass="Core.Dictionary">at:ifAbsentPutValue:</Method>
			<Method methodClass="External.DynamicLinkLibrary">invalidCall</Method>
			<Method methodClass="Core.File">readCharacter</Method>
			<Method methodClass="Core.File class">change:extension:</Method>
			<Method methodClass="Core.File class">for:inAndBelow:do:</Method>
			<Method methodClass="Core.FileStream">beBinary</Method>
			<Method methodClass="Graphics.Gdiplus.Font class">fontFamily:emSize:</Method>
			<Method methodClass="Graphics.Gdiplus.Font class">name:emSize:</Method>
			<Method methodClass="OS.COM.FUNCDESC">retTypeName</Method>
			<Method methodClass="External.FunctionDescriptor class">fromString:</Method>
			<Method methodClass="External.FunctionDescriptor class">oneStringArg</Method>
			<Method methodClass="OS.GDILibrary">enumFonts:lpFaceName:lpFontFunc:lParam:</Method>
			<Method methodClass="Graphics.Image">fileLocator:</Method>
			<Method methodClass="Graphics.Image">identifier:</Method>
			<Method methodClass="Graphics.ImageList class">width:height:flags:size:growthGranularity:</Method>
			<Method methodClass="Graphics.Gdiplus.ImageView">imagePadding</Method>
			<Method methodClass="Graphics.Gdiplus.ImageView">imagePadding:</Method>
			<Method methodClass="Graphics.Gdiplus.ImageView">isEraseBackground</Method>
			<Method methodClass="Graphics.Gdiplus.ImageView">isEraseBackground:</Method>
			<Method methodClass="Graphics.IndexedColor">asIndexedColor</Method>
			<Method methodClass="Graphics.IndexedColor">asRGBUsingNoPalette</Method>
			<Method methodClass="UI.Scintilla.Indicator">type</Method>
			<Method methodClass="UI.Scintilla.IndicatorStyle">alphaPercent</Method>
			<Method methodClass="UI.Scintilla.IndicatorStyle">alphaPercent:</Method>
			<Method methodClass="UI.Scintilla.IndicatorStyle">hoverStyleName</Method>
			<Method methodClass="UI.Scintilla.IndicatorStyle">hoverStyleName:</Method>
			<Method methodClass="UI.Scintilla.IndicatorStyle">styleName</Method>
			<Method methodClass="UI.Scintilla.IndicatorStyle">styleName:</Method>
			<Method methodClass="UI.Scintilla.IndicatorStyle class">styleNames</Method>
			<Method methodClass="UI.InplaceTextEditor">validationBlock</Method>
			<Method methodClass="Core.Integer">digitSize</Method>
			<Method methodClass="Tools.IntermediateCategory">contents</Method>
			<Method methodClass="OS.KernelLibrary">getTimeFormat:dwFlags:lpTime:lpFormat:lpTimeStr:cchBuf:</Method>
			<Method methodClass="UI.ListBox">basicSelectionByIndex:</Method>
			<Method methodClass="UI.ListModel">updateAtIndex:</Method>
			<Method methodClass="UI.ListModel">updateItem:</Method>
			<Method methodClass="UI.ListModel">updateItem:ifAbsent:</Method>
			<Method methodClass="UI.ListView">autoArrange</Method>
			<Method methodClass="UI.ListView">autoArrange:</Method>
			<Method methodClass="UI.ListView">columns</Method>
			<Method methodClass="UI.ListView">hasTrackSelect</Method>
			<Method methodClass="UI.ListView">hasTrackSelect:</Method>
			<Method methodClass="Kernel.LiteralPrinter">nextPut:</Method>
			<Method methodClass="Kernel.LiteralPrinter">nextPutAll:</Method>
			<Method methodClass="Kernel.LiteralPrinter">space</Method>
			<Method methodClass="Core.Locale">isMonthBeforeDay</Method>
			<Method methodClass="OS.LOGBRUSH">style</Method>
			<Method methodClass="OS.LOGBRUSH">style:</Method>
			<Method methodClass="OS.LOGPEN">style</Method>
			<Method methodClass="OS.LOGPEN">style:</Method>
			<Method methodClass="OS.COM.LPBSTR">asUnicodeString</Method>
			<Method methodClass="OS.LVBKIMAGEW">offset:</Method>
			<Method methodClass="OS.COM.MemberDesc">argumentTypeNames</Method>
			<Method methodClass="UI.Menu">find:</Method>
			<Method methodClass="UI.Menu">find:ifAbsent:</Method>
			<Method methodClass="UI.Menu">remove:</Method>
			<Method methodClass="UI.Menu">remove:ifAbsent:</Method>
			<Method methodClass="UI.Menu">replace:with:</Method>
			<Method methodClass="UI.MessageBox">setForeground</Method>
			<Method methodClass="Tools.MethodBrowser">method</Method>
			<Method methodClass="Tools.MethodBrowser">method:</Method>
			<Method methodClass="Tools.MethodBrowserShell">method</Method>
			<Method methodClass="Core.MethodCategory">contents</Method>
			<Method methodClass="Tools.MethodWorkspace">method</Method>
			<Method methodClass="UI.MoenTreeView">updateItem:andChildren:imagesOnly:</Method>
			<Method methodClass="Smalltalk.Msimg32Library">alphaBlend:nXOriginDest:nYOriginDest:nWidthDest:nHeightDest:hdcSrc:nXOriginSrc:nYOriginSrc:nWidthSrc:nHeightSrc:blend:</Method>
			<Method methodClass="Smalltalk.Msimg32Library">gradientFill:pVertex:dwNumVertex:pMesh:dwNumMesh:dwMode:</Method>
			<Method methodClass="Smalltalk.Msimg32Library">transparentBlt:nXOriginDest:nYOriginDest:nWidthDest:nHeightDest:hdcSrc:nXOriginSrc:nYOriginSrc:nWidthSrc:nHeightSrc:crTransparent:</Method>
			<Method methodClass="OS.NTLibrary class">isWine</Method>
			<Method methodClass="Core.Object">storeUnderRegKey:as:</Method>
			<Method methodClass="Core.Object class">fromRegKey:</Method>
			<Method methodClass="OS.ODBCTIMESTAMP">asTimeStamp</Method>
			<Method methodClass="OS.ODBCTIMESTAMP class">fromTimeStamp:</Method>
			<Method methodClass="Kernel.Package">addGlobalNamed:</Method>
			<Method methodClass="Kernel.Package">includesGlobalNamed:</Method>
			<Method methodClass="Kernel.Package">isBaseImagePackage</Method>
			<Method methodClass="Kernel.Package">removeGlobalNamed:</Method>
			<Method methodClass="Kernel.Package">script:</Method>
			<Method methodClass="Kernel.Package">script:put:</Method>
			<Method methodClass="Kernel.Package">untracedGlobals</Method>
			<Method methodClass="Kernel.Package class">name:comment:</Method>
			<Method methodClass="Kernel.PackageManager">addGlobalNamed:to:</Method>
			<Method methodClass="Kernel.PackageManager">allGlobalAliases</Method>
			<Method methodClass="Kernel.PackageManager">packageOfGlobalNamed:</Method>
			<Method methodClass="UI.PaintEvent class">handle:wParam:hdc:paintStruct:</Method>
			<Method methodClass="Security.PC1Cipher">cipher:</Method>
			<Method methodClass="Security.PC1Cipher">cipherString:</Method>
			<Method methodClass="UI.Prompter">validationBlock</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">compile:classified:</Method>
			<Method methodClass="OS.RegKeyAbstract">rootHandle</Method>
			<Method methodClass="Graphics.RGB">asIndexedColorUsingPalette:</Method>
			<Method methodClass="Graphics.RGB class">stdColor:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">caretPeriod:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">currentLineAlpha:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">firstVisibleLine:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">highlightRange:withIndicator:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">hoverTime</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">hoverTime:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">indicatorDefinitions:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">isCurrentLineHighlighted:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">isDrawingBuffered</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">isDrawingBuffered:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">isDrawingTwoPhase</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">isDrawingTwoPhase:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">isKeyboardInputUnicode</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">isKeyboardInputUnicode:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">marginCount</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">marginCount:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">sciSetEdgeColumn:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">secondarySelectionAlpha:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">selectionAlpha:</Method>
			<Method methodClass="UI.ScrollingDecorator">continuousTracking</Method>
			<Method methodClass="UI.ScrollingDecorator">continuousTracking:</Method>
			<Method methodClass="Core.Set">equals:</Method>
			<Method methodClass="UI.ShellView">hasThickFrame</Method>
			<Method methodClass="UI.ShellView">hasThickFrame:</Method>
			<Method methodClass="UI.Slider">hasTicksBoth</Method>
			<Method methodClass="UI.Slider">hasTicksBoth:</Method>
			<Method methodClass="UI.Slider">hasTicksTopOrLeft</Method>
			<Method methodClass="UI.Slider">hasTicksTopOrLeft:</Method>
			<Method methodClass="UI.Slider">selection</Method>
			<Method methodClass="UI.Slider">selection:</Method>
			<Method methodClass="Tools.SmalltalkSystem">classesReferencingPool:</Method>
			<Method methodClass="Tools.SmalltalkSystem">classesReferencingPoolNamed:</Method>
			<Method methodClass="Net.SocketError">errorAsString</Method>
			<Method methodClass="Net.SocketError">errorCode</Method>
			<Method methodClass="Core.SortAlgorithm class">sortBlock:</Method>
			<Method methodClass="Core.SortedCollection class">value:value:</Method>
			<Method methodClass="UI.StatusBarItem class">value:</Method>
			<Method methodClass="UI.StatusBarItemAbstract">beFullWidth</Method>
			<Method methodClass="Kernel.STBClassProxy class">for:</Method>
			<Method methodClass="Kernel.STBCollectionProxy class">for:</Method>
			<Method methodClass="Kernel.STBPrefix">isLiteralPrefix</Method>
			<Method methodClass="Smalltalk.STBResourceSTBByteArrayAccessorProxy class">for:</Method>
			<Method methodClass="Kernel.STBSingletonProxy class">for:</Method>
			<Method methodClass="Kernel.STBSingletonProxy class">for:using:</Method>
			<Method methodClass="UI.STBViewProxy">for:</Method>
			<Method methodClass="UI.STBViewProxy class">for:</Method>
			<Method methodClass="Core.Stream">nextOrNil</Method>
			<Method methodClass="Core.String">asUnicodeString</Method>
			<Method methodClass="Core.String">equals:</Method>
			<Method methodClass="Core.String">unescapePercents</Method>
			<Method methodClass="Core.String class">fromId:</Method>
			<Method methodClass="Core.String class">fromId:in:</Method>
			<Method methodClass="Core.String class">fromUnicodeString:</Method>
			<Method methodClass="Core.String class">unicodeClass</Method>
			<Method methodClass="External.Structure">do:</Method>
			<Method methodClass="External.Structure">do:separatedBy:</Method>
			<Method methodClass="Graphics.SystemColor">asIndexedColor</Method>
			<Method methodClass="Graphics.SystemColor class">fromId:</Method>
			<Method methodClass="OS.SystemMetrics">hasButtonNotes</Method>
			<Method methodClass="OS.SystemMetrics">hasDesktopComposition</Method>
			<Method methodClass="OS.SystemMetrics">hasEnhancedThemes</Method>
			<Method methodClass="OS.SystemMetrics">hasLinkButtons</Method>
			<Method methodClass="OS.SystemMetrics">hasMenuBitmaps</Method>
			<Method methodClass="OS.SystemMetrics">hasMenuImages</Method>
			<Method methodClass="OS.SystemMetrics">hasTreeViewHotTracking</Method>
			<Method methodClass="OS.SystemMetrics">supportsAlphaBlending</Method>
			<Method methodClass="UI.TabView">isInverted:</Method>
			<Method methodClass="UI.TabView">isVertical:</Method>
			<Method methodClass="XProgramming.SUnit.TestCase">assert:sameAs:</Method>
			<Method methodClass="XProgramming.SUnit.TestCase">deny:sameAs:</Method>
			<Method methodClass="XProgramming.SUnit.TestResult">correctCount</Method>
			<Method methodClass="UI.TextEdit">findNextWrapped:down:wholeWord:matchCase:</Method>
			<Method methodClass="UI.TextEdit">isLowercase</Method>
			<Method methodClass="UI.TextEdit">isLowercase:</Method>
			<Method methodClass="UI.TextEdit">isNumeric</Method>
			<Method methodClass="UI.TextEdit">isNumeric:</Method>
			<Method methodClass="UI.TextEdit">isUpperCase</Method>
			<Method methodClass="UI.TextEdit">isUppercase:</Method>
			<Method methodClass="UI.TextEdit">lines</Method>
			<Method methodClass="Graphics.TextTileIcon">largeIcon</Method>
			<Method methodClass="Graphics.TextTileIcon class">text:font:color:</Method>
			<Method methodClass="OS.ThemeLibrary class">isAppThemed</Method>
			<Method methodClass="Core.TimeStamp">date:</Method>
			<Method methodClass="Core.TimeStamp">dateAndTime</Method>
			<Method methodClass="Core.TimeStamp">time:</Method>
			<Method methodClass="UI.ToolbarButton">checked</Method>
			<Method methodClass="UI.ToolbarButton">checked:</Method>
			<Method methodClass="UI.ToolbarButton">enabled</Method>
			<Method methodClass="UI.ToolbarButton">enabled:</Method>
			<Method methodClass="UI.ToolbarButton">hide:</Method>
			<Method methodClass="UI.ToolbarButton">indeterminate:</Method>
			<Method methodClass="UI.ToolbarButton">pressed</Method>
			<Method methodClass="UI.ToolbarButton">pressed:</Method>
			<Method methodClass="UI.TreeView">disableExpandAll</Method>
			<Method methodClass="UI.TreeView">disableExpandAll:</Method>
			<Method methodClass="UI.TypeConverter">leftExceptionalValue</Method>
			<Method methodClass="UI.TypeConverter">leftExceptionalValue:</Method>
			<Method methodClass="UI.TypeConverter">rightExceptionalValue</Method>
			<Method methodClass="UI.TypeConverter">rightExceptionalValue:</Method>
			<Method methodClass="Core.UndefinedObject">subclass:instanceVariableNames:classVariableNames:poolDictionaries:</Method>
			<Method methodClass="Core.UndefinedObject">subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:</Method>
			<Method methodClass="Core.UndefinedObject">subclass:instanceVariableNames:classVariableNames:poolDictionaries:classInstanceVariableNames:</Method>
			<Method methodClass="UI.View">defaultWindowProcessing:</Method>
			<Method methodClass="UI.View">hasWindowEdge</Method>
			<Method methodClass="UI.View">hasWindowEdge:</Method>
			<Method methodClass="UI.View">winHelpPopup:topic:</Method>
			<Method methodClass="UI.View">winHelpPopup:topic:at:</Method>
			<Method methodClass="Graphics.VirtualColor">asIndexedColor</Method>
			<Method methodClass="Kernel.VMLibrary">isWindows10OrGreater</Method>
			<Method methodClass="Kernel.VMLibrary">isWindows7OrGreater</Method>
			<Method methodClass="Kernel.VMLibrary">isWindows7SP1OrGreater</Method>
			<Method methodClass="Kernel.VMLibrary">isWindows8OrGreater</Method>
			<Method methodClass="Kernel.VMLibrary">isWindows8Point1OrGreater</Method>
			<Method methodClass="Kernel.VMLibrary">isWindowsServer</Method>
			<Method methodClass="Kernel.VMLibrary">isWindowsVersionOrGreater:wMinorVersion:wServicePackMajor:</Method>
			<Method methodClass="Kernel.VMLibrary">isWindowsVistaOrGreater</Method>
			<Method methodClass="Kernel.VMLibrary">isWindowsVistaSP1OrGreater</Method>
			<Method methodClass="Kernel.VMLibrary">isWindowsVistaSP2OrGreater</Method>
			<Method methodClass="Kernel.VMLibrary">isWindowsXPOrGreater</Method>
			<Method methodClass="Kernel.VMLibrary">shortName</Method>
			<Method methodClass="UI.WindowsEvent class">message:handle:wParam:lParam:</Method>
		</StripMethods>
		<StripMethods reason="should not implement">
			<Method methodClass="ADODB._Collection">removeAtIndex:</Method>
			<Method methodClass="External.Address">deepCopy</Method>
			<Method methodClass="Graphics.Gdiplus.AdjustableArrowCap class">strokePath:</Method>
			<Method methodClass="ADODB.ADOCollection">add:</Method>
			<Method methodClass="ADODB.ADOCollection">at:put:</Method>
			<Method methodClass="Tools.AllMethodsCategory class">newNamed:</Method>
			<Method methodClass="Core.ArrayedCollection">add:</Method>
			<Method methodClass="Core.ArrayedCollection">removeAll</Method>
			<Method methodClass="Tools.Aspect class">new</Method>
			<Method methodClass="Tools.AspectAccessor class">new</Method>
			<Method methodClass="UI.AspectBuffer class">new</Method>
			<Method methodClass="Kernel.BindingReference class">new</Method>
			<Method methodClass="Core.Boolean class">new</Method>
			<Method methodClass="Graphics.Canvas class">new</Method>
			<Method methodClass="Core.Category class">new</Method>
			<Method methodClass="Core.Character class">new</Method>
			<Method methodClass="Smalltalk.ChunkBrowserOtherChunk">browseTarget</Method>
			<Method methodClass="Smalltalk.ChunkBrowserSeriesChunk class">isChunkClassFor:</Method>
			<Method methodClass="Smalltalk.ChunkBrowserSeriesStartChunk">browseTarget</Method>
			<Method methodClass="Smalltalk.ChunkBrowserSeriesStartChunk">isMatch</Method>
			<Method methodClass="Smalltalk.ChunkBrowserSeriesStartChunk">restore</Method>
			<Method methodClass="Smalltalk.ChunkBrowserSeriesStartChunk class">chunkType</Method>
			<Method methodClass="UI.Clipboard class">new</Method>
			<Method methodClass="Graphics.Color class">new</Method>
			<Method methodClass="UI.Command class">new</Method>
			<Method methodClass="UI.CommandPolicy class">new</Method>
			<Method methodClass="UI.CommonDialog class">defaultView</Method>
			<Method methodClass="UI.CommonDialog class">showModal:</Method>
			<Method methodClass="UI.CommonDialog class">showModal:on:</Method>
			<Method methodClass="Smalltalk.ComparisonPolicy class">new</Method>
			<Method methodClass="Database.DBAbstractStatement class">new</Method>
			<Method methodClass="Database.DBField class">new</Method>
			<Method methodClass="Database.DBResultSet">add:</Method>
			<Method methodClass="Database.DBResultSet">at:put:</Method>
			<Method methodClass="Database.DBResultSet">resize:</Method>
			<Method methodClass="Kernel.DeadObject class">removeFromSystem</Method>
			<Method methodClass="Kernel.DebugTraceStream">atEnd</Method>
			<Method methodClass="UI.DefaultShellSessionManager class">installNew</Method>
			<Method methodClass="Core.DeferredValue class">new</Method>
			<Method methodClass="UI.DesktopView">layoutManager:</Method>
			<Method methodClass="UI.DesktopView">name:</Method>
			<Method methodClass="UI.DesktopView">name:as:</Method>
			<Method methodClass="Core.Dictionary">remove:ifAbsent:</Method>
			<Method methodClass="Security.DolphinSureCertificate class">new</Method>
			<Method methodClass="Security.DolphinSureCertificate class">publisherCertificate:privateKey:</Method>
			<Method methodClass="Security.DolphinSureCertificateInfo class">new</Method>
			<Method methodClass="Security.DolphinSureCertificateStore class">new</Method>
			<Method methodClass="MSXML.DOMEntitiesMap">createNamedNode:</Method>
			<Method methodClass="MSXML.DOMNamedNodeMap">copyElementsInto:</Method>
			<Method methodClass="MSXML.DOMNamedNodeMap">hash:max:</Method>
			<Method methodClass="MSXML.DOMNamedNodeMap">privateAt:put:</Method>
			<Method methodClass="MSXML.DOMNamedNodeMap">removeIndex:</Method>
			<Method methodClass="MSXML.DOMNamedNodeMap">uncheckedAdd:</Method>
			<Method methodClass="MSXML.DOMNodeList">add:</Method>
			<Method methodClass="MSXML.DOMNodeList">at:put:</Method>
			<Method methodClass="MSXML.DOMNotationsMap">createNamedNode:</Method>
			<Method methodClass="UI.DroppedFilesList">add:</Method>
			<Method methodClass="UI.DroppedFilesList">at:put:</Method>
			<Method methodClass="OS.COM.Enumerable">add:</Method>
			<Method methodClass="OS.COM.Enumerable">at:put:</Method>
			<Method methodClass="OS.COM.Enumerable">growSize</Method>
			<Method methodClass="OS.COM.EventSink class">new</Method>
			<Method methodClass="External.ExternalArray class">fromAddress:</Method>
			<Method methodClass="Core.FileStream">growCollection</Method>
			<Method methodClass="UI.Folder class">new</Method>
			<Method methodClass="Graphics.Gdiplus.FontFamilyInitializer class">new</Method>
			<Method methodClass="Kernel.FullBindingReference">setScope:</Method>
			<Method methodClass="Tools.Grabber class">new</Method>
			<Method methodClass="Smalltalk.HDITEMW">dwState</Method>
			<Method methodClass="Smalltalk.HDITEMW">dwState:</Method>
			<Method methodClass="Smalltalk.HDITEMW">handle</Method>
			<Method methodClass="Smalltalk.HDITEMW">stateMask</Method>
			<Method methodClass="Smalltalk.HDITEMW">stateMask:</Method>
			<Method methodClass="OS.COM.ICatInformation class">new</Method>
			<Method methodClass="OS.COM.ICatRegister class">new</Method>
			<Method methodClass="Graphics.Icon">fileLocator</Method>
			<Method methodClass="Graphics.Icon">identifier:</Method>
			<Method methodClass="Graphics.IconImageManager class">new</Method>
			<Method methodClass="WebView2.ICoreWebView2HttpResponseHeaders">RemoveHeader:</Method>
			<Method methodClass="OS.COM.IEnumStruct class">elementClass</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributesInitializer class">new</Method>
			<Method methodClass="OS.IniFileAbstract">remove:ifAbsent:</Method>
			<Method methodClass="Graphics.Gdiplus.InstalledFontCollectionInitializer class">new</Method>
			<Method methodClass="Core.Integer">at:</Method>
			<Method methodClass="Core.Integer">at:put:</Method>
			<Method methodClass="Core.Integer">size</Method>
			<Method methodClass="UI.Interactor class">new</Method>
			<Method methodClass="Tools.IntermediateCategory">addClass:</Method>
			<Method methodClass="Tools.IntermediateCategory">removeClass:</Method>
			<Method methodClass="Tools.IntermediateCategory class">unclassifiedName</Method>
			<Method methodClass="Graphics.InternalBitmap class">new</Method>
			<Method methodClass="Core.Interval">add:</Method>
			<Method methodClass="Core.Interval">at:put:</Method>
			<Method methodClass="Core.Interval">resize:</Method>
			<Method methodClass="Core.Interval class">new</Method>
			<Method methodClass="UI.InvertingConverter">leftToRight:</Method>
			<Method methodClass="UI.InvertingConverter">rightToLeft:</Method>
			<Method methodClass="UI.InvertingConverter class">new</Method>
			<Method methodClass="Kernel.IPDolphin class">new</Method>
			<Method methodClass="OS.ITEMIDLIST class">new</Method>
			<Method methodClass="MSXML.IXMLDOMAttribute">key:</Method>
			<Method methodClass="MSXML.IXMLDOMCharacterData">attributes</Method>
			<Method methodClass="MSXML.IXMLDOMEntity">key:</Method>
			<Method methodClass="MSXML.IXMLDOMEntity">value:</Method>
			<Method methodClass="MSXML.IXMLDOMNotation">key:</Method>
			<Method methodClass="MSXML.IXMLDOMNotation">value:</Method>
			<Method methodClass="Core.LinkedList">at:put:</Method>
			<Method methodClass="UI.ListTreePresenter">list:</Method>
			<Method methodClass="UI.ListView">nmSelChanged:</Method>
			<Method methodClass="Kernel.MemoryManager class">new</Method>
			<Method methodClass="Kernel.MemoryManager class">removeFromSystem</Method>
			<Method methodClass="UI.MenuBar">showIn:position:</Method>
			<Method methodClass="Graphics.Metafile">drawDisabledOn:at:extent:</Method>
			<Method methodClass="Kernel.MethodAnnotations">add:</Method>
			<Method methodClass="Kernel.MethodAnnotations">at:put:</Method>
			<Method methodClass="Kernel.MethodCompileFailed class">new</Method>
			<Method methodClass="Kernel.MethodProtocol class">new</Method>
			<Method methodClass="UI.MoenTreeNode class">new</Method>
			<Method methodClass="Smalltalk.MsgParmSpec class">new</Method>
			<Method methodClass="Smalltalk.MsgReturnSpec class">new</Method>
			<Method methodClass="Kernel.Namespace class">asByteArray</Method>
			<Method methodClass="OS.NMHDR class">new</Method>
			<Method methodClass="Kernel.NullEventsCollection">addEvent:action:</Method>
			<Method methodClass="Core.Number class">new</Method>
			<Method methodClass="Tools.Examples.OAIDEExtensions class">new</Method>
			<Method methodClass="Kernel.OutOfMemoryError class">signal:with:</Method>
			<Method methodClass="Kernel.PackageManager class">new</Method>
			<Method methodClass="Refactory.Browser.PatternBlockToken">acceptVisitor:</Method>
			<Method methodClass="OS.COM.Picture">drawDisabledOn:at:extent:</Method>
			<Method methodClass="OS.COM.Picture class">imageType</Method>
			<Method methodClass="Kernel.PluggableSearchPolicy class">new</Method>
			<Method methodClass="Graphics.Gdiplus.POINTF">asDword</Method>
			<Method methodClass="OS.PRINTDLGEXW">lpfnHook:</Method>
			<Method methodClass="Graphics.Gdiplus.PrivateFontCollectionInitializer class">new</Method>
			<Method methodClass="Core.Process class">new</Method>
			<Method methodClass="Kernel.ProcessorScheduler class">new</Method>
			<Method methodClass="Smalltalk.Profiler class">new</Method>
			<Method methodClass="Smalltalk.ProfilerFrame class">new</Method>
			<Method methodClass="Smalltalk.ProfilerListsPresenter">filterSelector:</Method>
			<Method methodClass="Smalltalk.ProfilerSampleSet class">new</Method>
			<Method methodClass="Smalltalk.ProfilerSampleSetManager class">new</Method>
			<Method methodClass="Smalltalk.ProtocolANYSpec class">new</Method>
			<Method methodClass="Smalltalk.ProtocolMsgSpec class">new</Method>
			<Method methodClass="Smalltalk.ProtocolSpec class">new</Method>
			<Method methodClass="Kernel.RandomParkMiller class">newModulus:multiplier:increment:</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass class">new</Method>
			<Method methodClass="STON.Reader">match:do:</Method>
			<Method methodClass="OS.COM.Record class">clear:</Method>
			<Method methodClass="OS.COM.Record class">fromAddress:</Method>
			<Method methodClass="Refactory.Browser.RefactoringManager class">new</Method>
			<Method methodClass="Refactory.Browser.RefactoryChangeManager class">new</Method>
			<Method methodClass="Graphics.Region">createHandle</Method>
			<Method methodClass="Graphics.Gdiplus.RegionInitializer class">new</Method>
			<Method methodClass="Smalltalk.ResourceGeneratorAccessor">save:as:</Method>
			<Method methodClass="UI.ResourceIdentifier">isChanged:</Method>
			<Method methodClass="UI.ResourceIdentifier">load</Method>
			<Method methodClass="UI.RichText class">new</Method>
			<Method methodClass="Core.RunArray">at:put:</Method>
			<Method methodClass="Core.RunArray">resize:</Method>
			<Method methodClass="Core.RunArray">sortUsing:</Method>
			<Method methodClass="UI.RuntimeSessionManager class">new</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">command:id:</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">formatRectangle</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">passwordCharacter</Method>
			<Method methodClass="UI.Scintilla.ScintillaView">passwordCharacter:</Method>
			<Method methodClass="UI.SelectionChangingEvent class">new</Method>
			<Method methodClass="Core.Semaphore">add:afterIndex:</Method>
			<Method methodClass="Core.SequenceableCollection">remove:ifAbsent:</Method>
			<Method methodClass="Core.SessionManager class">new</Method>
			<Method methodClass="Core.SmallInteger">basicAt:</Method>
			<Method methodClass="Core.SmallInteger">basicAt:put:</Method>
			<Method methodClass="Core.SmallInteger">instVarAt:</Method>
			<Method methodClass="Core.SmallInteger">instVarAt:put:</Method>
			<Method methodClass="Core.SmallInteger class">basicNew</Method>
			<Method methodClass="Tools.SmalltalkSystem class">new</Method>
			<Method methodClass="Tools.SmalltalkSystemIcon class">new</Method>
			<Method methodClass="Net.Socket class">new</Method>
			<Method methodClass="Net.SocketWriteStream">growCollection</Method>
			<Method methodClass="Core.SortedCollection">add:afterIndex:</Method>
			<Method methodClass="Core.SortedCollection">add:beforeIndex:</Method>
			<Method methodClass="Core.SortedCollection">addAllFirst:</Method>
			<Method methodClass="Core.SortedCollection">addAllLast:</Method>
			<Method methodClass="Core.SortedCollection">addFirst:</Method>
			<Method methodClass="Core.SortedCollection">addLast:</Method>
			<Method methodClass="Core.SortedCollection">at:put:</Method>
			<Method methodClass="Core.SortedCollection">replaceFrom:to:with:startingAt:</Method>
			<Method methodClass="Kernel.STBProxy class">new</Method>
			<Method methodClass="UI.STBViewProxy">restoreFromProxy:</Method>
			<Method methodClass="OS.StdioBinaryFileStream">nextLine</Method>
			<Method methodClass="Graphics.StockBrush class">new</Method>
			<Method methodClass="Core.Stream class">new</Method>
			<Method methodClass="Graphics.Gdiplus.StringFormatInitializer class">new</Method>
			<Method methodClass="Core.Symbol">replaceFrom:to:with:startingAt:</Method>
			<Method methodClass="Core.Symbol">sortUsing:</Method>
			<Method methodClass="Core.Symbol class">new:</Method>
			<Method methodClass="OS.SystemMetrics class">new</Method>
			<Method methodClass="UI.TabView">getEditControl</Method>
			<Method methodClass="OS.TCITEMW">handle</Method>
			<Method methodClass="Graphics.TextTileIcon class">new</Method>
			<Method methodClass="OS.COM.TKindAliasAnalyzer">baseClass</Method>
			<Method methodClass="OS.COM.TKindAliasAnalyzer">printClassCommentPreambleOn:</Method>
			<Method methodClass="OS.COM.TKindCoclassAnalyzer">baseClass</Method>
			<Method methodClass="OS.COM.TKindCoclassAnalyzer">printClassCommentPreambleOn:</Method>
			<Method methodClass="OS.COM.TKindEnumAnalyzer">baseClass</Method>
			<Method methodClass="OS.COM.TKindEnumAnalyzer">printClassCommentPreambleOn:</Method>
			<Method methodClass="UI.TreeView">basicAdd:atIndex:</Method>
			<Method methodClass="UI.TreeView">basicRemoveAtIndex:</Method>
			<Method methodClass="UI.TreeView">onAdd:atIndex:</Method>
			<Method methodClass="UI.TreeView">onItem:addedAtIndex:</Method>
			<Method methodClass="UI.TreeView">onItem:removedAtIndex:</Method>
			<Method methodClass="UI.TreeView">onItem:updatedAtIndex:</Method>
			<Method methodClass="UI.TreeView">onItems:addedAtIndex:</Method>
			<Method methodClass="OS.COM.TYPEATTR">name</Method>
			<Method methodClass="OS.COM.TypeInfoAnalyzer">generateVariableDefinition:</Method>
			<Method methodClass="OS.COM.TypeInfoObject">newPool:</Method>
			<Method methodClass="OS.COM.TypeInfoStructure class">clear:</Method>
			<Method methodClass="UI.ValueAspectAdaptor class">new</Method>
			<Method methodClass="UI.ValueBuffer class">new</Method>
			<Method methodClass="UI.ValueConverter class">new</Method>
			<Method methodClass="UI.ValueKeyedAdaptor class">new</Method>
			<Method methodClass="UI.ViewState class">new</Method>
			<Method methodClass="Kernel.VMLibrary class">fileName</Method>
			<Method methodClass="External.VOID class">fieldType</Method>
			<Method methodClass="MSXML.XmlFormatter">visitNotation:</Method>
		</StripMethods>
		<StripMethods reason="subclass responsibility">
			<Method methodClass="Graphics.AbstractBitmapFromBlankInitializer class">extent:depth:</Method>
			<Method methodClass="Graphics.Tests.AbstractBitmapTest">stlVersion3_file</Method>
			<Method methodClass="Graphics.Tests.AbstractBitmapTest">stlVersion3_resource</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">emitPackageClassNames:</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">emitPackageManualPrerequisites:</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">emitPackageMethodNames:</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">emitPackagePrerequisiteNames:</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">emitPackageUntracedVariables:</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">emitPackageVariableNames:</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">emitPackageVariableNameSubsets:</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">environment</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">environment:</Method>
			<Method methodClass="Tools.AbstractClassHierarchyModel">onClassAdded:</Method>
			<Method methodClass="Tools.AbstractClassHierarchyModel">onClassUpdated:</Method>
			<Method methodClass="UI.Tests.AbstractContainerViewTest">containerClass</Method>
			<Method methodClass="UI.AbstractDelegatingView">createDelegate</Method>
			<Method methodClass="Core.Tests.AbstractDictionaryTest">collectionClass</Method>
			<Method methodClass="UI.AbstractDocumentShell class">defaultFileExtension</Method>
			<Method methodClass="Core.Tests.AbstractFileStreamTest">bufferSize</Method>
			<Method methodClass="Core.Tests.AbstractFileStreamTest">maxPosition</Method>
			<Method methodClass="OS.AbstractIN_ADDR class">addressFamily</Method>
			<Method methodClass="OS.Tests.AbstractIN_ADDRTest">canonicalInstance</Method>
			<Method methodClass="OS.Tests.AbstractIN_ADDRTest">testDisplayOn</Method>
			<Method methodClass="OS.COM.AbstractInterfaceFunction">descriptor</Method>
			<Method methodClass="OS.COM.AbstractInterfaceFunction">selector</Method>
			<Method methodClass="OS.AbstractLOGFONT">createFont</Method>
			<Method methodClass="OS.AbstractLOGFONT">faceName</Method>
			<Method methodClass="OS.AbstractLOGFONT">faceName:</Method>
			<Method methodClass="OS.AbstractLOGFONT">getData:</Method>
			<Method methodClass="OS.AbstractLOGFONT">lfFaceName</Method>
			<Method methodClass="OS.AbstractLOGFONT">lfFaceName:</Method>
			<Method methodClass="Kernel.Tests.AbstractNamespaceTest">canonicalSubject</Method>
			<Method methodClass="Kernel.Tests.AbstractNamespaceTest">testAbsoluteName</Method>
			<Method methodClass="Kernel.Tests.AbstractNamespaceTest">testAbsoluteReference</Method>
			<Method methodClass="Kernel.Tests.AbstractNamespaceTest">testAllClasses</Method>
			<Method methodClass="Kernel.Tests.AbstractNamespaceTest">testIncludesKey</Method>
			<Method methodClass="Kernel.Tests.AbstractParserErrorTest">parseExpression:in:</Method>
			<Method methodClass="Kernel.Tests.AbstractParserErrorTest">parseMethod:in:</Method>
			<Method methodClass="Kernel.Tests.AbstractParserErrorTest">parserClass</Method>
			<Method methodClass="Kernel.Tests.AbstractParserErrorTest">testErrorsNonsenseAtEndOfExpression</Method>
			<Method methodClass="Kernel.Tests.AbstractParserErrorTest">testErrorsNonsenseAtEndOfMethod</Method>
			<Method methodClass="Kernel.Tests.AbstractParserErrorTest">writtenNotReadRange:</Method>
			<Method methodClass="Graphics.Tests.AbstractPointTest">subjectClass</Method>
			<Method methodClass="Tools.AbstractPublishedAspectInspector">onAspectActioned</Method>
			<Method methodClass="UI.AbstractRecentMenu">getRecentList</Method>
			<Method methodClass="UI.AbstractRecentMenu">setRecentList:</Method>
			<Method methodClass="Graphics.Tests.AbstractRectangleTest">subjectClass</Method>
			<Method methodClass="Kernel.AbstractSemanticAnalyser">visitVariableNode:</Method>
			<Method methodClass="Smalltalk.AbstractSocketTest">serverSocketClass</Method>
			<Method methodClass="Kernel.Tests.AbstractSTBFilerTest">deserialize:</Method>
			<Method methodClass="Kernel.Tests.AbstractSTBFilerTest">serialize:</Method>
			<Method methodClass="Kernel.Tests.AbstractSTBFilerTest">testEmptyStream</Method>
			<Method methodClass="Kernel.Tests.AbstractSTBFilerTest">testInvalidStream</Method>
			<Method methodClass="Kernel.AbstractSTBInFiler">newClassLocator</Method>
			<Method methodClass="Kernel.AbstractSTBInFiler">readClassLocator:</Method>
			<Method methodClass="Kernel.AbstractSTBOutFiler">putCharacter:</Method>
			<Method methodClass="Kernel.AbstractSTBOutFiler">resetStream</Method>
			<Method methodClass="Kernel.AbstractSTBOutFiler">serializeObject:</Method>
			<Method methodClass="Kernel.AbstractSTBOutFiler">writeClass:withLocator:</Method>
			<Method methodClass="Kernel.AbstractSTBOutFiler">writeInteger:</Method>
			<Method methodClass="Kernel.AbstractSTBOutFiler">writeNil</Method>
			<Method methodClass="UI.Tests.AbstractTextEditTest">margins</Method>
			<Method methodClass="UI.Tests.AbstractTextEditTest">text</Method>
			<Method methodClass="OS.COM.APIInfoAnalyzer">generateMethodWrappers</Method>
			<Method methodClass="OS.COM.APIInfoAnalyzer">instanceMethodCategories:</Method>
			<Method methodClass="OS.COM.APIInfoAnalyzer">methodCommentDescription</Method>
			<Method methodClass="OS.COM.APIInfoAnalyzer">printMethod:wrapping:on:</Method>
			<Method methodClass="OS.COM.APIInfoAnalyzer">printRawMethodBody:name:on:</Method>
			<Method methodClass="Kernel.ArithmeticExpressionVisitor">visitLiteralNode:</Method>
			<Method methodClass="Kernel.ArithmeticExpressionVisitor">visitMessageNode:</Method>
			<Method methodClass="Kernel.ArithmeticExpressionVisitor">visitVariableNode:</Method>
			<Method methodClass="Core.ArithmeticValue">*</Method>
			<Method methodClass="Core.ArithmeticValue">/</Method>
			<Method methodClass="Core.ArithmeticValue">+</Method>
			<Method methodClass="Core.ArithmeticValue">asPoint</Method>
			<Method methodClass="Core.ArithmeticValue">coerce:</Method>
			<Method methodClass="Core.ArithmeticValue">generality</Method>
			<Method methodClass="Core.ArithmeticValue">raisedTo:</Method>
			<Method methodClass="Core.ArithmeticValue class">one</Method>
			<Method methodClass="Core.ArithmeticValue class">zero</Method>
			<Method methodClass="Tools.AspectInspector">onAspectSelected</Method>
			<Method methodClass="Tools.AspectInspector">refresh</Method>
			<Method methodClass="Tools.AspectInspector">setAspectValue:</Method>
			<Method methodClass="UI.Scintilla.Attribute">view</Method>
			<Method methodClass="UI.Scintilla.Attribute">view:</Method>
			<Method methodClass="Kernel.AttributeDescriptor">readFrom:</Method>
			<Method methodClass="Kernel.AttributeDescriptor">writeInto:value:</Method>
			<Method methodClass="UI.BasicListAbstract">basicAdd:</Method>
			<Method methodClass="UI.BasicListAbstract">canHScroll</Method>
			<Method methodClass="UI.BasicListAbstract">canHScroll:</Method>
			<Method methodClass="Tools.BatchAspectAccessor">aspectClass</Method>
			<Method methodClass="Kernel.BindingReference">=</Method>
			<Method methodClass="Kernel.BindingReference">asString</Method>
			<Method methodClass="Kernel.BindingReference">baseClass</Method>
			<Method methodClass="Kernel.BindingReference">bindingOrNil</Method>
			<Method methodClass="Kernel.BindingReference">bindingScope</Method>
			<Method methodClass="Kernel.BindingReference">displayOn:</Method>
			<Method methodClass="Kernel.BindingReference">environmentName</Method>
			<Method methodClass="Kernel.BindingReference">hash</Method>
			<Method methodClass="Kernel.BindingReference">home</Method>
			<Method methodClass="Kernel.BindingReference">instance</Method>
			<Method methodClass="Kernel.BindingReference">isPrivate</Method>
			<Method methodClass="Kernel.BindingReference">isPrivate:</Method>
			<Method methodClass="Kernel.BindingReference">isRelative</Method>
			<Method methodClass="Kernel.BindingReference">meta</Method>
			<Method methodClass="Kernel.BindingReference">path</Method>
			<Method methodClass="Kernel.BindingReference">pathString</Method>
			<Method methodClass="Kernel.BindingReference">private</Method>
			<Method methodClass="Kernel.BindingReference">scope</Method>
			<Method methodClass="Kernel.BindingReference">scope:</Method>
			<Method methodClass="Kernel.Tests.BindingReferenceTest">subjectClass</Method>
			<Method methodClass="Core.Boolean">and:</Method>
			<Method methodClass="Core.Boolean">asBit</Method>
			<Method methodClass="Core.Boolean">asDword</Method>
			<Method methodClass="Core.Boolean">asParameter</Method>
			<Method methodClass="Core.Boolean">asUIntPtr</Method>
			<Method methodClass="Core.Boolean">ifFalse:</Method>
			<Method methodClass="Core.Boolean">ifFalse:ifTrue:</Method>
			<Method methodClass="Core.Boolean">ifTrue:</Method>
			<Method methodClass="Core.Boolean">ifTrue:ifFalse:</Method>
			<Method methodClass="Core.Boolean">not</Method>
			<Method methodClass="Core.Boolean">or:</Method>
			<Method methodClass="Core.Tests.BooleanTest">subjectClass</Method>
			<Method methodClass="External.Callback">valueWithArgumentsAt:</Method>
			<Method methodClass="Core.Category">addClass:</Method>
			<Method methodClass="Core.Category">isEmpty</Method>
			<Method methodClass="Core.Category">removeClass:</Method>
			<Method methodClass="Core.Category class">name:</Method>
			<Method methodClass="Core.Category class">unclassifiedName</Method>
			<Method methodClass="OS.CCHITTESTINFO">handle</Method>
			<Method methodClass="OS.CCITEM">cchTextMax</Method>
			<Method methodClass="OS.CCITEM">cchTextMax:</Method>
			<Method methodClass="OS.CCITEM">dwState</Method>
			<Method methodClass="OS.CCITEM">dwState:</Method>
			<Method methodClass="OS.CCITEM">handle</Method>
			<Method methodClass="OS.CCITEM">iImage</Method>
			<Method methodClass="OS.CCITEM">iImage:</Method>
			<Method methodClass="OS.CCITEM">lParam</Method>
			<Method methodClass="OS.CCITEM">lParam:</Method>
			<Method methodClass="OS.CCITEM">pszText</Method>
			<Method methodClass="OS.CCITEM">pszText:</Method>
			<Method methodClass="OS.CCITEM">stateMask</Method>
			<Method methodClass="OS.CCITEM">stateMask:</Method>
			<Method methodClass="OS.CCITEM">textPointerOffset</Method>
			<Method methodClass="Refactory.Browser.ChangeMethodNameRefactoring">myConditions</Method>
			<Method methodClass="UI.CheckButton">basicWindowStyle</Method>
			<Method methodClass="Smalltalk.ChunkBrowserChunk">browseTarget</Method>
			<Method methodClass="Smalltalk.ChunkBrowserChunk">isMatch</Method>
			<Method methodClass="Smalltalk.ChunkBrowserChunk">restore</Method>
			<Method methodClass="Smalltalk.ChunkBrowserChunk class">chunkType</Method>
			<Method methodClass="Smalltalk.ChunkBrowserChunk class">isChunkClassFor:</Method>
			<Method methodClass="Smalltalk.ChunkBrowserSeriesStartChunk">seriesClass</Method>
			<Method methodClass="Tools.ClassAspectPlugin">aspect</Method>
			<Method methodClass="Tools.ClassAspectPlugin">caption</Method>
			<Method methodClass="Tools.ClassAspectPlugin">defaultHelpId</Method>
			<Method methodClass="Tools.Tests.ClassBrowserAbstractTest">browserClass</Method>
			<Method methodClass="Tools.ClassBrowserPlugin">displayOn:</Method>
			<Method methodClass="Core.ClassDescription">absoluteReference</Method>
			<Method methodClass="Core.ClassDescription">basicEnvironment</Method>
			<Method methodClass="Core.ClassDescription">classBindingNames</Method>
			<Method methodClass="Core.ClassDescription">classInModel:</Method>
			<Method methodClass="Core.ClassDescription">classPool</Method>
			<Method methodClass="Core.ClassDescription">classVariables</Method>
			<Method methodClass="Core.ClassDescription">comment</Method>
			<Method methodClass="Core.ClassDescription">comment:</Method>
			<Method methodClass="Core.ClassDescription">correspondingTestCase</Method>
			<Method methodClass="Core.ClassDescription">directlyDefinesClassVariable:</Method>
			<Method methodClass="Core.ClassDescription">fullBindingFor:environment:</Method>
			<Method methodClass="Core.ClassDescription">fullyQualifiedReference</Method>
			<Method methodClass="Core.ClassDescription">importedNamespacesDo:</Method>
			<Method methodClass="Core.ClassDescription">imports</Method>
			<Method methodClass="Core.ClassDescription">imports:</Method>
			<Method methodClass="Core.ClassDescription">instanceClass</Method>
			<Method methodClass="Core.ClassDescription">isAnonymous</Method>
			<Method methodClass="Core.ClassDescription">isDeprecated</Method>
			<Method methodClass="Core.ClassDescription">localBindingFor:</Method>
			<Method methodClass="Core.ClassDescription">metaclass</Method>
			<Method methodClass="Core.ClassDescription">packageManager</Method>
			<Method methodClass="Core.ClassDescription">printFullNameOn:</Method>
			<Method methodClass="Core.ClassDescription">shortName</Method>
			<Method methodClass="Core.ClassDescription">subclassesDo:</Method>
			<Method methodClass="Core.ClassDescription">unqualifiedName</Method>
			<Method methodClass="Core.Tests.ClassDescriptionTest">allClassHierarchyInstancesDo:</Method>
			<Method methodClass="Core.Tests.ClassDescriptionTest">testClassBindingNames</Method>
			<Method methodClass="Core.Tests.ClassDescriptionTest">testLessOrEqual</Method>
			<Method methodClass="Tools.ClassSelector">flags</Method>
			<Method methodClass="Tools.ClassSelector">flags:</Method>
			<Method methodClass="Core.Collection">add:</Method>
			<Method methodClass="Core.Collection">do:</Method>
			<Method methodClass="Core.Collection">remove:ifAbsent:</Method>
			<Method methodClass="Core.Tests.CollectionTest">collectionClass</Method>
			<Method methodClass="Graphics.Color">asParameter</Method>
			<Method methodClass="Graphics.Color">asRGB</Method>
			<Method methodClass="UI.CommandPolicy">visitPresenter:</Method>
			<Method methodClass="UI.CommonDialog">basicShowModal</Method>
			<Method methodClass="UI.CommonDialog">extractResult:</Method>
			<Method methodClass="UI.CommonDialog">winStructClass</Method>
			<Method methodClass="OS.CommonDialogStructure">flags</Method>
			<Method methodClass="OS.CommonDialogStructure">flags:</Method>
			<Method methodClass="OS.CommonDialogStructure">lpfnHook:</Method>
			<Method methodClass="Kernel.CompiledCode">asDebugMethod</Method>
			<Method methodClass="Kernel.CompiledCode">getDebugInfo</Method>
			<Method methodClass="Kernel.CompiledCode">getSource</Method>
			<Method methodClass="Kernel.CompiledCode">isExpression</Method>
			<Method methodClass="Kernel.CompiledCode">owningPackage</Method>
			<Method methodClass="Kernel.CompiledCode">parseTreeOnError:</Method>
			<Method methodClass="Kernel.CompiledCode">stylerClass</Method>
			<Method methodClass="Kernel.CompilerNotification class">severity</Method>
			<Method methodClass="UI.ControlBarAbstract">addItem:</Method>
			<Method methodClass="UI.ControlBarAbstract">indexOfItem:</Method>
			<Method methodClass="UI.ControlBarAbstract">itemAtIndex:</Method>
			<Method methodClass="UI.ControlBarAbstract">itemRect:</Method>
			<Method methodClass="UI.ControlBarAbstract">items</Method>
			<Method methodClass="UI.ControlBarAbstract">items:</Method>
			<Method methodClass="UI.ControlBarAbstract">layoutManager:</Method>
			<Method methodClass="UI.ControlBarAbstract">removeItem:</Method>
			<Method methodClass="UI.ControlView class">winClassName</Method>
			<Method methodClass="OS.COM.CountedArray">getElements</Method>
			<Method methodClass="UI.DateTimeCommonControl">dtNotificationMap</Method>
			<Method methodClass="UI.DateTimeCommonControl">getRangeMessage</Method>
			<Method methodClass="UI.DateTimeCommonControl">getSystemTime</Method>
			<Method methodClass="UI.DateTimeCommonControl">modelClass</Method>
			<Method methodClass="UI.DateTimeCommonControl">nmFirst</Method>
			<Method methodClass="UI.DateTimeCommonControl">setRangeMessage</Method>
			<Method methodClass="UI.DateTimeCommonControl">setSystemTime:</Method>
			<Method methodClass="Database.DBAbstractRow">asObject</Method>
			<Method methodClass="Database.DBAbstractStatement">defaultCursorType</Method>
			<Method methodClass="Database.DBAbstractStatement">executeStatement</Method>
			<Method methodClass="Database.Tests.DBConnectionTest">databaseResource</Method>
			<Method methodClass="Database.Tests.DBConnectionTest">queryColumns</Method>
			<Method methodClass="Database.Tests.DBConnectionTestResource">connectString</Method>
			<Method methodClass="Database.Tests.DBConnectionTestResource">createDatabase</Method>
			<Method methodClass="Kernel.Tests.DolphinCompilerTestMethods">testWarnUnimplementedAbstractMethod</Method>
			<Method methodClass="Tools.DolphinProduct">defaultSystemFolderColor</Method>
			<Method methodClass="Tools.DolphinProduct">defaultSystemFolderExtent</Method>
			<Method methodClass="Tools.DolphinProduct">fullName</Method>
			<Method methodClass="Tools.DolphinProduct class">productName</Method>
			<Method methodClass="Tools.DolphinProduct class">shortProductName</Method>
			<Method methodClass="Core.Tests.DolphinTestClassResource">createClasses</Method>
			<Method methodClass="MSXML.DOMNamedNodeMap">associationClass</Method>
			<Method methodClass="MSXML.DOMNamedNodeMap">createNamedNode:</Method>
			<Method methodClass="UI.DragDropObject">availableFormats</Method>
			<Method methodClass="UI.DragDropObject">format:data:</Method>
			<Method methodClass="UI.DragDropObject">format:ifAbsent:</Method>
			<Method methodClass="UI.DragDropObject">isFormatAvailable:</Method>
			<Method methodClass="UI.DragDropSession">dragObjectClass</Method>
			<Method methodClass="UI.DragDropSession">hideDragImage</Method>
			<Method methodClass="UI.DragDropSession">showDragImage</Method>
			<Method methodClass="OS.COM.DualInterfaceImplementation">interfaceClass</Method>
			<Method methodClass="Smalltalk.EmbeddedCheckButton">defaultIStateId</Method>
			<Method methodClass="Smalltalk.EmbeddedCheckButton">iPartId</Method>
			<Method methodClass="Smalltalk.EmbeddedCheckButton">iStateFor:enabled:hot:</Method>
			<Method methodClass="Smalltalk.EmbeddedCheckButton">uStateFor:enabled:</Method>
			<Method methodClass="Core.Exception">defaultAction</Method>
			<Method methodClass="Kernel.ExceptionHandlerAbstract">actionFor:</Method>
			<Method methodClass="External.Tests.ExternalArrayTest">arrayClass</Method>
			<Method methodClass="External.Tests.ExternalArrayTest">numericElementClass</Method>
			<Method methodClass="OS.FileSystemChangeReader">handleError:</Method>
			<Method methodClass="OS.FileSystemChangeReader">handleNotifications:</Method>
			<Method methodClass="OS.COM.FinalizableStructure class">clear:</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusBase">basicFree</Method>
			<Method methodClass="External.GenericExternalArray class">length:elementClass:</Method>
			<Method methodClass="Graphics.GraphicsTool">createHandle</Method>
			<Method methodClass="WinHttpServer.HTTP_HEADERS">KnownHeaders</Method>
			<Method methodClass="WinHttpServer.HTTP_HEADERS class">indexToHeaderMap</Method>
			<Method methodClass="WinHttpServer.HTTP_PROPERTY_FLAGS class">propertyId</Method>
			<Method methodClass="WinHttpServer.HttpQosSetting class">qosType</Method>
			<Method methodClass="UI.IconicListAbstract">applyImageLists</Method>
			<Method methodClass="UI.IconicListAbstract">basicItemFromPoint:</Method>
			<Method methodClass="UI.IconicListAbstract">ensureVisible:</Method>
			<Method methodClass="UI.IconicListAbstract">getEditControl</Method>
			<Method methodClass="UI.IconicListAbstract">hasHotTracking</Method>
			<Method methodClass="UI.IconicListAbstract">hasHotTracking:</Method>
			<Method methodClass="UI.IconicListAbstract">itemRect:textOnly:</Method>
			<Method methodClass="UI.IconicListAbstract">itemStructure</Method>
			<Method methodClass="UI.IconicListAbstract">setViewMode:</Method>
			<Method methodClass="UI.IconicListAbstract">viewMode</Method>
			<Method methodClass="WebView2.ICoreWebView2Collection">do:</Method>
			<Method methodClass="WebView2.ICoreWebView2EventHandler">basicRegister:</Method>
			<Method methodClass="WebView2.ICoreWebView2EventHandler">basicUnregister</Method>
			<Method methodClass="WebView2.ICoreWebView2EventHandler class">eventName</Method>
			<Method methodClass="WebView2.ICoreWebView2HttpHeadersCollection">at:put:</Method>
			<Method methodClass="WebView2.ICoreWebView2HttpHeadersCollection">Contains:contains:</Method>
			<Method methodClass="WebView2.ICoreWebView2HttpHeadersCollection">GetHeader:value:</Method>
			<Method methodClass="WebView2.ICoreWebView2HttpHeadersCollection">GetHeaders:iterator:</Method>
			<Method methodClass="WebView2.ICoreWebView2HttpHeadersCollection">RemoveHeader:</Method>
			<Method methodClass="WebView2.ICoreWebView2IterableCollection">GetIterator:</Method>
			<Method methodClass="WebView2.ICoreWebView2IterableCollection">iteratorClass</Method>
			<Method methodClass="WebView2.ICoreWebView2Sequence">elementClass</Method>
			<Method methodClass="WebView2.ICoreWebView2Sequence">GetValueAtIndex:value:</Method>
			<Method methodClass="OS.COM.IEnumXXXX class">elementClass</Method>
			<Method methodClass="Smalltalk.ILImportExe class">iconsEndAddress</Method>
			<Method methodClass="Smalltalk.ILImportExe class">iconsStartAddress</Method>
			<Method methodClass="Graphics.Image">addToImageList:mask:</Method>
			<Method methodClass="Graphics.Image">drawDisabledOn:at:extent:</Method>
			<Method methodClass="Graphics.Image">drawOn:at:extent:</Method>
			<Method methodClass="Graphics.Image">extent</Method>
			<Method methodClass="Graphics.Image class">imageType</Method>
			<Method methodClass="Graphics.ImageInitializer">createImage:extent:</Method>
			<Method methodClass="Graphics.Tests.ImageTest">imageFile</Method>
			<Method methodClass="Graphics.Tests.ImageTest">subjectClass</Method>
			<Method methodClass="UI.ImageViewAbstract">paintImageOn:</Method>
			<Method methodClass="UI.Tests.ImageViewAbstractTest">image</Method>
			<Method methodClass="UI.IMSControl">AboutBox</Method>
			<Method methodClass="UI.IMSControl">get_Appearance:</Method>
			<Method methodClass="UI.IMSControl">get_BorderStyle:</Method>
			<Method methodClass="UI.IMSControl">get_Enabled:</Method>
			<Method methodClass="UI.IMSControl">get_Font:</Method>
			<Method methodClass="UI.IMSControl">get_ForeColor:</Method>
			<Method methodClass="UI.IMSControl">get_hWnd:</Method>
			<Method methodClass="UI.IMSControl">get_OLEDropMode:</Method>
			<Method methodClass="UI.IMSControl">put_Appearance:</Method>
			<Method methodClass="UI.IMSControl">put_BackColor:</Method>
			<Method methodClass="UI.IMSControl">put_BorderStyle:</Method>
			<Method methodClass="UI.IMSControl">put_Enabled:</Method>
			<Method methodClass="UI.IMSControl">put_ForeColor:</Method>
			<Method methodClass="UI.IMSControl">put_hWnd:</Method>
			<Method methodClass="UI.IMSControl">put_OLEDropMode:</Method>
			<Method methodClass="UI.IMSControl">putref_Font:</Method>
			<Method methodClass="UI.IMSControl">Refresh</Method>
			<Method methodClass="OS.IniFileAbstract">at:ifAbsent:</Method>
			<Method methodClass="OS.IniFileAbstract">at:put:</Method>
			<Method methodClass="OS.IniFileAbstract">getValue:</Method>
			<Method methodClass="OS.IniFileAbstract">keysDo:</Method>
			<Method methodClass="OS.IniFileAbstract">removeKey:ifAbsent:</Method>
			<Method methodClass="Graphics.Gdiplus.Initializer">createHandle</Method>
			<Method methodClass="Tools.InspectorAbstract">inspecteeSelection</Method>
			<Method methodClass="External.INTEGER">asUnsignedInteger</Method>
			<Method methodClass="Core.Integer">asVariant</Method>
			<Method methodClass="Core.Integer">bitAnd:</Method>
			<Method methodClass="External.INTEGER">asSignedInteger</Method>
			<Method methodClass="Core.Integer">bitOr:</Method>
			<Method methodClass="Core.Integer">bitXor:</Method>
			<Method methodClass="Core.Integer">byteSize</Method>
			<Method methodClass="Core.Integer">printOn:base:</Method>
			<Method methodClass="Core.Integer">printOn:base:nDigits:</Method>
			<Method methodClass="External.INTEGER class">typeName</Method>
			<Method methodClass="External.INTEGER class">vt</Method>
			<Method methodClass="External.IntegerBytes">asInteger</Method>
			<Method methodClass="External.IntegerBytes">asSignedInteger</Method>
			<Method methodClass="External.IntegerBytes">regKeyType</Method>
			<Method methodClass="External.IntegerBytes">value:</Method>
			<Method methodClass="External.IntegerBytes class">fieldType</Method>
			<Method methodClass="External.IntegerBytes class">valueAtAddress:</Method>
			<Method methodClass="Core.Tests.IntegerTest">canonicalInstance</Method>
			<Method methodClass="OS.COM.Interface">AddRef</Method>
			<Method methodClass="OS.COM.Interface">QueryInterface:ppvObject:</Method>
			<Method methodClass="OS.COM.Interface">Release</Method>
			<Method methodClass="OS.COM.Interface class">defineFunctions</Method>
			<Method methodClass="OS.COM.InterfaceImplementation">supportedInterfaces</Method>
			<Method methodClass="OS.COM.InterfaceTypeAnalyzer">generatePropertyAccessors</Method>
			<Method methodClass="OS.COM.InterfaceTypeAnalyzer">printMethodBody:wrapping:on:</Method>
			<Method methodClass="OS.COM.InterfaceTypeAnalyzer">printMultiOutMethodBody:wrapping:on:</Method>
			<Method methodClass="OS.COM.InterfaceTypeAnalyzer">printPropertyCommentDecl:on:</Method>
			<Method methodClass="OS.COM.InterfaceTypeAnalyzer">printPropGet:wrapping:on:defaultOptionals:</Method>
			<Method methodClass="OS.COM.InterfaceTypeAnalyzer">printPropPut:wrapping:on:</Method>
			<Method methodClass="OS.COM.IPersist">IsDirty</Method>
			<Method methodClass="OS.IpHlpApiTableStruct">table</Method>
			<Method methodClass="VBScript.IRegExpAbstract">Execute:ppMatches:</Method>
			<Method methodClass="VBScript.IRegExpAbstract">matchCollectionClass</Method>
			<Method methodClass="VBScript.IRegExpAbstract">replace:replaceString:</Method>
			<Method methodClass="VBScript.IRegExpAbstract">Test:pMatch:</Method>
			<Method methodClass="UI.LayoutManager">layoutContainer:context:</Method>
			<Method methodClass="UI.Tests.LayoutManagerTest">layoutManagerClass</Method>
			<Method methodClass="UI.Scintilla.LexerMetadata">getDescription</Method>
			<Method methodClass="UI.Scintilla.LexerMetadata">name</Method>
			<Method methodClass="UI.LinearLayout">isVertical</Method>
			<Method methodClass="UI.LinearLayout">isVertical:</Method>
			<Method methodClass="Refactory.Browser.LintRule">isEmpty</Method>
			<Method methodClass="Refactory.Browser.LintRule">problemCount</Method>
			<Method methodClass="Refactory.Browser.LintRule">viewResults</Method>
			<Method methodClass="Refactory.Browser.TestData.LintRuleTestData">isEmpty</Method>
			<Method methodClass="Refactory.Browser.TestData.LintRuleTestData">problemCount</Method>
			<Method methodClass="Refactory.Browser.TestData.LintRuleTestData">viewResults</Method>
			<Method methodClass="UI.Tests.ListControlTest">newSelectionAfterLeftClickOutsideList:</Method>
			<Method methodClass="UI.Tests.ListControlTest">setupClickIntercept</Method>
			<Method methodClass="UI.Tests.ListControlTest">testNewSelectionsClickOutsideListWithModifiers</Method>
			<Method methodClass="UI.Tests.ListControlTest">verifyClicks:</Method>
			<Method methodClass="UI.ListControlView">basicAdd:atIndex:</Method>
			<Method methodClass="UI.ListControlView">basicClear</Method>
			<Method methodClass="UI.ListControlView">basicRefreshContents</Method>
			<Method methodClass="UI.ListControlView">basicRemoveAtIndex:</Method>
			<Method methodClass="UI.ListControlView">ensureSelectionVisible</Method>
			<Method methodClass="UI.ListControlView">getSelectionsByIndex</Method>
			<Method methodClass="UI.ListControlView">getSingleSelection</Method>
			<Method methodClass="UI.ListControlView">itemCount</Method>
			<Method methodClass="UI.ListControlView">itemFromPoint:</Method>
			<Method methodClass="UI.ListControlView">onItem:removedAtIndex:</Method>
			<Method methodClass="UI.ListControlView">refreshContents</Method>
			<Method methodClass="UI.ListControlView">setSingleSelection:</Method>
			<Method methodClass="UI.Tests.ListViewTest">sortSelections</Method>
			<Method methodClass="Core.Locale">amDesignator</Method>
			<Method methodClass="Core.Locale">basicLcid</Method>
			<Method methodClass="Core.Locale">code</Method>
			<Method methodClass="Core.Locale">dayNames</Method>
			<Method methodClass="Core.Locale">dayOfWeekAbbreviation:</Method>
			<Method methodClass="Core.Locale">dayOfWeekName:</Method>
			<Method methodClass="Core.Locale">dayOfWeekShortAbbreviation:</Method>
			<Method methodClass="Core.Locale">decimalPlaces</Method>
			<Method methodClass="Core.Locale">decimalSeparator</Method>
			<Method methodClass="Core.Locale">displayName</Method>
			<Method methodClass="Core.Locale">durationFormat</Method>
			<Method methodClass="Core.Locale">englishDisplayName</Method>
			<Method methodClass="Core.Locale">englishLanguageName</Method>
			<Method methodClass="Core.Locale">firstDayOfWeek</Method>
			<Method methodClass="Core.Locale">hasLeadingZero</Method>
			<Method methodClass="Core.Locale">infinity</Method>
			<Method methodClass="Core.Locale">isInstalled</Method>
			<Method methodClass="Core.Locale">iso639LanguageName</Method>
			<Method methodClass="Core.Locale">isValidLocale</Method>
			<Method methodClass="Core.Locale">lastTwoDigitYear</Method>
			<Method methodClass="Core.Locale">listSeparator</Method>
			<Method methodClass="Core.Locale">localizedDisplayName</Method>
			<Method methodClass="Core.Locale">longDateFormat</Method>
			<Method methodClass="Core.Locale">longTimeFormat</Method>
			<Method methodClass="Core.Locale">monthAbbreviation:</Method>
			<Method methodClass="Core.Locale">monthName:</Method>
			<Method methodClass="Core.Locale">monthNames</Method>
			<Method methodClass="Core.Locale">name</Method>
			<Method methodClass="Core.Locale">nameOfDay:</Method>
			<Method methodClass="Core.Locale">nan</Method>
			<Method methodClass="Core.Locale">nativeDigits</Method>
			<Method methodClass="Core.Locale">negativeInfinity</Method>
			<Method methodClass="Core.Locale">negativeNumberMode</Method>
			<Method methodClass="Core.Locale">negativeSign</Method>
			<Method methodClass="Core.Locale">numberGrouping</Method>
			<Method methodClass="Core.Locale">percentSymbol</Method>
			<Method methodClass="Core.Locale">pmDesignator</Method>
			<Method methodClass="Core.Locale">shortAmDesignator</Method>
			<Method methodClass="Core.Locale">shortDateFormat</Method>
			<Method methodClass="Core.Locale">shortPmDesignator</Method>
			<Method methodClass="Core.Locale">shortTimeFormat</Method>
			<Method methodClass="Core.Locale">tag</Method>
			<Method methodClass="Core.Locale">thousandSeparator</Method>
			<Method methodClass="Core.Locale">variantBool:</Method>
			<Method methodClass="Core.Locale">yearMonthFormat</Method>
			<Method methodClass="Core.Tests.LocaleTest">defaultSubject</Method>
			<Method methodClass="Core.Tests.LocaleTest">testDisplayFloatOn</Method>
			<Method methodClass="Core.Tests.LocaleTest">testName</Method>
			<Method methodClass="Core.Tests.LocaleTest">testPrintFloatGrouping</Method>
			<Method methodClass="Core.Tests.LocaleTest">testPrintFloatSeparators</Method>
			<Method methodClass="Core.Tests.LocaleTest">testTitlecaseString</Method>
			<Method methodClass="Core.Tests.LocaleTest">testUppercaseString</Method>
			<Method methodClass="OS.COM.LockBytesAbstract">contents</Method>
			<Method methodClass="OS.COM.LockBytesAbstract">copyBytesInto:from:to:</Method>
			<Method methodClass="OS.COM.LockBytesAbstract">replaceFrom:to:with:</Method>
			<Method methodClass="OS.COM.LockBytesAbstract">size</Method>
			<Method methodClass="Core.Magnitude">&lt;</Method>
			<Method methodClass="Core.Magnitude">=</Method>
			<Method methodClass="Core.Magnitude">hash</Method>
			<Method methodClass="OS.COM.MemberDesc">arguments</Method>
			<Method methodClass="OS.COM.MemberDesc">elemDesc</Method>
			<Method methodClass="OS.COM.MemberDesc">flags</Method>
			<Method methodClass="OS.COM.MemberDesc">getAllCustData</Method>
			<Method methodClass="OS.COM.MemberDesc">isRequestEdit</Method>
			<Method methodClass="OS.COM.MemberDesc">isRestricted</Method>
			<Method methodClass="OS.COM.MemberDesc">printIDLOn:indent:</Method>
			<Method methodClass="UI.MenuItem">acceleratorKey</Method>
			<Method methodClass="UI.MenuItem">acceleratorKey:</Method>
			<Method methodClass="UI.MenuItem">commandDescription</Method>
			<Method methodClass="UI.MenuItem">id</Method>
			<Method methodClass="UI.MenuItem">populateItemInfo:</Method>
			<Method methodClass="UI.MenuItem">text</Method>
			<Method methodClass="UI.MenuItem class">new</Method>
			<Method methodClass="Tools.MenuPainter">borderInset</Method>
			<Method methodClass="Tools.MenuPainter">calculateGeometry:</Method>
			<Method methodClass="Tools.MenuPainter">insertBefore:position:canvas:</Method>
			<Method methodClass="Tools.MenuPainter">itemHeight</Method>
			<Method methodClass="Tools.MenuPainter">itemRect:using:</Method>
			<Method methodClass="Tools.MenuPainter">menuColor</Method>
			<Method methodClass="Tools.MenuPainter">offsetForSubmenu:canvas:</Method>
			<Method methodClass="Tools.MenuPainter">paintItem:on:in:</Method>
			<Method methodClass="Tools.MenuPainter">paintSeparatorOn:in:</Method>
			<Method methodClass="UI.MessageBoxAbstract">areLinksParsed</Method>
			<Method methodClass="UI.MessageBoxAbstract">areLinksParsed:</Method>
			<Method methodClass="UI.MessageBoxAbstract">iconStyleFlag</Method>
			<Method methodClass="UI.MessageBoxAbstract">iconStyleFlag:</Method>
			<Method methodClass="UI.MessageBoxAbstract">open</Method>
			<Method methodClass="Core.MessageSendAbstract">receiver</Method>
			<Method methodClass="Core.MessageSendAbstract">receiver:</Method>
			<Method methodClass="Core.MessageSequenceAbstract">add:</Method>
			<Method methodClass="Core.MessageSequenceAbstract">forwardTo:</Method>
			<Method methodClass="Core.MessageSequenceAbstract">includes:</Method>
			<Method methodClass="Core.MessageSequenceAbstract">messages</Method>
			<Method methodClass="Core.MessageSequenceAbstract">removeMessagesFor:</Method>
			<Method methodClass="Core.MessageSequenceAbstract">valueWithArguments:</Method>
			<Method methodClass="OS.NMGETINFOTIP">cchTextMax</Method>
			<Method methodClass="OS.NMGETINFOTIP">pszText</Method>
			<Method methodClass="Core.Number">asFloat</Method>
			<Method methodClass="Core.Number">asFraction</Method>
			<Method methodClass="Core.Number">asVariant</Method>
			<Method methodClass="Kernel.ObjectRegistry">addAnsweringIndex:</Method>
			<Method methodClass="Kernel.ObjectRegistry">initialize:</Method>
			<Method methodClass="Kernel.ObjectRegistry">removeAtIndex:</Method>
			<Method methodClass="Smalltalk.OwnerDrawnButton">drawOn:</Method>
			<Method methodClass="Tools.PackageDependencyPresenter">childrenFor:</Method>
			<Method methodClass="Tools.PackageDependencyPresenter">dependentPackage</Method>
			<Method methodClass="Tools.PackageDependencyPresenter">prerequisitePackage</Method>
			<Method methodClass="UI.Examples.PlayShape">drawOn:</Method>
			<Method methodClass="External.POINT">x</Method>
			<Method methodClass="External.POINT">x:</Method>
			<Method methodClass="External.POINT">y</Method>
			<Method methodClass="External.POINT">y:</Method>
			<Method methodClass="UI.Tests.PresenterTest">classToTest</Method>
			<Method methodClass="Security.ProductProtector">decryptClasses:</Method>
			<Method methodClass="Security.ProductProtector">encryptClasses:</Method>
			<Method methodClass="Smalltalk.ProfilerListsPresenter">items</Method>
			<Method methodClass="Smalltalk.ProfilerListsPresenter">reportIdentityOf:to:</Method>
			<Method methodClass="Smalltalk.ProfilerListsPresenter">reportItems</Method>
			<Method methodClass="Smalltalk.ProfilerListsPresenter">reportTitleTo:</Method>
			<Method methodClass="Smalltalk.ProfilerPresenter">filterDolphin:</Method>
			<Method methodClass="Smalltalk.ProfilerPresenter">filterPercentage:</Method>
			<Method methodClass="Smalltalk.ProfilerPresenter">filterSelector:</Method>
			<Method methodClass="Smalltalk.ProfilerPresenter">selectionOrNil</Method>
			<Method methodClass="Smalltalk.ProfilerTreesPresenter">total</Method>
			<Method methodClass="Smalltalk.ProfilerTreesPresenter">treeValueFor:</Method>
			<Method methodClass="Security.ProtectedProductSerialNumber class">instanceDecodingKey</Method>
			<Method methodClass="Security.ProtectedProductSerialNumber class">lockedMethodDecodingKey</Method>
			<Method methodClass="Security.ProtectedProductSerialNumber class">lockedMethodDecodingKeyHash</Method>
			<Method methodClass="UI.ProtectedProductSessionManager">encryptedPackageNames</Method>
			<Method methodClass="UI.ProtectedProductSessionManager">productRegistrationKey</Method>
			<Method methodClass="UI.ProtectedProductSessionManager">serialNumberClass</Method>
			<Method methodClass="Core.Random">next</Method>
			<Method methodClass="Core.Random">peek</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">allClassVariableNames</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">allImports</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">baseEnvironment</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">basicEnvironment</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">bindingOrNil</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">directlyDefinesClassVariable:</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">directlyImportsNamespace:</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">fullName</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">fullyQualifiedReference</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">isDefined</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">isMeta</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">localBindingFor:</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">localScope</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">metaclass</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">model</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">nearestRealClass</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">nonMetaclass</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">realClass</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">subclasses</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">superclass</Method>
			<Method methodClass="Refactory.Browser.RBAbstractClass">unqualifiedName</Method>
			<Method methodClass="Refactory.Browser.RBAbstractCondition">check</Method>
			<Method methodClass="Refactory.Browser.RBReplaceRule">foundMatchFor:</Method>
			<Method methodClass="Refactory.Browser.RBSourceFormatter">formatArray:</Method>
			<Method methodClass="Refactory.Browser.RBSourceFormatter">formatMethodBodyFor:</Method>
			<Method methodClass="Refactory.Browser.RBSourceFormatter">formatMethodPatternFor:</Method>
			<Method methodClass="Refactory.Browser.RBSourceFormatter">formatStatementCommentsFor:</Method>
			<Method methodClass="Refactory.Browser.RBSourceFormatter">newLine</Method>
			<Method methodClass="External.RECT">bottom</Method>
			<Method methodClass="External.RECT">bottom:</Method>
			<Method methodClass="External.RECT">left</Method>
			<Method methodClass="External.RECT">left:</Method>
			<Method methodClass="External.RECT">right</Method>
			<Method methodClass="External.RECT">right:</Method>
			<Method methodClass="External.RECT">top</Method>
			<Method methodClass="External.RECT">top:</Method>
			<Method methodClass="External.RECT class">left:top:right:bottom:</Method>
			<Method methodClass="Refactory.Browser.Refactoring">preconditions</Method>
			<Method methodClass="Refactory.Browser.Refactoring">transform</Method>
			<Method methodClass="Tools.RefactoringTool">queryCommand:command:</Method>
			<Method methodClass="Tools.RefactoringTool">renameItCommand</Method>
			<Method methodClass="Refactory.Browser.RefactoryChange">executeNotifying:</Method>
			<Method methodClass="Refactory.Browser.RefactoryClassChange">asUndoOperation</Method>
			<Method methodClass="Refactory.Browser.RefactoryClassChange">primitiveExecute</Method>
			<Method methodClass="Refactory.Browser.RefactoryVariableChange">changeStringFormat</Method>
			<Method methodClass="Refactory.Browser.RefactoryVariableChange">changeSymbol</Method>
			<Method methodClass="OS.RegKeyAbstract">associationAt:ifAbsent:</Method>
			<Method methodClass="OS.RegKeyAbstract">at:ifAbsent:</Method>
			<Method methodClass="OS.RegKeyAbstract">at:put:</Method>
			<Method methodClass="OS.RegKeyAbstract">fileOutOn:</Method>
			<Method methodClass="OS.RegKeyAbstract">includesKey:</Method>
			<Method methodClass="OS.RegKeyAbstract">keysAndValuesDo:</Method>
			<Method methodClass="OS.RegKeyAbstract">keysDo:</Method>
			<Method methodClass="OS.RegKeyAbstract">removeAssociationAt:ifAbsent:</Method>
			<Method methodClass="OS.RegKeyAbstract">removeKey:ifAbsent:</Method>
			<Method methodClass="OS.RegKeyAbstract">size</Method>
			<Method methodClass="OS.RegKeyAbstract">subKeys</Method>
			<Method methodClass="OS.RegKeyAbstract">subValues</Method>
			<Method methodClass="Refactory.Browser.RenameVariableChange">renameVariable</Method>
			<Method methodClass="Smalltalk.ResourceAccessor">loadWithContext:forEdit:</Method>
			<Method methodClass="Smalltalk.ResourceAccessor">save:as:</Method>
			<Method methodClass="Smalltalk.ResourceSTBAccessor">byteArray</Method>
			<Method methodClass="Smalltalk.ResourceSTBAccessor">readStream</Method>
			<Method methodClass="External.SCALAR">value</Method>
			<Method methodClass="External.SCALAR">value:</Method>
			<Method methodClass="Core.SearchPolicy">compare:with:</Method>
			<Method methodClass="Core.Tests.SearchPolicyTest">policyClass</Method>
			<Method methodClass="UI.SelectableItemsPresenter">selectableItems</Method>
			<Method methodClass="UI.SelectionChangeEvent">canIntercept</Method>
			<Method methodClass="UI.SelectionChangeEvent">value</Method>
			<Method methodClass="Core.SequenceableCollection">at:</Method>
			<Method methodClass="Core.SequenceableCollection">at:put:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">add:afterIndex:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">removeAll</Method>
			<Method methodClass="Core.SequencedGrowableCollection">removeAtIndex:</Method>
			<Method methodClass="Core.SequencedStream">contents</Method>
			<Method methodClass="Core.SequencedStream">locale:</Method>
			<Method methodClass="Core.SequencedStream">position</Method>
			<Method methodClass="Core.SequencedStream">position:</Method>
			<Method methodClass="Core.SequencedStream">setToEnd</Method>
			<Method methodClass="Security.SerialNumberProtector">dataFromString:</Method>
			<Method methodClass="Security.SerialNumberProtector">decrypt:</Method>
			<Method methodClass="Security.SerialNumberProtector">encrypt:</Method>
			<Method methodClass="Security.SerialNumberProtector">stringFromData:</Method>
			<Method methodClass="Core.SessionManager">basicTertiaryStartup</Method>
			<Method methodClass="Core.SessionManager">startUI</Method>
			<Method methodClass="Tools.SharedVariableChange">asUndoOperation</Method>
			<Method methodClass="Tools.SharedVariableChange">primitiveExecute</Method>
			<Method methodClass="Kernel.SingletonSearchPolicy">name</Method>
			<Method methodClass="External.SIZE">height</Method>
			<Method methodClass="External.SIZE">height:</Method>
			<Method methodClass="External.SIZE">width</Method>
			<Method methodClass="External.SIZE">width:</Method>
			<Method methodClass="Tools.SmalltalkStyler">initialBinaryStyle:</Method>
			<Method methodClass="Tools.SmalltalkStyler">initialKeywordStyle</Method>
			<Method methodClass="Tools.SmalltalkStyler">initialUnaryStyle</Method>
			<Method methodClass="Core.SortAlgorithm">insertionSort:from:to:</Method>
			<Method methodClass="Core.SortAlgorithm">sift:from:between:and:</Method>
			<Method methodClass="Core.SortAlgorithm">sort:from:to:</Method>
			<Method methodClass="Core.SortAlgorithm">sortBlock</Method>
			<Method methodClass="Core.SortAlgorithm class">newSortBlock:</Method>
			<Method methodClass="Core.Tests.SortAlgorithmTest">algorithmToTest</Method>
			<Method methodClass="Kernel.SourceFiler">emitCategoriesOfClass:</Method>
			<Method methodClass="Kernel.SourceFiler">emitCategoriesOfMethod:</Method>
			<Method methodClass="Kernel.SourceFiler">emitComment:</Method>
			<Method methodClass="Kernel.SourceFiler">emitFileOutHeader</Method>
			<Method methodClass="Kernel.SourceFiler">emitGUIDOfClass:</Method>
			<Method methodClass="Kernel.SourceFiler">emitMethod:</Method>
			<Method methodClass="Kernel.SourceFiler">emitPackageBinaryVariables:</Method>
			<Method methodClass="Kernel.SourceFiler">emitPackageDescription:</Method>
			<Method methodClass="Kernel.SourceFiler">fileIn</Method>
			<Method methodClass="Kernel.SourceFiler">fileOutAttributesOfClass:</Method>
			<Method methodClass="Kernel.SourceFiler">fileOutBasicDefinitionOfClass:</Method>
			<Method methodClass="Kernel.SourceFiler">fileOutExpression:</Method>
			<Method methodClass="Kernel.SourceFiler">fileOutMessages:ofBehavior:</Method>
			<Method methodClass="Kernel.SourceFiler">fileOutProtocols:ofBehavior:</Method>
			<Method methodClass="Kernel.SourceFiler">fileOutResource:</Method>
			<Method methodClass="Kernel.SourceFiler">getSourceFromDescriptor:</Method>
			<Method methodClass="Kernel.SourceFiler">storeCommentString:forClass:</Method>
			<Method methodClass="Kernel.SourceFiler">storeCommentString:forPackage:</Method>
			<Method methodClass="Kernel.SourceFiler">storeSource:for:</Method>
			<Method methodClass="Kernel.SourceFiler">storeSourceString:forMethod:</Method>
			<Method methodClass="Kernel.SourceFiler class">fileOutExtensionForClass:</Method>
			<Method methodClass="Kernel.StAbstractVariableNode">lookupInScope:</Method>
			<Method methodClass="Kernel.StAbstractVariableNode">name</Method>
			<Method methodClass="UI.StaticImage">setImage:</Method>
			<Method methodClass="UI.StatusBarItemAbstract">drawItem:bounding:</Method>
			<Method methodClass="Kernel.STBFiler">register:</Method>
			<Method methodClass="Kernel.STBFiler">setRefOffset:</Method>
			<Method methodClass="OS.StdioFileStream">contentsSpecies</Method>
			<Method methodClass="OS.StdioFileStream">externalType</Method>
			<Method methodClass="OS.StdioFileStream">next</Method>
			<Method methodClass="OS.StdioFileStream">next:putAll:startingAt:</Method>
			<Method methodClass="OS.StdioFileStream">peek</Method>
			<Method methodClass="OS.StdioFileStream">peekFor:</Method>
			<Method methodClass="OS.StdioFileStream class">encodingMode</Method>
			<Method methodClass="OS.StdioTextFileStream">getString:</Method>
			<Method methodClass="Kernel.StLiteralNode">value</Method>
			<Method methodClass="Kernel.StLiteralNode">valueClass</Method>
			<Method methodClass="Kernel.StLocalVariable">category</Method>
			<Method methodClass="Kernel.StProgramNode">acceptVisitor:</Method>
			<Method methodClass="Kernel.StProgramNode">start</Method>
			<Method methodClass="Kernel.StProgramNode">stop</Method>
			<Method methodClass="Core.Stream">atEnd</Method>
			<Method methodClass="Core.Tests.StreamTest">streamClass</Method>
			<Method methodClass="Core.String">codePointsDo:</Method>
			<Method methodClass="Core.String">decodeAt:</Method>
			<Method methodClass="Core.String">decodeNextFrom:</Method>
			<Method methodClass="Core.String">encodedSizeAt:</Method>
			<Method methodClass="Core.String">encodeOn:put:</Method>
			<Method methodClass="Core.String">nextIndexOfCharacter:from:to:</Method>
			<Method methodClass="Core.String class">characterForCodeUnit:</Method>
			<Method methodClass="Core.Tests.StringTest">assimilateString:</Method>
			<Method methodClass="Kernel.StSemanticScope">category</Method>
			<Method methodClass="Kernel.StSemanticScope">outer</Method>
			<Method methodClass="Kernel.StSemanticScope">resolveVariable:</Method>
			<Method methodClass="Kernel.StSpecialVariableNode">valueClassIn:</Method>
			<Method methodClass="Kernel.StTagNode">selector</Method>
			<Method methodClass="Kernel.StToken">acceptVisitor:</Method>
			<Method methodClass="Kernel.StToken">length</Method>
			<Method methodClass="Kernel.Tests.StTokenTest">subjectClass</Method>
			<Method methodClass="Kernel.StValueNode">needsParenthesis</Method>
			<Method methodClass="Kernel.StValueNode">startWithoutParentheses</Method>
			<Method methodClass="Kernel.StValueNode">stopWithoutParentheses</Method>
			<Method methodClass="Kernel.Tests.StValueTokenTest">exampleSource</Method>
			<Method methodClass="Kernel.StVariable">name</Method>
			<Method methodClass="UI.Scintilla.Styler">colorText:in:startingAt:</Method>
			<Method methodClass="Smalltalk.SUnitAbsModel class">configurationClass</Method>
			<Method methodClass="Kernel.Tests.SystemNamespaceTest">subject</Method>
			<Method methodClass="Kernel.Tests.SystemNamespaceTest">testAbsoluteNameOfIdentifier</Method>
			<Method methodClass="Kernel.Tests.SystemNamespaceTest">testAllEnvironments</Method>
			<Method methodClass="Kernel.Tests.SystemNamespaceTest">testEnvironment</Method>
			<Method methodClass="Kernel.Tests.SystemNamespaceTest">testIncludesKey</Method>
			<Method methodClass="Smalltalk.TestCaseProtocol">canonicalObject</Method>
			<Method methodClass="XProgramming.SUnit.TestRunLogger">finishedCase:</Method>
			<Method methodClass="XProgramming.SUnit.TestRunLogger">finishedRun:knownSlowTests:</Method>
			<Method methodClass="UI.ToolbarItem">imageIndexIn:</Method>
			<Method methodClass="UI.ToolbarItem">style</Method>
			<Method methodClass="UI.ToolbarItem">textIndexIn:</Method>
			<Method methodClass="UI.TreeModelAbstract">add:asChildOf:</Method>
			<Method methodClass="UI.TreeModelAbstract">basicRoots:</Method>
			<Method methodClass="UI.TreeModelAbstract">clear</Method>
			<Method methodClass="UI.TreeModelAbstract">collapse:ifAbsent:</Method>
			<Method methodClass="UI.TreeModelAbstract">getChildrenOf:</Method>
			<Method methodClass="UI.TreeModelAbstract">move:asChildOf:</Method>
			<Method methodClass="UI.TreeModelAbstract">parentOf:</Method>
			<Method methodClass="UI.TreeModelAbstract">remove:ifAbsent:</Method>
			<Method methodClass="UI.TreeModelAbstract">roots</Method>
			<Method methodClass="UI.TypeConverter">leftToRight:</Method>
			<Method methodClass="UI.TypeConverter">rightToLeft:</Method>
			<Method methodClass="OS.COM.TypeInfoAnalyzer">baseClass</Method>
			<Method methodClass="OS.COM.TypeInfoAnalyzer">printClassCommentPreambleOn:</Method>
			<Method methodClass="OS.COM.TypeInfoAnalyzer class">typekind</Method>
			<Method methodClass="OS.COM.TypeInfoObject">attributes</Method>
			<Method methodClass="OS.COM.TypeInfoObject">basicName</Method>
			<Method methodClass="OS.COM.TypeInfoObject">binding</Method>
			<Method methodClass="OS.COM.TypeInfoObject">documentation</Method>
			<Method methodClass="OS.COM.TypeInfoObject">fullyQualifiedName</Method>
			<Method methodClass="OS.COM.TypeInfoObject">idlKeyword</Method>
			<Method methodClass="OS.COM.TypeInfoObject">isInstalled</Method>
			<Method methodClass="OS.COM.TypeInfoObject">packageCheck:</Method>
			<Method methodClass="OS.COM.TypeInfoObject">realize</Method>
			<Method methodClass="OS.COM.TypeInfoStructure">name</Method>
			<Method methodClass="OS.COM.TypeInfoStructure">tdesc</Method>
			<Method methodClass="Core.UtfEncodedString">before:ifAbsent:</Method>
			<Method methodClass="Core.UtfEncodedString">bom</Method>
			<Method methodClass="Core.UtfEncodedString">encodedAt:put:</Method>
			<Method methodClass="Core.UtfEncodedString">encodedSizeOf:</Method>
			<Method methodClass="Core.UtfEncodedString">isLeadCodeUnit:</Method>
			<Method methodClass="Core.UtfEncodedString">maxEncoding</Method>
			<Method methodClass="Core.UtfEncodedString class">codePage</Method>
			<Method methodClass="Core.Tests.UtfEncodedStringTest">decodeIncompleteContinuations</Method>
			<Method methodClass="Core.Tests.UtfEncodedStringTest">decodeInvalidContinuations</Method>
			<Method methodClass="Core.Tests.UtfEncodedStringTest">decodeTestCases</Method>
			<Method methodClass="UI.ValueAdaptor">displayOn:</Method>
			<Method methodClass="UI.ValueConvertingControlView">displayValue</Method>
			<Method methodClass="UI.ValueConvertingControlView">displayValue:</Method>
			<Method methodClass="UI.ValueModel">setValue:</Method>
			<Method methodClass="UI.ValueModel">value</Method>
			<Method methodClass="Refactory.Browser.VariableRefactoring class">displayPrefix</Method>
			<Method methodClass="Graphics.VirtualColor">actualColor</Method>
			<Method methodClass="Tools.VirtualMethodCategory">includesMethod:</Method>
			<Method methodClass="Smalltalk.XMLNode">printXMLOn:</Method>
			<Method methodClass="Smalltalk.XMLParser">attribute:value:</Method>
			<Method methodClass="Smalltalk.XMLParser">beginStartTag:asPI:</Method>
			<Method methodClass="Smalltalk.XMLParser">endStartTag:</Method>
			<Method methodClass="Smalltalk.XMLParser">endTag:</Method>
			<Method methodClass="Smalltalk.XMLParser">text:</Method>
		</StripMethods>
		<StripMethods reason="examples">
			<Method methodClass="ADODB._Recordset class">example1</Method>
			<Method methodClass="Graphics.Gdiplus.AdjustableArrowCap class">exampleGdipAACArrowCap</Method>
			<Method methodClass="UI.AXControlSite class">example1</Method>
			<Method methodClass="UI.AXControlSite class">example2</Method>
			<Method methodClass="UI.AXControlSite class">example3</Method>
			<Method methodClass="Graphics.Gdiplus.Bitmap class">exampleGdipBFromBitmap</Method>
			<Method methodClass="Graphics.Gdiplus.Bitmap class">exampleGdipBFromByteArray</Method>
			<Method methodClass="Graphics.Gdiplus.Bitmap class">exampleGdipBFromDIB</Method>
			<Method methodClass="Graphics.Gdiplus.Bitmap class">exampleGdipBFromXPIcon</Method>
			<Method methodClass="Graphics.Gdiplus.Bitmap class">exampleGdipBResize1</Method>
			<Method methodClass="Graphics.Gdiplus.Bitmap class">exampleGdipBResize2</Method>
			<Method methodClass="Graphics.Gdiplus.Bitmap class">exampleGdipBResize3</Method>
			<Method methodClass="Graphics.Gdiplus.Bitmap class">exampleLockBitsTest1Bmp</Method>
			<Method methodClass="Graphics.Gdiplus.Bitmap class">exampleLockBitsTest2Bmp</Method>
			<Method methodClass="Graphics.Gdiplus.CachedBitmap class">exampleGdipCBPerformance</Method>
			<Method methodClass="UI.Examples.Calculator class">icon</Method>
			<Method methodClass="Kernel.Tests.CompiledMethodTest">returnPlusOne:</Method>
			<Method methodClass="Kernel.Tests.CompiledMethodTest">returnTrue</Method>
			<Method methodClass="Kernel.Continuation class">factorialExample:</Method>
			<Method methodClass="OS.Crypt32Library class">example1</Method>
			<Method methodClass="Graphics.Gdiplus.CustomLineCap class">exampleGdipCLCStrokeCaps</Method>
			<Method methodClass="Security.DigitalSignatureAlgorithm class">example</Method>
			<Method methodClass="Security.DigitalSignatureAlgorithm class">testKeySet512</Method>
			<Method methodClass="Security.DigitalSignatureAlgorithm class">testKeySet768</Method>
			<Method methodClass="Graphics.Gdiplus.Font class">exampleGdipFontHeight</Method>
			<Method methodClass="Graphics.Gdiplus.FontFamily class">exampleGdipFFClone</Method>
			<Method methodClass="UI.FramingLayout class">example1</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusBase class">fileResource</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusBase class">showExample:</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusBase class">showExample:viewMode:</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGAlphaBlending</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGCropAndScale</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGDrawingALine</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGDrawingAString</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGDrawingShapes</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGFromCanvas</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGMeasureString</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGRotate</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGTransformations</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipGTransformPoints</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipNestedContainers</Method>
			<Method methodClass="Graphics.Gdiplus.GdiplusGraphics class">exampleGdipState</Method>
			<Method methodClass="Graphics.Gdiplus.HatchBrush class">exampleGdipHBFillAShape</Method>
			<Method methodClass="Graphics.Gdiplus.HatchBrush class">exampleGdipHBFillAString</Method>
			<Method methodClass="Graphics.Gdiplus.HatchBrush class">exampleGdipHBStyles</Method>
			<Method methodClass="WinHttpServer.HttpApiLibrary class">example1</Method>
			<Method methodClass="WinHttpServer.HttpApiLibrary class">example3</Method>
			<Method methodClass="WinHttpServer.HttpApiLibrary class">example4</Method>
			<Method methodClass="WinHttpServer.HttpApiLibrary class">example6</Method>
			<Method methodClass="WinHttpServer.HttpApiLibrary class">example7</Method>
			<Method methodClass="WinHttpServer.HttpApiLibrary class">example8</Method>
			<Method methodClass="WinHttpServer.HttpApiLibrary class">querySslCertInfo</Method>
			<Method methodClass="WinHttpServer.HttpApiLibrary class">queryUrlAclInfo</Method>
			<Method methodClass="OS.COM.ICatRegister class">example1</Method>
			<Method methodClass="OS.COM.IDispatch class">example1</Method>
			<Method methodClass="OS.COM.IDispatch class">example2</Method>
			<Method methodClass="OS.COM.IDispatch class">example3</Method>
			<Method methodClass="OS.COM.IDispatch class">example4</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIDecoderFileExtensions</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIDecoders</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIEncoderClsid</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIEncoderFileExtensions</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIEncoderParameters</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIEncoders</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIEncoderValues</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIFlags</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIInterpMode</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIJPEGCompression</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipILoadImage</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipILoadImages</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipILosslessRotation</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIMetadata</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIMetadata2</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIMultiFrame</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIMultiFrame2</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIMultiFrame3</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIPrinting1</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIPrinting2</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIPrinting3</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIPrinting4LabeledToAPage</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIPropertiesCopy</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIPropertyItem</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIPropertyItems</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipISaveFrames</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipISkewing</Method>
			<Method methodClass="Graphics.Gdiplus.Image class">exampleGdipIThumbnails</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleColorBars1</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleColorBars2</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleColorBars3</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleColorBars4</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleColorKeyTest</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIAAlphaBlending</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIAColorKey</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIAColorMatrix</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIAColorRemap</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIAGamma</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIAOutputChannel</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIAScaleColors</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIAShearColors</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIAThreshold</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleGdipIATranslateColors</Method>
			<Method methodClass="Graphics.Gdiplus.ImageAttributes class">exampleRemapInput</Method>
			<Method methodClass="Graphics.Gdiplus.InstalledFontCollection class">exampleGdipIFCEnumerating</Method>
			<Method methodClass="OS.ITEMIDLIST class">exampleCopying</Method>
			<Method methodClass="OS.ITEMIDLIST class">exampleWalkID:</Method>
			<Method methodClass="OS.ITEMIDLIST class">exampleWalking</Method>
			<Method methodClass="OS.ITEMIDLIST class">exampleWalkPath:</Method>
			<Method methodClass="Graphics.Gdiplus.LinearGradientBrush class">exampleGdipLGChangingColors</Method>
			<Method methodClass="Graphics.Gdiplus.LinearGradientBrush class">exampleGdipLGCustom</Method>
			<Method methodClass="Graphics.Gdiplus.LinearGradientBrush class">exampleGdipLGDiagonal</Method>
			<Method methodClass="Graphics.Gdiplus.LinearGradientBrush class">exampleGdipLGHorizontal</Method>
			<Method methodClass="Graphics.Gdiplus.LinearGradientBrush class">exampleGdipLGModeConstants</Method>
			<Method methodClass="Graphics.Gdiplus.LinearGradientBrush class">exampleGdipLGTiling</Method>
			<Method methodClass="Graphics.Gdiplus.Matrix class">exampleGdipMShadows</Method>
			<Method methodClass="Graphics.Gdiplus.Matrix class">exampleGdipMShear</Method>
			<Method methodClass="Graphics.Gdiplus.Matrix class">exampleGdipMTranslate</Method>
			<Method methodClass="UI.MultilineTextEditWithImage class">example1</Method>
			<Method methodClass="Graphics.Gdiplus.Path class">exampleGdipGPCreatingFigures</Method>
			<Method methodClass="Graphics.Gdiplus.Path class">exampleGdipGPFillingFigures</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGBlendColors</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGBlendFactors</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGBounds</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGCenterColor</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGCenterPoint</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGFocusScales</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGGamma</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGMultiply</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGScale</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGSurroundColors</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGSurroundColors2</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGTransform</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGTranslate</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">exampleGdipPGWrapMode</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">examplesWorkspace</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">rgb</Method>
			<Method methodClass="Graphics.Gdiplus.PathGradientBrush class">triangle</Method>
			<Method methodClass="Security.PC1Cipher class">example1</Method>
			<Method methodClass="Security.PC1Cipher class">example2</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">exampleGdipPAttributes</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">exampleGdipPCompoundArray</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">exampleGdipPCustomCaps</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">exampleGdipPDashCap</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">exampleGdipPDashPattern</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">exampleGdipPDrawing</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">exampleGdipPFillWithTexture</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">exampleGdipPJoiningLines</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">exampleGdipPLineCaps</Method>
			<Method methodClass="Graphics.Gdiplus.Pen class">examplesWorkspace</Method>
			<Method methodClass="UI.ProgressDialog class">example1</Method>
			<Method methodClass="UI.ProgressDialog class">example2</Method>
			<Method methodClass="UI.ProgressDialog class">example3</Method>
			<Method methodClass="Core.Random">chiSquareTest:max:</Method>
			<Method methodClass="Graphics.Gdiplus.Region class">exampleClippingSimple</Method>
			<Method methodClass="Graphics.Gdiplus.Region class">exampleClippingSimple2</Method>
			<Method methodClass="Graphics.Gdiplus.Region class">exampleGdipRClipWithRegion</Method>
			<Method methodClass="Graphics.Gdiplus.Region class">exampleGdipRHitTesting</Method>
			<Method methodClass="Security.SecureHashAlgorithm class">example</Method>
			<Method methodClass="Security.SecureHashAlgorithm class">example2</Method>
			<Method methodClass="UI.SlideyInneyOuteyThing class">example1</Method>
			<Method methodClass="Graphics.Gdiplus.SolidBrush class">exampleGdipDropShadow</Method>
			<Method methodClass="Graphics.Gdiplus.SolidBrush class">exampleGdipSBFillAShape</Method>
			<Method methodClass="Graphics.Gdiplus.StringFormat class">exampleGdipSFFormatText</Method>
			<Method methodClass="Graphics.Gdiplus.StringFormat class">exampleGdipSFGenerics</Method>
			<Method methodClass="Graphics.Gdiplus.StringFormat class">exampleGdipSFTabs</Method>
			<Method methodClass="Graphics.Gdiplus.StringFormat class">exampleGdipSFTrimming</Method>
			<Method methodClass="Graphics.Gdiplus.TextureBrush class">exampleGdipTBFillAShape</Method>
			<Method methodClass="Graphics.Gdiplus.TextureBrush class">exampleGdipTBTilingAShape</Method>
			<Method methodClass="OS.COM.TypeInfoObject class">guidClashSignal</Method>
			<Method methodClass="OS.COM.TypeInfoObject class">namespaceClashSignal</Method>
			<Method methodClass="OS.COM.TypeLibraryAnalyzer class">example1</Method>
			<Method methodClass="OS.COM.TypeLibraryAnalyzer class">example2</Method>
			<Method methodClass="OS.COM.TypeLibraryAnalyzer class">example3</Method>
			<Method methodClass="OS.COM.TypeLibraryAnalyzer class">superclassClashSignal</Method>
			<Method methodClass="OS.COM.VARIANT class">example1</Method>
			<Method methodClass="Smalltalk.XMLDOMParser class">addressBookXMLWithDTD</Method>
			<Method methodClass="Smalltalk.XMLTokenizer class">addressBookXML</Method>
			<Method methodClass="Smalltalk.XMLTokenizer class">addressBookXMLWithDTD</Method>
			<Method methodClass="Smalltalk.XMLTokenizer class">exampleAddressBook</Method>
			<Method methodClass="Smalltalk.XMLTokenizer class">exampleAddressBookWithDTD</Method>
		</StripMethods>
	</ForcedStripMethods>
	<RedundantPackages>
		<Package>ActiveX (Deprecated)</Package>
		<Package>ActiveX (Old Names)</Package>
		<Package>ActiveX Automation</Package>
		<Package>ActiveX Automation Development</Package>
		<Package>ActiveX Automation Tests</Package>
		<Package>ActiveX Categories</Package>
		<Package>ActiveX Connection Points</Package>
		<Package>ActiveX Connection Points Tests</Package>
		<Package>ActiveX Control Hosting</Package>
		<Package>ActiveX DLL Server Kit</Package>
		<Package>ActiveX Property Bags</Package>
		<Package>ActiveX Scripting</Package>
		<Package>ADODB</Package>
		<Package>ADODB (Old Names)</Package>
		<Package>ADODB Tests</Package>
		<Package>Animals</Package>
		<Package>Application Deployment Kit</Package>
		<Package>Autoplay</Package>
		<Package>Better Hello World</Package>
		<Package>Bouncing Balls</Package>
		<Package>Calculator</Package>
		<Package>Calculator (Console)</Package>
		<Package>Catenate</Package>
		<Package>CDO</Package>
		<Package>Chat</Package>
		<Package>COM Examples</Package>
		<Package>COM Random Stream</Package>
		<Package>Common Controls Library</Package>
		<Package>Continuation Tests</Package>
		<Package>CS ANSI Tests</Package>
		<Package>CSRefactorings</Package>
		<Package>Database Connection</Package>
		<Package>Database Connection (Deprecated)</Package>
		<Package>Database Connection Base</Package>
		<Package>Database Tests</Package>
		<Package>Debug Trace Stream</Package>
		<Package>Development System</Package>
		<Package>Development System (Deprecated)</Package>
		<Package>Development System Tests</Package>
		<Package>Diff Algorithm</Package>
		<Package>Dolphin Accelerator Presenter</Package>
		<Package>Dolphin Additional Sort Algorithms</Package>
		<Package>Dolphin Announcements</Package>
		<Package>Dolphin Announcements Tests</Package>
		<Package>Dolphin Anonymous Classes</Package>
		<Package>Dolphin Base (Deprecated)</Package>
		<Package>Dolphin Base (Old Names)</Package>
		<Package>Dolphin Base Dialogs</Package>
		<Package>Dolphin Base Icons</Package>
		<Package>Dolphin Base Tests</Package>
		<Package>Dolphin Base64</Package>
		<Package>Dolphin Base64 Tests</Package>
		<Package>Dolphin Basic Geometry</Package>
		<Package>Dolphin Boolean Presenter</Package>
		<Package>Dolphin Browser Environments</Package>
		<Package>Dolphin Card Containers</Package>
		<Package>Dolphin Change Objects</Package>
		<Package>Dolphin Check Buttons</Package>
		<Package>Dolphin Choice Presenter</Package>
		<Package>Dolphin Choice Prompter</Package>
		<Package>Dolphin Collection Arithmetic</Package>
		<Package>Dolphin Collection Presenters</Package>
		<Package>Dolphin Color Presenter</Package>
		<Package>Dolphin Command-line Parser</Package>
		<Package>Dolphin Common Controls</Package>
		<Package>Dolphin Common Dialogs</Package>
		<Package>Dolphin Common Print Dialog</Package>
		<Package>Dolphin Community Edition Tools</Package>
		<Package>Dolphin Conformant Array Fields</Package>
		<Package>Dolphin Continuations</Package>
		<Package>Dolphin Control Bars</Package>
		<Package>Dolphin CRT Random Stream</Package>
		<Package>Dolphin Date Time Controls</Package>
		<Package>Dolphin Date Time Presenters</Package>
		<Package>Dolphin Differences Presenter</Package>
		<Package>Dolphin Document Presenter</Package>
		<Package>Dolphin File System Info</Package>
		<Package>Dolphin File System Watcher</Package>
		<Package>Dolphin Find Dialog</Package>
		<Package>Dolphin Folder Presenter</Package>
		<Package>Dolphin Folder Tree Model</Package>
		<Package>Dolphin Font Presenter</Package>
		<Package>Dolphin GDI Graphics</Package>
		<Package>Dolphin GDI Graphics Tests</Package>
		<Package>Dolphin GroupBox</Package>
		<Package>Dolphin IDE Extension Example</Package>
		<Package>Dolphin IDE Tests</Package>
		<Package>Dolphin Image Presenter</Package>
		<Package>Dolphin In-place Text Editor</Package>
		<Package>Dolphin Integer Prompter</Package>
		<Package>Dolphin Key-Value Prompter</Package>
		<Package>Dolphin Legacy Date &amp; Time</Package>
		<Package>Dolphin Legacy Document Presenter</Package>
		<Package>Dolphin Legacy Package Support</Package>
		<Package>Dolphin Legacy Resource Framework</Package>
		<Package>Dolphin List Models</Package>
		<Package>Dolphin List Presenter</Package>
		<Package>Dolphin List Tree Presenter</Package>
		<Package>Dolphin Literal Filer Tests</Package>
		<Package>Dolphin Memory-Mapped Files</Package>
		<Package>Dolphin Message Box</Package>
		<Package>Dolphin Message Box Tests</Package>
		<Package>Dolphin Metafile Records</Package>
		<Package>Dolphin Metafiles</Package>
		<Package>Dolphin MMF Tests</Package>
		<Package>Dolphin MoenTree View</Package>
		<Package>Dolphin MVP (Deprecated)</Package>
		<Package>Dolphin MVP (Old Names)</Package>
		<Package>Dolphin MVP Base</Package>
		<Package>Dolphin MVP Tests</Package>
		<Package>Dolphin MVP Tests (Deprecated)</Package>
		<Package>Dolphin Number Presenter</Package>
		<Package>Dolphin Overlapped IO</Package>
		<Package>Dolphin Products</Package>
		<Package>Dolphin Professional Tools</Package>
		<Package>Dolphin Progress Dialog</Package>
		<Package>Dolphin Prompter</Package>
		<Package>Dolphin Push Buttons</Package>
		<Package>Dolphin Radio Buttons</Package>
		<Package>Dolphin Random Stream</Package>
		<Package>Dolphin Random Stream Tests</Package>
		<Package>Dolphin Recent Menu</Package>
		<Package>Dolphin Refactoring Browser</Package>
		<Package>Dolphin Registry Access</Package>
		<Package>Dolphin Registry Access Tests</Package>
		<Package>Dolphin Registry Serialisation</Package>
		<Package>Dolphin Rich Text Presenter</Package>
		<Package>Dolphin Scintilla View</Package>
		<Package>Dolphin Scintilla View (Deprecated)</Package>
		<Package>Dolphin Scintilla View (Old Names)</Package>
		<Package>Dolphin Scintilla View Tests</Package>
		<Package>Dolphin Scrollbars</Package>
		<Package>Dolphin SemVer</Package>
		<Package>Dolphin SemVer Tests</Package>
		<Package>Dolphin SizeIs Fields</Package>
		<Package>Dolphin Slider Control</Package>
		<Package>Dolphin Slidey-Inney-Outey Thing</Package>
		<Package>Dolphin Sockets</Package>
		<Package>Dolphin Sockets (Old Names)</Package>
		<Package>Dolphin Sockets Tests</Package>
		<Package>Dolphin Source Fileout</Package>
		<Package>Dolphin Source Package Fileout</Package>
		<Package>Dolphin SpinButton Control</Package>
		<Package>Dolphin Splitter Control</Package>
		<Package>Dolphin StaticPath Control</Package>
		<Package>Dolphin STON Tests</Package>
		<Package>Dolphin STON-Core</Package>
		<Package>Dolphin STON-Json</Package>
		<Package>Dolphin STON-MVP</Package>
		<Package>Dolphin Styled Views</Package>
		<Package>Dolphin SysLink Control</Package>
		<Package>Dolphin Text Presenter</Package>
		<Package>Dolphin Text Tile Icons</Package>
		<Package>Dolphin Tooltips</Package>
		<Package>Dolphin Transcript</Package>
		<Package>Dolphin Tree List Presenter</Package>
		<Package>Dolphin Tree Models</Package>
		<Package>Dolphin Tree Presenter</Package>
		<Package>Dolphin Type Converters</Package>
		<Package>Dolphin Value Models</Package>
		<Package>DolphinSure</Package>
		<Package>DolphinSure Example Authority</Package>
		<Package>DolphinSure Tests</Package>
		<Package>DolphinSure UI</Package>
		<Package>EnumRECT</Package>
		<Package>Etch-a-Sketch</Package>
		<Package>ExternalProcess</Package>
		<Package>File System Monitor</Package>
		<Package>Gdiplus</Package>
		<Package>Gdiplus (Old Names)</Package>
		<Package>Gdiplus ImageView</Package>
		<Package>Gdiplus ImageView Sample</Package>
		<Package>Gdiplus Tests</Package>
		<Package>Hello World</Package>
		<Package>HTML Help</Package>
		<Package>IDB Chunk Browser</Package>
		<Package>IDB Common</Package>
		<Package>IDB DeviceIndependentBitmap</Package>
		<Package>IDB File Browser</Package>
		<Package>IDB Image Library</Package>
		<Package>IDB Method History</Package>
		<Package>IDB Method History Tests</Package>
		<Package>IDB MultipleFileOpenDialog</Package>
		<Package>IDB Profiler</Package>
		<Package>InheritableFile</Package>
		<Package>Internal Bitmaps and Icons</Package>
		<Package>Internet Explorer</Package>
		<Package>Internet Explorer (Old Names)</Package>
		<Package>IP Help API</Package>
		<Package>KernelLibraryExtensions</Package>
		<Package>Lagoon Tests</Package>
		<Package>Learn Smalltalk</Package>
		<Package>Learn Smalltalk (Old Names)</Package>
		<Package>MetaProg Abbreviations</Package>
		<Package>Midi</Package>
		<Package>MustBeBooleanTestClasses</Package>
		<Package>Net Examples</Package>
		<Package>Notepad</Package>
		<Package>OA SUnit Extensions</Package>
		<Package>OLE COM</Package>
		<Package>OLE COM Tests</Package>
		<Package>OLE Font</Package>
		<Package>OLE Persistence Base</Package>
		<Package>OLE Picture</Package>
		<Package>OLE Picture Tests</Package>
		<Package>OLE Structured Storage</Package>
		<Package>OLE Structured Storage (Old Names)</Package>
		<Package>OS Examples</Package>
		<Package>PersonalMoney</Package>
		<Package>Playground</Package>
		<Package>Plimbole</Package>
		<Package>Product Protection</Package>
		<Package>Product Protection Base</Package>
		<Package>Protected Notepad</Package>
		<Package>Protected Scribble</Package>
		<Package>RB (Old Names)</Package>
		<Package>RBChangeObjects</Package>
		<Package>RBEnvironments</Package>
		<Package>RBFormatters</Package>
		<Package>RBNamespaces</Package>
		<Package>RBParser</Package>
		<Package>RBRefactorings</Package>
		<Package>RBReferenceFinder</Package>
		<Package>RBSmallLint</Package>
		<Package>RBTestMethods</Package>
		<Package>RBTests</Package>
		<Package>RegEdit</Package>
		<Package>Scribble</Package>
		<Package>Seeing the Objects Inside</Package>
		<Package>Simple Web Browser</Package>
		<Package>SlidingBallDemo</Package>
		<Package>Smalltalk Compiler</Package>
		<Package>Smalltalk Compiler Tests</Package>
		<Package>Smalltalk Parser</Package>
		<Package>Smalltalk Parser (Old Names)</Package>
		<Package>SSW EditableListView</Package>
		<Package>SSW EditableListView Demo</Package>
		<Package>SSW EditableListView Tests</Package>
		<Package>SSW ListView Extensions</Package>
		<Package>SSW Widget Development</Package>
		<Package>SSW Widget Enhancements</Package>
		<Package>SSW Widget Enhancements Tests</Package>
		<Package>STON-Tests</Package>
		<Package>SUnit</Package>
		<Package>SUnit (Old Names)</Package>
		<Package>SUnitBrowser</Package>
		<Package>SUnitBrowserModelApp</Package>
		<Package>SUnitPreload</Package>
		<Package>SUnitTests</Package>
		<Package>SUnitUI</Package>
		<Package>Tutorial Player</Package>
		<Package>UI Examples</Package>
		<Package>US ExternalProcess Extensions</Package>
		<Package>VBScript Regular Expressions</Package>
		<Package>VBScript Regular Expressions (Old Names)</Package>
		<Package>Video Library</Package>
		<Package>Video Library (Old Names)</Package>
		<Package>WebView2</Package>
		<Package>Windows Data Protection API</Package>
		<Package>Windows Data Protection API Tests</Package>
		<Package>Windows HTTP Server</Package>
		<Package>Windows Ini Files</Package>
		<Package>Windows Ini Files Tests</Package>
		<Package>Windows Shell</Package>
		<Package>Windows Shell Namespace</Package>
		<Package>WinHttp</Package>
		<Package>WinInet</Package>
		<Package>Wordpad</Package>
		<Package>XML DOM</Package>
		<Package>XML DOM (Old Names)</Package>
		<Package>XML DOM Tests</Package>
		<Package>XML DOM Visitor</Package>
		<Package>XML Formatter</Package>
		<Package>XmlPad</Package>
		<Package>YAXO Base</Package>
		<Package>YAXO DOM</Package>
	</RedundantPackages>
	<StripPackages>
		<!-- Resource library dolphindr7.dll could not be opened ('dolphindr7.dll' (16r2: The system cannot find the file specified.)) -->
		<!-- Resource library dolphindr7.dll could not be opened ('dolphindr7.dll' (16r2: The system cannot find the file specified.)) -->
		<!-- Uninstalling package 'Dolphin Announcements Tests' -->
		<!-- Uninstalling package 'Dolphin IDE Tests' -->
		<!-- Uninstalling package 'Lagoon Tests' -->
		<!-- Uninstalling package 'Development System Tests' -->
		<!-- Uninstalling package 'Dolphin Scintilla View Tests' -->
		<!-- Uninstalling package 'SUnitBrowser' -->
		<!-- Uninstalling package 'SUnitBrowserModelApp' -->
		<!-- Uninstalling package 'ADODB Tests' -->
		<!-- Uninstalling package 'Database Tests' -->
		<!-- Uninstalling package 'DolphinSure Tests' -->
		<!-- Uninstalling package 'Windows Ini Files Tests' -->
		<!-- Uninstalling package 'Dolphin Base64 Tests' -->
		<!-- Uninstalling package 'OLE Picture Tests' -->
		<!-- Uninstalling package 'ActiveX Connection Points Tests' -->
		<!-- Uninstalling package 'ActiveX Automation Tests' -->
		<!-- Uninstalling package 'OLE COM Tests' -->
		<!-- Uninstalling package 'Dolphin Message Box Tests' -->
		<!-- Uninstalling package 'XML DOM Tests' -->
		<!-- Uninstalling package 'Dolphin Random Stream Tests' -->
		<!-- Uninstalling package 'Smalltalk Compiler Tests' -->
		<!-- Uninstalling package 'Dolphin MVP Tests (Deprecated)' -->
		<!-- Uninstalling package 'Continuation Tests' -->
		<!-- Uninstalling package 'Dolphin SemVer Tests' -->
		<!-- Uninstalling package 'Dolphin Sockets Tests' -->
		<!-- Uninstalling package 'Gdiplus Tests' -->
		<!-- Uninstalling package 'Dolphin MVP Tests' -->
		<!-- Uninstalling package 'Dolphin Registry Access Tests' -->
		<!-- Uninstalling package 'Dolphin Literal Filer Tests' -->
		<!-- Uninstalling package 'Windows Data Protection API Tests' -->
		<!-- Uninstalling package 'Dolphin MMF Tests' -->
		<!-- Uninstalling package 'Dolphin GDI Graphics Tests' -->
		<!-- Uninstalling package 'Dolphin STON Tests' -->
		<!-- Uninstalling package 'Dolphin Base Tests' -->
		<!-- Uninstalling package 'CS ANSI Tests' -->
		<!-- Uninstalling package 'SUnit (Old Names)' -->
		<!-- Uninstalling package 'SUnitUI' -->
		<!-- Uninstalling package 'OA SUnit Extensions' -->
		<!-- Uninstalling package 'SSW EditableListView Tests' -->
		<!-- Uninstalling package 'SUnitTests' -->
		<!-- Uninstalling package 'SSW Widget Enhancements Tests' -->
		<!-- Uninstalling package 'Dolphin Refactoring Browser' -->
		<!-- Error: Error uninitializing CodeRewriterPlugin: UndefinedObject does not understand #remove:ifAbsent: -->
		<!-- Error uninitializing CodeRewriterPlugin: UndefinedObject does not understand #remove:ifAbsent: -->
		<!-- Error: Error uninitializing CodeMentorPlugin: UndefinedObject does not understand #remove:ifAbsent: -->
		<!-- Error uninitializing CodeMentorPlugin: UndefinedObject does not understand #remove:ifAbsent: -->
		<!-- Uninstalling package 'Application Deployment Kit' -->
		<!-- Uninstalling package 'Dolphin Professional Tools' -->
		<!-- Uninstalling package 'STON-Tests' -->
		<!-- Uninstalling package 'RBTests' -->
		<!-- Uninstalling package 'IDB Method History Tests' -->
		<!-- Uninstalling package 'RBTestMethods' -->
		<!-- Uninstalling package 'SUnit' -->
		<!-- Uninstalling package 'Learn Smalltalk (Old Names)' -->
		<!-- Uninstalling package 'Learn Smalltalk' -->
		<!-- Uninstalling package 'Tutorial Player' -->
		<!-- Uninstalling package 'SSW Widget Development' -->
		<!-- Uninstalling package 'Protected Notepad' -->
		<!-- Uninstalling package 'Protected Scribble' -->
		<!-- Uninstalling package 'DolphinSure Example Authority' -->
		<!-- Uninstalling package 'Seeing the Objects Inside' -->
		<!-- Uninstalling package 'ActiveX Automation Development' -->
		<!-- Uninstalling package 'MetaProg Abbreviations' -->
		<!-- Uninstalling package 'IDB Profiler' -->
		<!-- Uninstalling package 'IDB Image Library' -->
		<!-- Uninstalling package 'IDB Chunk Browser' -->
		<!-- Uninstalling package 'IDB File Browser' -->
		<!-- Uninstalling package 'IDB Common' -->
		<!-- Uninstalling package 'Dolphin Community Edition Tools' -->
		<!-- Uninstalling package 'Database Connection' -->
		<!-- Uninstalling package 'Dolphin IDE Extension Example' -->
		<!-- Uninstalling package 'IDB Method History' -->
		<!-- Uninstalling package 'Development System' -->
		<!-- Uninstalling package 'SSW EditableListView Demo' -->
		<!-- Uninstalling package 'Video Library (Old Names)' -->
		<!-- Uninstalling package 'Video Library' -->
		<!-- Uninstalling package 'PersonalMoney' -->
		<!-- Uninstalling package 'Dolphin Date Time Controls' -->
		<!-- Uninstalling package 'SSW EditableListView' -->
		<!-- Uninstalling package 'Dolphin Date Time Presenters' -->
		<!-- Uninstalling package 'Gdiplus ImageView Sample' -->
		<!-- Uninstalling package 'Dolphin Scintilla View (Old Names)' -->
		<!-- Uninstalling package 'Dolphin STON-MVP' -->
		<!-- Uninstalling package 'XmlPad' -->
		<!-- Uninstalling package 'ActiveX Scripting' -->
		<!-- Uninstalling package 'Dolphin Differences Presenter' -->
		<!-- Uninstalling package 'Dolphin Scintilla View' -->
		<!-- Uninstalling package 'Notepad' -->
		<!-- Uninstalling package 'Dolphin SpinButton Control' -->
		<!-- Uninstalling package 'Etch-a-Sketch' -->
		<!-- Uninstalling package 'Dolphin Slider Control' -->
		<!-- Uninstalling package 'Dolphin Accelerator Presenter' -->
		<!-- Uninstalling package 'Dolphin Tree List Presenter' -->
		<!-- Uninstalling package 'Dolphin MoenTree View' -->
		<!-- Uninstalling package 'RegEdit' -->
		<!-- Uninstalling package 'Dolphin List Tree Presenter' -->
		<!-- Uninstalling package 'Dolphin Tree Presenter' -->
		<!-- Uninstalling package 'File System Monitor' -->
		<!-- Uninstalling package 'Dolphin MVP (Deprecated)' -->
		<!-- Uninstalling package 'Wordpad' -->
		<!-- Uninstalling package 'Internet Explorer (Old Names)' -->
		<!-- Uninstalling package 'Internet Explorer' -->
		<!-- Uninstalling package 'ActiveX Control Hosting' -->
		<!-- Uninstalling package 'Dolphin Choice Prompter' -->
		<!-- Uninstalling package 'Dolphin Choice Presenter' -->
		<!-- Uninstalling package 'Dolphin Progress Dialog' -->
		<!-- Uninstalling package 'Dolphin Styled Views' -->
		<!-- Uninstalling package 'Gdiplus (Old Names)' -->
		<!-- Uninstalling package 'Gdiplus ImageView' -->
		<!-- Uninstalling package 'DolphinSure UI' -->
		<!-- Uninstalling package 'Dolphin Image Presenter' -->
		<!-- Uninstalling package 'Dolphin Base Icons' -->
		<!-- Uninstalling package 'Dolphin Find Dialog' -->
		<!-- Uninstalling package 'Dolphin Radio Buttons' -->
		<!-- Uninstalling package 'Dolphin Boolean Presenter' -->
		<!-- Uninstalling package 'Dolphin GroupBox' -->
		<!-- Uninstalling package 'Simple Web Browser' -->
		<!-- Uninstalling package 'Autoplay' -->
		<!-- Uninstalling package 'WebView2' -->
		<!-- Uninstalling package 'Chat' -->
		<!-- Uninstalling package 'Dolphin Rich Text Presenter' -->
		<!-- Uninstalling package 'Dolphin In-place Text Editor' -->
		<!-- Uninstalling package 'Product Protection' -->
		<!-- Uninstalling package 'Dolphin Integer Prompter' -->
		<!-- Uninstalling package 'Animals' -->
		<!-- Uninstalling package 'Dolphin Collection Presenters' -->
		<!-- Uninstalling package 'Dolphin Prompter' -->
		<!-- Uninstalling package 'Better Hello World' -->
		<!-- Uninstalling package 'Dolphin SysLink Control' -->
		<!-- Uninstalling package 'SSW Widget Enhancements' -->
		<!-- Uninstalling package 'Dolphin Scrollbars' -->
		<!-- Uninstalling package 'Dolphin Number Presenter' -->
		<!-- Uninstalling package 'Calculator' -->
		<!-- Uninstalling package 'Dolphin Key-Value Prompter' -->
		<!-- Uninstalling package 'Dolphin StaticPath Control' -->
		<!-- Uninstalling package 'Dolphin Transcript' -->
		<!-- Uninstalling package 'Dolphin Text Presenter' -->
		<!-- Uninstalling package 'Playground' -->
		<!-- Uninstalling package 'Bouncing Balls' -->
		<!-- Uninstalling package 'Plimbole' -->
		<!-- Uninstalling package 'Internal Bitmaps and Icons' -->
		<!-- Uninstalling package 'Windows Shell Namespace' -->
		<!-- Uninstalling package 'Dolphin Text Tile Icons' -->
		<!-- Uninstalling package 'Gdiplus' -->
		<!-- Undeclaring #{Gdip} -->
		<!-- Uninstalling package 'Scribble' -->
		<!-- Uninstalling package 'Dolphin Common Print Dialog' -->
		<!-- Uninstalling package 'IDB MultipleFileOpenDialog' -->
		<!-- Uninstalling package 'Dolphin Legacy Document Presenter' -->
		<!-- Uninstalling package 'Dolphin Document Presenter' -->
		<!-- Uninstalling package 'Dolphin Common Dialogs' -->
		<!-- Undeclaring #{ComDlg32} -->
		<!-- Uninstalling package 'Dolphin Base Dialogs' -->
		<!-- Uninstalling package 'Dolphin Check Buttons' -->
		<!-- Uninstalling package 'Dolphin Legacy Resource Framework' -->
		<!-- Uninstalling package 'OLE Font' -->
		<!-- Uninstalling package 'Hello World' -->
		<!-- Uninstalling package 'SSW ListView Extensions' -->
		<!-- Uninstalling package 'Dolphin Slidey-Inney-Outey Thing' -->
		<!-- Uninstalling package 'Dolphin Card Containers' -->
		<!-- Uninstalling package 'Dolphin Control Bars' -->
		<!-- Uninstalling package 'Dolphin Folder Presenter' -->
		<!-- Uninstalling package 'Dolphin Font Presenter' -->
		<!-- Uninstalling package 'Dolphin Push Buttons' -->
		<!-- Uninstalling package 'Dolphin Common Controls' -->
		<!-- Uninstalling package 'Dolphin Color Presenter' -->
		<!-- Uninstalling package 'SlidingBallDemo' -->
		<!-- Uninstalling package 'Dolphin List Presenter' -->
		<!-- Uninstalling package 'Dolphin Metafile Records' -->
		<!-- Uninstalling package 'Dolphin Metafiles' -->
		<!-- Uninstalling package 'Dolphin Tooltips' -->
		<!-- Uninstalling package 'COM Random Stream' -->
		<!-- Uninstalling package 'IDB DeviceIndependentBitmap' -->
		<!-- Uninstalling package 'Dolphin Splitter Control' -->
		<!-- Uninstalling package 'ActiveX DLL Server Kit' -->
		<!-- Uninstalling package 'Windows Shell' -->
		<!-- Undeclaring #{Shell32} -->
		<!-- Uninstalling package 'Dolphin MVP Base' -->
		<!-- Error: Error uninitializing ShellView: CommandLineHelloWorld does not understand #removeActionsForEvent: -->
		<!-- Error uninitializing ShellView: CommandLineHelloWorld does not understand #removeActionsForEvent: -->
		<!-- Undeclaring #{UxTheme} -->
		<!-- Undeclaring #{UxTheme} -->
		<!-- Unregistering VM ref #subclassWindow: -->
		<!-- Uninstalling package 'Dolphin MVP (Old Names)' -->
		<!-- Uninstalling package 'ActiveX (Old Names)' -->
		<!-- Uninstalling package 'OLE Picture' -->
		<!-- Uninstalling package 'Dolphin Registry Serialisation' -->
		<!-- Uninstalling package 'ActiveX Categories' -->
		<!-- Uninstalling package 'Dolphin GDI Graphics' -->
		<!-- Undeclaring #{Gdi32} -->
		<!-- Uninstalling package 'Dolphin Source Package Fileout' -->
		<!-- Uninstalling package 'ActiveX Property Bags' -->
		<!-- Uninstalling package 'VBScript Regular Expressions (Old Names)' -->
		<!-- Uninstalling package 'VBScript Regular Expressions' -->
		<!-- Uninstalling package 'Windows HTTP Server' -->
		<!-- Uninstalling package 'CDO' -->
		<!-- Uninstalling package 'EnumRECT' -->
		<!-- Uninstalling package 'COM Examples' -->
		<!-- Uninstalling package 'ADODB (Old Names)' -->
		<!-- Uninstalling package 'ADODB' -->
		<!-- Uninstalling package 'XML Formatter' -->
		<!-- Uninstalling package 'XML DOM Visitor' -->
		<!-- Uninstalling package 'XML DOM (Old Names)' -->
		<!-- Uninstalling package 'XML DOM' -->
		<!-- Uninstalling package 'ActiveX Connection Points' -->
		<!-- Uninstalling package 'WinHttp' -->
		<!-- Uninstalling package 'ActiveX Automation' -->
		<!-- Uninstalling package 'OLE Structured Storage (Old Names)' -->
		<!-- Uninstalling package 'OLE Persistence Base' -->
		<!-- Uninstalling package 'OLE Structured Storage' -->
		<!-- Uninstalling package 'ActiveX (Deprecated)' -->
		<!-- Uninstalling package 'OLE COM' -->
		<!-- Undeclaring #{Ole32} -->
		<!-- Undeclaring #{OleAut32} -->
		<!-- Uninstalling package 'Dolphin Legacy Package Support' -->
		<!-- Uninstalling package 'Dolphin Source Fileout' -->
		<!-- Uninstalling package 'Dolphin Message Box' -->
		<!-- Uninstalling package 'Common Controls Library' -->
		<!-- Uninstalling package 'Dolphin Recent Menu' -->
		<!-- Uninstalling package 'Database Connection (Deprecated)' -->
		<!-- Uninstalling package 'Calculator (Console)' -->
		<!-- Uninstalling package 'Dolphin SizeIs Fields' -->
		<!-- Uninstalling package 'Dolphin Command-line Parser' -->
		<!-- Uninstalling package 'Dolphin List Models' -->
		<!-- Uninstalling package 'Dolphin Additional Sort Algorithms' -->
		<!-- Uninstalling package 'HTML Help' -->
		<!-- Uninstalling package 'Dolphin Folder Tree Model' -->
		<!-- Uninstalling package 'Dolphin File System Info' -->
		<!-- Uninstalling package 'Product Protection Base' -->
		<!-- Uninstalling package 'DolphinSure' -->
		<!-- Undeclaring #{BCrypt} -->
		<!-- Uninstalling package 'Dolphin Registry Access' -->
		<!-- Uninstalling package 'US ExternalProcess Extensions' -->
		<!-- Uninstalling package 'ExternalProcess' -->
		<!-- Uninstalling package 'KernelLibraryExtensions' -->
		<!-- Uninstalling package 'OS Examples' -->
		<!-- Uninstalling package 'RB (Old Names)' -->
		<!-- Uninstalling package 'RBSmallLint' -->
		<!-- Uninstalling package 'Database Connection Base' -->
		<!-- Undeclaring #{Odbc32} -->
		<!-- Uninstalling package 'Dolphin Basic Geometry' -->
		<!-- Uninstalling package 'Windows Ini Files' -->
		<!-- Uninstalling package 'Dolphin Value Models' -->
		<!-- Uninstalling package 'SUnitPreload' -->
		<!-- Uninstalling package 'Dolphin Base (Deprecated)' -->
		<!-- Uninstalling package 'Dolphin Base (Old Names)' -->
		<!-- Uninstalling package 'Dolphin CRT Random Stream' -->
		<!-- Uninstalling package 'YAXO DOM' -->
		<!-- Uninstalling package 'Dolphin Continuations' -->
		<!-- Uninstalling package 'Dolphin Announcements' -->
		<!-- Uninstalling package 'Smalltalk Parser (Old Names)' -->
		<!-- Uninstalling package 'CSRefactorings' -->
		<!-- Uninstalling package 'RBRefactorings' -->
		<!-- Uninstalling package 'Dolphin Change Objects' -->
		<!-- Uninstalling package 'RBChangeObjects' -->
		<!-- Uninstalling package 'Dolphin Browser Environments' -->
		<!-- Uninstalling package 'RBEnvironments' -->
		<!-- Uninstalling package 'RBReferenceFinder' -->
		<!-- Uninstalling package 'RBParser' -->
		<!-- Uninstalling package 'RBFormatters' -->
		<!-- Uninstalling package 'RBNamespaces' -->
		<!-- Uninstalling package 'Dolphin STON-Json' -->
		<!-- Uninstalling package 'Dolphin STON-Core' -->
		<!-- Uninstalling package 'Dolphin Conformant Array Fields' -->
		<!-- Uninstalling package 'MustBeBooleanTestClasses' -->
		<!-- Uninstalling package 'Midi' -->
		<!-- Uninstalling package 'Dolphin Type Converters' -->
		<!-- Uninstalling package 'Dolphin Sockets (Old Names)' -->
		<!-- Uninstalling package 'Dolphin Memory-Mapped Files' -->
		<!-- Uninstalling package 'Dolphin Random Stream' -->
		<!-- Uninstalling package 'Smalltalk Compiler' -->
		<!-- Uninstalling package 'Smalltalk Parser' -->
		<!-- Uninstalling package 'Net Examples' -->
		<!-- Uninstalling package 'Development System (Deprecated)' -->
		<!-- Uninstalling package 'Dolphin Anonymous Classes' -->
		<!-- Uninstalling package 'IP Help API' -->
		<!-- Uninstalling package 'Diff Algorithm' -->
		<!-- Uninstalling package 'Dolphin Base64' -->
		<!-- Uninstalling package 'Dolphin Scintilla View (Deprecated)' -->
		<!-- Uninstalling package 'Dolphin Tree Models' -->
		<!-- Uninstalling package 'Windows Data Protection API' -->
		<!-- Uninstalling package 'Dolphin Collection Arithmetic' -->
		<!-- Uninstalling package 'Dolphin Products' -->
		<!-- Uninstalling package 'UI Examples' -->
		<!-- Uninstalling package 'YAXO Base' -->
		<!-- Uninstalling package 'Dolphin Legacy Date & Time' -->
		<!-- Uninstalling package 'Dolphin File System Watcher' -->
		<!-- Uninstalling package 'Dolphin Overlapped IO' -->
		<!-- Uninstalling package 'InheritableFile' -->
		<!-- Uninstalling package 'Dolphin SemVer' -->
		<!-- Uninstalling package 'Catenate' -->
		<!-- Uninstalling package 'Debug Trace Stream' -->
		<!-- Uninstalling package 'WinInet' -->
		<!-- Uninstalling package 'Dolphin Sockets' -->
		<!-- Undeclaring #{Ws2_32} -->
	</StripPackages>
	<RetainedPackages>
		<Package>Console Application Kit</Package>
		<Package>Dolphin</Package>
		<Package>Dolphin Literal Filer</Package>
		<Package>Hello World (Console)</Package>
		<Package>Lagoon Image Stripper</Package>
	</RetainedPackages>
	<RequiredMethodCategories>
		<MethodCategory>must not strip</MethodCategory>
	</RequiredMethodCategories>
	<PreservedMessages>
		<Selector>_buildApplication</Selector>
		<Selector>bytecodeRuns</Selector>
		<Selector>exit</Selector>
		<Selector>initialize</Selector>
		<Selector>initializeInterruptSelectors</Selector>
		<Selector>progress:</Selector>
		<Selector>returnValue:toFrame:</Selector>
		<Selector>vmi:list:no:with:</Selector>
	</PreservedMessages>
	<RootClasses>
		<RootClass>External.Address</RootClass>
		<RootClass>Core.AnsiString</RootClass>
		<RootClass>Core.Array</RootClass>
		<RootClass>Kernel.BindingReference</RootClass>
		<RootClass>Kernel.BlockClosure</RootClass>
		<RootClass>Core.ByteArray</RootClass>
		<RootClass>Core.Character</RootClass>
		<RootClass>Smalltalk.CommandLineHelloWorld</RootClass>
		<RootClass>Kernel.CompiledExpression</RootClass>
		<RootClass>Kernel.CompiledMethod</RootClass>
		<RootClass>Kernel.Context</RootClass>
		<RootClass>External.ExternalMethod</RootClass>
		<RootClass>Core.Float</RootClass>
		<RootClass>External.Handle</RootClass>
		<RootClass>Core.LargeInteger</RootClass>
		<RootClass>External.LPVOID</RootClass>
		<RootClass>Core.Message</RootClass>
		<RootClass>Core.Metaclass</RootClass>
		<RootClass>Kernel.MethodAnnotations</RootClass>
		<RootClass>Core.Process</RootClass>
		<RootClass>Kernel.ProcessorScheduler</RootClass>
		<RootClass>Core.Semaphore</RootClass>
		<RootClass>Core.SmallInteger</RootClass>
		<RootClass>Smalltalk</RootClass>
		<RootClass>Core.Symbol</RootClass>
		<RootClass>Core.UndefinedObject</RootClass>
		<RootClass>Core.Utf16String</RootClass>
		<RootClass>Core.Utf8String</RootClass>
		<RootClass>Kernel.VariableBinding</RootClass>
	</RootClasses>
	<StripDevelopmentInfo>
		<RemoveCategoryManagement></RemoveCategoryManagement>
		<RemoveMethodProtocols></RemoveMethodProtocols>
	</StripDevelopmentInfo>
	<StripPackageManagement>
		<StripMethods reason="package management">
			<Method methodClass="Kernel.CompiledMethod">owningPackage</Method>
			<Method methodClass="UI.ResourceIdentifier">owningPackage</Method>
		</StripMethods>
	</StripPackageManagement>
	<StripClassBuilder>
		<StripMethods reason="class hierarchy-adding">
			<Method methodClass="Core.Behavior">addToSuper</Method>
			<Method methodClass="Core.Class">addSubclass:</Method>
			<Method methodClass="Core.Class">addToSuper</Method>
			<Method methodClass="Core.Class">guid:</Method>
			<Method methodClass="Core.Class">importsFromPoolsString:</Method>
			<Method methodClass="Core.Class">newClassBuilder:instanceVariableNames:classVariableNames:imports:</Method>
			<Method methodClass="Core.Class">subclass:instanceVariableNames:classVariableNames:imports:</Method>
			<Method methodClass="Core.Class">subclass:instanceVariableNames:classVariableNames:imports:classInstanceVariableNames:classConstants:</Method>
			<Method methodClass="Core.Class">subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:</Method>
			<Method methodClass="Core.Class">variableByteSubclass:instanceVariableNames:classVariableNames:imports:</Method>
			<Method methodClass="Core.Class">variableByteSubclass:instanceVariableNames:classVariableNames:imports:classInstanceVariableNames:classConstants:</Method>
			<Method methodClass="Core.Class">variableSubclass:instanceVariableNames:classVariableNames:imports:</Method>
			<Method methodClass="Core.Class">variableSubclass:instanceVariableNames:classVariableNames:imports:classInstanceVariableNames:classConstants:</Method>
			<Method methodClass="Kernel.Namespace class">newClassBuilder:instanceVariableNames:classVariableNames:imports:</Method>
			<Method methodClass="Kernel.SharedPool class">subclass:</Method>
			<Method methodClass="Core.UndefinedObject">importsFromPoolsString:</Method>
			<Method methodClass="Core.UndefinedObject">newClassBuilder:instanceVariableNames:classVariableNames:imports:</Method>
			<Method methodClass="Core.UndefinedObject">subclass:instanceVariableNames:classVariableNames:imports:</Method>
			<Method methodClass="Core.UndefinedObject">subclass:instanceVariableNames:classVariableNames:imports:classInstanceVariableNames:classConstants:</Method>
		</StripMethods>
		<StripMethods reason="class hierarchy-mutating">
			<Method methodClass="Core.Behavior">setSuperclass:</Method>
			<Method methodClass="Core.Behavior">superclass:</Method>
			<Method methodClass="Core.Class">_rename:in:</Method>
			<Method methodClass="Core.Class">addClassVariable:value:</Method>
			<Method methodClass="Core.Class">addClassVarNamed:</Method>
			<Method methodClass="Core.Class">classUpdated</Method>
			<Method methodClass="Core.Class">classVariableRemoved:</Method>
			<Method methodClass="Core.Class">removeClassVarName:</Method>
			<Method methodClass="Core.Class">rename:</Method>
			<Method methodClass="Core.Class">subclasses:</Method>
			<Method methodClass="Core.Class">variableAdded:</Method>
			<Method methodClass="Core.Class">variableRemoved:</Method>
			<Method methodClass="Core.ClassDescription">addInstVarName:</Method>
			<Method methodClass="Core.ClassDescription">logDefinition</Method>
			<Method methodClass="Core.ClassDescription">removeInstVarName:</Method>
			<Method methodClass="Core.ClassDescription">setShapeFlags:to:</Method>
			<Method methodClass="Core.Metaclass">instanceVariableNames:</Method>
			<Method methodClass="Kernel.SharedPool class">variableAdded:</Method>
			<Method methodClass="Smalltalk class">staticVariableRemoved:</Method>
		</StripMethods>
		<RemoveClass>Kernel.ClassBuilder</RemoveClass>
	</StripClassBuilder>
	<StripCycle id="1">
		<StripClasses reason="unreferenced">
			<RemoveClass>Kernel.MethodName</RemoveClass>
			<RemoveClass>Kernel.MethodProtocol</RemoveClass>
			<RemoveClass>Kernel.ModalMsgLoop</RemoveClass>
			<RemoveClass>Core.Model</RemoveClass>
			<RemoveClass>Kernel.PackageManager</RemoveClass>
			<RemoveClass>Core.Sound</RemoveClass>
			<RemoveClass>OS.VersionResource</RemoveClass>
			<RemoveClass>Core.ClassCategory</RemoveClass>
			<RemoveClass>External.UInt64Bytes</RemoveClass>
			<RemoveClass>External.REFGUID</RemoveClass>
			<RemoveClass>Kernel.PoolDictionary</RemoveClass>
			<RemoveClass>Core.DeferredValueTable</RemoveClass>
			<RemoveClass>Core.WeakIdentitySet</RemoveClass>
			<RemoveClass>OS.WinMMLibrary</RemoveClass>
			<RemoveClass>Core.OperationAborted</RemoveClass>
			<RemoveClass>OS.HRESULTNotification</RemoveClass>
			<RemoveClass>Kernel.ValidatingClassLocator</RemoveClass>
			<RemoveClass>Kernel.PackageRelativeFileLocator</RemoveClass>
			<RemoveClass>Core.MessageSequence</RemoveClass>
			<RemoveClass>Graphics</RemoveClass>
			<RemoveClass>Kernel._PrimitiveFailureCode</RemoveClass>
			<RemoveClass>Kernel.CompilerFlags</RemoveClass>
			<RemoveClass>OS.CRTConstants</RemoveClass>
			<RemoveClass>External.ExtCallArgTypes</RemoveClass>
			<RemoveClass>OS.FacilityCodes</RemoveClass>
			<RemoveClass>OS.MessageBoxConstants</RemoveClass>
			<RemoveClass>OS.NlsConstants</RemoveClass>
			<RemoveClass>Kernel.OpcodePool</RemoveClass>
			<RemoveClass>Kernel.ParseErrorCodes</RemoveClass>
			<RemoveClass>Kernel.VMConstants</RemoveClass>
			<RemoveClass>OS.Win32Constants</RemoveClass>
			<RemoveClass>OS.Win32Errors</RemoveClass>
			<RemoveClass>OS.WinRegConstants</RemoveClass>
			<RemoveClass>Kernel.SharedPool</RemoveClass>
			<RemoveClass>Tools</RemoveClass>
			<RemoveClass>Kernel.PermanentRegistry</RemoveClass>
			<RemoveClass>Kernel.BootSessionManager</RemoveClass>
			<RemoveClass>Core.WarningSignal</RemoveClass>
			<RemoveClass>Kernel.STBValidatingInFiler</RemoveClass>
			<RemoveClass>Kernel.STLDebugger</RemoveClass>
			<RemoveClass>Kernel.STBSingletonProxy</RemoveClass>
			<RemoveClass>External.StructurePointer</RemoveClass>
			<RemoveClass>External.VOID</RemoveClass>
			<RemoveClass>External.DOUBLEArray</RemoveClass>
			<RemoveClass>External.FLOATArray</RemoveClass>
			<RemoveClass>External.StructureArray</RemoveClass>
			<RemoveClass>External.GenericExternalArray</RemoveClass>
			<RemoveClass>External.INT_PTRArray</RemoveClass>
			<RemoveClass>External.SBYTEArray</RemoveClass>
			<RemoveClass>External.SDWORDArray</RemoveClass>
			<RemoveClass>External.SWORDArray</RemoveClass>
			<RemoveClass>External.HandleArray</RemoveClass>
			<RemoveClass>External.PointerArray</RemoveClass>
			<RemoveClass>External.UINT_PTRArray</RemoveClass>
			<RemoveClass>External.WORDArray</RemoveClass>
			<RemoveClass>External.DOUBLE</RemoveClass>
			<RemoveClass>External.FLOAT</RemoveClass>
			<RemoveClass>OS.LARGE_INTEGER</RemoveClass>
			<RemoveClass>OS.ULARGE_INTEGER</RemoveClass>
			<RemoveClass>External.QWORD</RemoveClass>
			<RemoveClass>External.INT_PTR</RemoveClass>
			<RemoveClass>External.UINT_PTR</RemoveClass>
			<RemoveClass>External.SWORD</RemoveClass>
			<RemoveClass>External.WORD</RemoveClass>
			<RemoveClass>External.BOOLEAN</RemoveClass>
			<RemoveClass>External.SBYTE</RemoveClass>
			<RemoveClass>External.LPSTR</RemoveClass>
			<RemoveClass>External.LPWSTR</RemoveClass>
			<RemoveClass>External.Pointer</RemoveClass>
			<RemoveClass>OS.SECURITY_ATTRIBUTES</RemoveClass>
			<RemoveClass>OS.VS_VERSION_INFO_HEADER</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="OS._FPIEEE_RECORD">causeNames</Method>
			<Method methodClass="OS._FPIEEE_RECORD">isOverflow</Method>
			<Method methodClass="OS._FPIEEE_RECORD">isUnderflow</Method>
			<Method methodClass="OS._FPIEEE_RECORD">precisionName</Method>
			<Method methodClass="OS._FPIEEE_RECORD">roundingModeName</Method>
			<Method methodClass="OS._FPIEEE_VALUE">formatName</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">sourceDescriptorForIndex:position:</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler class">on:sourceFileIndex:</Method>
			<Method methodClass="Kernel.AbstractSTBInFiler">deferAction:</Method>
			<Method methodClass="Kernel.AbstractSTBInFiler">isUpgrading</Method>
			<Method methodClass="Kernel.AbstractSTBInFiler">isUpgrading:</Method>
			<Method methodClass="Kernel.AbstractSTBOutFiler">register:asGlobal:</Method>
			<Method methodClass="Kernel.AbstractSTBOutFiler">removeOverrideFor:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">currency</Method>
			<Method methodClass="OS.AbstractWindowsLocale">dayOfWeekShortAbbreviation:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">englishLanguageName</Method>
			<Method methodClass="OS.AbstractWindowsLocale">firstDayOfWeek</Method>
			<Method methodClass="OS.AbstractWindowsLocale">getCalendarInfoString:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">isInstalled</Method>
			<Method methodClass="OS.AbstractWindowsLocale">iso639LanguageName</Method>
			<Method methodClass="OS.AbstractWindowsLocale">isValidLocale</Method>
			<Method methodClass="OS.AbstractWindowsLocale">lastTwoDigitYear</Method>
			<Method methodClass="OS.AbstractWindowsLocale">longDateFormat</Method>
			<Method methodClass="OS.AbstractWindowsLocale">longDateFormats</Method>
			<Method methodClass="OS.AbstractWindowsLocale">nameOfDay:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">nativeDigits</Method>
			<Method methodClass="OS.AbstractWindowsLocale">percentSymbol</Method>
			<Method methodClass="OS.AbstractWindowsLocale">shortDateFormats</Method>
			<Method methodClass="OS.AbstractWindowsLocale">shortTimeFormat</Method>
			<Method methodClass="OS.AbstractWindowsLocale">timeFormats</Method>
			<Method methodClass="OS.AbstractWindowsLocale">yearMonthFormat</Method>
			<Method methodClass="External.Address">detach</Method>
			<Method methodClass="External.Address class">alignment</Method>
			<Method methodClass="OS.AdvApiLibrary">regGetValue:lpSubKey:lpValue:dwFlags:pdwType:pvData:pcbData:</Method>
			<Method methodClass="OS.AdvApiLibrary">regSetKeyValue:lpSubKey:lpValueName:dwType:lpData:cbData:</Method>
			<Method methodClass="Core.AnsiString">urlDecoded</Method>
			<Method methodClass="Core.AnsiString class">characterForCodeUnit:</Method>
			<Method methodClass="Core.AnsiString class">with:with:with:</Method>
			<Method methodClass="Core.AnsiString class">with:with:with:with:</Method>
			<Method methodClass="Core.AnsiString class">with:with:with:with:with:</Method>
			<Method methodClass="Core.ArithmeticValue">%</Method>
			<Method methodClass="Core.ArithmeticValue">addToPoint:</Method>
			<Method methodClass="Core.ArithmeticValue">addToPoint3D:</Method>
			<Method methodClass="Core.ArithmeticValue">divideIntoPoint:</Method>
			<Method methodClass="Core.ArithmeticValue">divideIntoPoint3D:</Method>
			<Method methodClass="Core.ArithmeticValue">multiplyByPoint:</Method>
			<Method methodClass="Core.ArithmeticValue">multiplyByPoint3D:</Method>
			<Method methodClass="Core.ArithmeticValue">roundDownTo:</Method>
			<Method methodClass="Core.ArithmeticValue">squared</Method>
			<Method methodClass="Core.ArithmeticValue">strictlyPositive</Method>
			<Method methodClass="Core.ArithmeticValue">subtractFromPoint:</Method>
			<Method methodClass="Core.ArithmeticValue">subtractFromPoint3D:</Method>
			<Method methodClass="Core.Array class">with:with:with:</Method>
			<Method methodClass="Core.Array class">with:with:with:with:</Method>
			<Method methodClass="Core.Array class">with:with:with:with:with:</Method>
			<Method methodClass="Core.ArrayedCollection">findFirst:</Method>
			<Method methodClass="Core.ArrayedCollection class">with:with:with:</Method>
			<Method methodClass="Core.ArrayedCollection class">with:with:with:with:</Method>
			<Method methodClass="Core.ArrayedCollection class">with:with:with:with:with:</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beCompiled</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beImmutable</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beMutable</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beNonBrowsable</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beNonNullable</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beNullable</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beOverride</Method>
			<Method methodClass="Kernel.AttributeDescriptor">canGenerateAccessor</Method>
			<Method methodClass="Kernel.AttributeDescriptor">canGenerateMutator</Method>
			<Method methodClass="Kernel.AttributeDescriptor">isInaccessible</Method>
			<Method methodClass="Kernel.AttributeDescriptor">isMutable</Method>
			<Method methodClass="Kernel.AttributeDescriptor">isNonBrowsable</Method>
			<Method methodClass="Kernel.AttributeDescriptor">isNullable</Method>
			<Method methodClass="Kernel.AttributeDescriptor">isNullable:</Method>
			<Method methodClass="Kernel.AttributeDescriptor">isOverride</Method>
			<Method methodClass="Kernel.AttributeDescriptor class">inaccessible</Method>
			<Method methodClass="Kernel.AttributeDescriptor class">readOnly</Method>
			<Method methodClass="Kernel.AttributeDescriptor class">uncompiled</Method>
			<Method methodClass="Kernel.AttributeDescriptor class">writeOnly</Method>
			<Method methodClass="Core.Bag">asBag</Method>
			<Method methodClass="Core.Bag">elements</Method>
			<Method methodClass="Core.Bag">elements:</Method>
			<Method methodClass="Core.Bag">removeAll</Method>
			<Method methodClass="Core.Bag">removeAllOccurrencesOf:ifAbsent:</Method>
			<Method methodClass="Core.Bag">sortedCounts</Method>
			<Method methodClass="Core.Bag">valuesAndCountsDo:</Method>
			<Method methodClass="Core.Bag class">identityNew</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_deleteMethodSoft:</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_preStripTidy</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_removeClassBuilder:</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_removeDevelopmentSystemResidue</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">stripClassInitializers</Method>
			<Method methodClass="Core.Behavior">basicCompile:</Method>
			<Method methodClass="Core.Behavior">basicNewFixed:</Method>
			<Method methodClass="Core.Behavior">compile:</Method>
			<Method methodClass="Core.Behavior">decompile:</Method>
			<Method methodClass="Core.Behavior">definitionOf:</Method>
			<Method methodClass="Core.Behavior">dynamicSelectors</Method>
			<Method methodClass="Core.Behavior">hasImmediateInstances</Method>
			<Method methodClass="Core.Behavior">hasMethods</Method>
			<Method methodClass="Core.Behavior">instanceCount</Method>
			<Method methodClass="Core.Behavior">isBits</Method>
			<Method methodClass="Core.Behavior">isFixed</Method>
			<Method methodClass="Core.Behavior">isIndirection:</Method>
			<Method methodClass="Core.Behavior">isMetaclass</Method>
			<Method methodClass="Core.Behavior">isMourner</Method>
			<Method methodClass="Core.Behavior">isNullTerminated:</Method>
			<Method methodClass="Core.Behavior">isWords</Method>
			<Method methodClass="Core.Behavior">makeMourner</Method>
			<Method methodClass="Core.Behavior">referenceFilterFor:</Method>
			<Method methodClass="Core.Behavior">referenceFilterForAnyOf:</Method>
			<Method methodClass="Core.Behavior">removeFromSystem</Method>
			<Method methodClass="Core.Behavior">requiresInstallation</Method>
			<Method methodClass="Core.Behavior">setInstSize:</Method>
			<Method methodClass="Core.Behavior">sourceCodeAt:</Method>
			<Method methodClass="Core.Behavior">understoodSelectors</Method>
			<Method methodClass="Core.Behavior">whichClassIncludesSelector:</Method>
			<Method methodClass="Core.Behavior">whichSelectorsAccess:</Method>
			<Method methodClass="Core.Behavior">whichSelectorsAssign:</Method>
			<Method methodClass="Core.Behavior">whichSelectorsRead:</Method>
			<Method methodClass="Core.Behavior">whichSelectorsWrite:</Method>
			<Method methodClass="Core.Behavior">withAllSuperclasses</Method>
			<Method methodClass="Kernel.BindingReference">append:</Method>
			<Method methodClass="Kernel.BindingReference">asFullyQualifiedReference</Method>
			<Method methodClass="Kernel.BindingReference">ifDefinedDo:</Method>
			<Method methodClass="Kernel.BindingReference">ifDefinedDo:elseDo:</Method>
			<Method methodClass="Kernel.BindingReference">ifNotDefined:</Method>
			<Method methodClass="Kernel.BindingReference">isQualifiedName</Method>
			<Method methodClass="Kernel.BindingReference">literalTextStyle</Method>
			<Method methodClass="Kernel.BindingReference">namespaceBinding</Method>
			<Method methodClass="Kernel.BindingReference">realReference</Method>
			<Method methodClass="Kernel.BindingReference">simpleName</Method>
			<Method methodClass="Kernel.BindingReference">valueOrDo:</Method>
			<Method methodClass="Kernel.BindingReference class">isValidQualifiedName:</Method>
			<Method methodClass="Kernel.BindingReference class">path:home:</Method>
			<Method methodClass="Kernel.BindingReference class">pathString:private:</Method>
			<Method methodClass="Kernel.BindingReference class">simpleName:</Method>
			<Method methodClass="Kernel.BindingReference class">simpleName:in:</Method>
			<Method methodClass="Kernel.BindingReference class">splitQualifiedName:</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">asFullyQualifiedReference</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">baseClass</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">private</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">scope:</Method>
			<Method methodClass="Kernel.BlockClosure">argumentCount:</Method>
			<Method methodClass="Kernel.BlockClosure">atPriority:</Method>
			<Method methodClass="Kernel.BlockClosure">copiedValues</Method>
			<Method methodClass="Kernel.BlockClosure">cull:cull:cull:cull:</Method>
			<Method methodClass="Kernel.BlockClosure">deferredValue</Method>
			<Method methodClass="Kernel.BlockClosure">envTempCount:</Method>
			<Method methodClass="Kernel.BlockClosure">fork</Method>
			<Method methodClass="Kernel.BlockClosure">info</Method>
			<Method methodClass="Kernel.BlockClosure">info:</Method>
			<Method methodClass="Kernel.BlockClosure">initialIP:</Method>
			<Method methodClass="Kernel.BlockClosure">newProcess</Method>
			<Method methodClass="Kernel.BlockClosure">newProcessWithArguments:</Method>
			<Method methodClass="Kernel.BlockClosure">on:do:on:do:on:do:</Method>
			<Method methodClass="Kernel.BlockClosure">on:do:on:do:on:do:on:do:</Method>
			<Method methodClass="Kernel.BlockClosure">on:do:on:do:on:do:on:do:on:do:</Method>
			<Method methodClass="Kernel.BlockClosure">on:do:on:do:on:do:on:do:on:do:on:do:</Method>
			<Method methodClass="Kernel.BlockClosure">onDo:</Method>
			<Method methodClass="Kernel.BlockClosure">outer:</Method>
			<Method methodClass="Kernel.BlockClosure">postToMessageQueue</Method>
			<Method methodClass="Kernel.BlockClosure">stackTempCount:</Method>
			<Method methodClass="Kernel.BlockClosure">tempCount</Method>
			<Method methodClass="Kernel.BlockClosure">timeToRepeat:</Method>
			<Method methodClass="Kernel.BlockClosure">timeToRun</Method>
			<Method methodClass="Kernel.BlockClosure class">attemptToUpgradeBlock:data:</Method>
			<Method methodClass="Kernel.BlockFrame">isBlockFrame</Method>
			<Method methodClass="Core.Boolean">&amp;</Method>
			<Method methodClass="Core.Boolean">deepCopy</Method>
			<Method methodClass="Core.Boolean">eqv:</Method>
			<Method methodClass="Core.Boolean">xor:</Method>
			<Method methodClass="Core.ByteArray">asHexString</Method>
			<Method methodClass="Core.ByteArray">basicDwordAtOffset:</Method>
			<Method methodClass="Core.ByteArray">basicDwordAtOffset:put:</Method>
			<Method methodClass="Core.ByteArray">byteAt:put:</Method>
			<Method methodClass="Core.ByteArray">bytesAtOffset:put:</Method>
			<Method methodClass="Core.ByteArray">copyStringFrom:to:</Method>
			<Method methodClass="Core.ByteArray">doubleAtOffset:put:</Method>
			<Method methodClass="Core.ByteArray">floatAtOffset:put:</Method>
			<Method methodClass="Core.ByteArray">hexStoreOn:</Method>
			<Method methodClass="Core.ByteArray">printHexString</Method>
			<Method methodClass="Core.ByteArray">sbyteAtOffset:put:</Method>
			<Method methodClass="Core.ByteArray">sqwordAtOffset:put:</Method>
			<Method methodClass="Core.ByteArray class">fromGlobalHandle:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">accessesInstVarAtAnyOf:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">accessToInstVarAt:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">instructions</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">ip:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">nextInstructionDo:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">peekForSelector</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">readsStatic:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">writesStatic:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher class">indexOfIP:in:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher class">instructions</Method>
			<Method methodClass="External.Callback">cookie</Method>
			<Method methodClass="External.Callback class">block:argumentTypes:</Method>
			<Method methodClass="External.Callback class">receiver:prototype:</Method>
			<Method methodClass="External.Callback class">unitializeSubclass:</Method>
			<Method methodClass="Kernel.CaseInsensitiveSearchPolicy">keyAtValue:in:ifAbsent:</Method>
			<Method methodClass="Core.Category">acceptsAdditions</Method>
			<Method methodClass="Core.Category">isIntermediate</Method>
			<Method methodClass="Core.Category">isPermanent</Method>
			<Method methodClass="Core.Category">isPermanent:</Method>
			<Method methodClass="Core.Category">localName</Method>
			<Method methodClass="Core.Category">subNames</Method>
			<Method methodClass="Core.Character">_separateSubStringsIn:</Method>
			<Method methodClass="Core.Character">codePointString</Method>
			<Method methodClass="Core.Character">deepCopy</Method>
			<Method methodClass="Core.Character">isControl</Method>
			<Method methodClass="Core.Character">isHexDigit</Method>
			<Method methodClass="Core.Character">isLetter</Method>
			<Method methodClass="Core.Character">isLinefeed</Method>
			<Method methodClass="Core.Character">isPrintable</Method>
			<Method methodClass="Core.Character">isPunctuation</Method>
			<Method methodClass="Core.Character">isUpperCase</Method>
			<Method methodClass="Core.Character">isUtf16Lead</Method>
			<Method methodClass="Core.Character">isUtf8Lead</Method>
			<Method methodClass="Core.Character">isUtf8Trail</Method>
			<Method methodClass="Core.Character">split:do:</Method>
			<Method methodClass="Core.Character class">backspace</Method>
			<Method methodClass="Core.Character class">dolphin</Method>
			<Method methodClass="Core.Character class">eof</Method>
			<Method methodClass="Core.Character class">esc</Method>
			<Method methodClass="Core.Character class">euro</Method>
			<Method methodClass="Core.Character class">isValidUtf16CodeUnit:</Method>
			<Method methodClass="Core.Character class">lf</Method>
			<Method methodClass="Core.Character class">newPage</Method>
			<Method methodClass="Core.Character class">nl</Method>
			<Method methodClass="Core.Character class">replacement</Method>
			<Method methodClass="Kernel.ChunkReader">chunkBlock</Method>
			<Method methodClass="Kernel.ChunkReader">context</Method>
			<Method methodClass="Core.Class">absoluteName</Method>
			<Method methodClass="Core.Class">absoluteReference</Method>
			<Method methodClass="Core.Class">addClassConstant:</Method>
			<Method methodClass="Core.Class">addImport:</Method>
			<Method methodClass="Core.Class">allEnvironments</Method>
			<Method methodClass="Core.Class">allImports</Method>
			<Method methodClass="Core.Class">bindingFor:environment:</Method>
			<Method methodClass="Core.Class">categoriesForClass</Method>
			<Method methodClass="Core.Class">category</Method>
			<Method methodClass="Core.Class">category:</Method>
			<Method methodClass="Core.Class">classConstants</Method>
			<Method methodClass="Core.Class">comment</Method>
			<Method methodClass="Core.Class">comment:</Method>
			<Method methodClass="Core.Class">importedNamespacesDo:</Method>
			<Method methodClass="Core.Class">includeInCategory:</Method>
			<Method methodClass="Core.Class">isAbstract:</Method>
			<Method methodClass="Core.Class">nestedClasses</Method>
			<Method methodClass="Core.Class">removeClassConstant:</Method>
			<Method methodClass="Core.Class">removeFromCategory:</Method>
			<Method methodClass="Core.Class">removeFromSystem</Method>
			<Method methodClass="Core.Class">replaceImport:with:</Method>
			<Method methodClass="Core.Class">requiresInstallation</Method>
			<Method methodClass="Core.Class">resolveBindingPath:</Method>
			<Method methodClass="Core.Class">setClassVarNames:</Method>
			<Method methodClass="Core.Class">setGuid:</Method>
			<Method methodClass="Core.Class">setName:environment:</Method>
			<Method methodClass="Core.Class">simpleName</Method>
			<Method methodClass="Core.Class">stbModifyExportProxy:</Method>
			<Method methodClass="Core.Class">storeGUID</Method>
			<Method methodClass="Core.Class">unaliasedName</Method>
			<Method methodClass="Core.Class class">allBehaviors</Method>
			<Method methodClass="Core.ClassDescription">addProtocol:</Method>
			<Method methodClass="Core.ClassDescription">addSharedPool:</Method>
			<Method methodClass="Core.ClassDescription">allClassVarNames</Method>
			<Method methodClass="Core.ClassDescription">allGettersDo:</Method>
			<Method methodClass="Core.ClassDescription">allSelectors</Method>
			<Method methodClass="Core.ClassDescription">allSubclassesEndOrderDo:</Method>
			<Method methodClass="Core.ClassDescription">bindingNames</Method>
			<Method methodClass="Core.ClassDescription">canUnderstandProtocol:</Method>
			<Method methodClass="Core.ClassDescription">categoriesForMethods</Method>
			<Method methodClass="Core.ClassDescription">classVariableNames</Method>
			<Method methodClass="Core.ClassDescription">compile:categories:</Method>
			<Method methodClass="Core.ClassDescription">compile:classified:</Method>
			<Method methodClass="Core.ClassDescription">compile:environment:categories:package:</Method>
			<Method methodClass="Core.ClassDescription">compileAllSubclasses</Method>
			<Method methodClass="Core.ClassDescription">definition</Method>
			<Method methodClass="Core.ClassDescription">globalScope</Method>
			<Method methodClass="Core.ClassDescription">hasCompilationFailures</Method>
			<Method methodClass="Core.ClassDescription">instVarName:</Method>
			<Method methodClass="Core.ClassDescription">logRemoveSelector:</Method>
			<Method methodClass="Core.ClassDescription">methodCategories</Method>
			<Method methodClass="Core.ClassDescription">methodProtocol:attributes:selectors:</Method>
			<Method methodClass="Core.ClassDescription">protocols:</Method>
			<Method methodClass="Core.ClassDescription">recompileAll</Method>
			<Method methodClass="Core.ClassDescription">removeProtocol:</Method>
			<Method methodClass="Core.ClassDescription">resourceNames</Method>
			<Method methodClass="Core.ClassDescription">resources</Method>
			<Method methodClass="Core.ClassDescription">setInstanceVariables:</Method>
			<Method methodClass="Core.ClassDescription">subclassInstVarNames</Method>
			<Method methodClass="Core.ClassDescription">whichClassDefinesClassVar:</Method>
			<Method methodClass="Core.ClassDescription">whichClassImplementsProtocol:</Method>
			<Method methodClass="Core.ClassDescription">withAllSubclasses</Method>
			<Method methodClass="Kernel.ClassLocator">errorClassCircularityDetected</Method>
			<Method methodClass="Kernel.ClassLocator">fullPackageKey</Method>
			<Method methodClass="Kernel.ClassLocator">installImportedClass:</Method>
			<Method methodClass="Kernel.ClassLocator class">binaryPackageExtension</Method>
			<Method methodClass="Kernel.ClassLocator class">codeBase:packageName:</Method>
			<Method methodClass="Kernel.ClassLocator class">importedClassesMutex</Method>
			<Method methodClass="Kernel.ClassLocator class">removeAlias:</Method>
			<Method methodClass="Kernel.ClassRemovalError">originalError</Method>
			<Method methodClass="Kernel.ClassRemovalError">originalError:</Method>
			<Method methodClass="Core.Collection">asBag</Method>
			<Method methodClass="Core.Collection">asIdentitySet</Method>
			<Method methodClass="Core.Collection">asSortedCollection</Method>
			<Method methodClass="Core.Collection">asSortedCollection:</Method>
			<Method methodClass="Core.Collection">copyWithoutDuplicates</Method>
			<Method methodClass="Core.Collection">count:</Method>
			<Method methodClass="Core.Collection">detect:</Method>
			<Method methodClass="Core.Collection">fold:</Method>
			<Method methodClass="Core.Collection">noDifference:</Method>
			<Method methodClass="Core.Collection">removeAll</Method>
			<Method methodClass="Core.Collection">removeAllSuchThat:</Method>
			<Method methodClass="Core.Collection">select:thenCollect:</Method>
			<Method methodClass="Core.Collection class">with:with:with:</Method>
			<Method methodClass="Core.Collection class">with:with:with:with:</Method>
			<Method methodClass="Core.Collection class">with:with:with:with:with:</Method>
			<Method methodClass="Kernel.CompilationResult">affectsAnnotation:</Method>
			<Method methodClass="Kernel.CompilationResult">oldMethod</Method>
			<Method methodClass="Kernel.CompilationResult">package</Method>
			<Method methodClass="Kernel.CompilationResult">rawTempsMap:</Method>
			<Method methodClass="Kernel.CompilationResult">rawTextMap:</Method>
			<Method methodClass="Kernel.CompilationResult">textMap</Method>
			<Method methodClass="Kernel.CompiledCode">accessesInstVar:</Method>
			<Method methodClass="Kernel.CompiledCode">allLiteralsDo:</Method>
			<Method methodClass="Kernel.CompiledCode">allSymbolLiterals</Method>
			<Method methodClass="Kernel.CompiledCode">argumentCount:</Method>
			<Method methodClass="Kernel.CompiledCode">basicByteCodes</Method>
			<Method methodClass="Kernel.CompiledCode">byteCodes:</Method>
			<Method methodClass="Kernel.CompiledCode">byteCodeSegments</Method>
			<Method methodClass="Kernel.CompiledCode">containsSource:</Method>
			<Method methodClass="Kernel.CompiledCode">extraIndex:</Method>
			<Method methodClass="Kernel.CompiledCode">header</Method>
			<Method methodClass="Kernel.CompiledCode">header:</Method>
			<Method methodClass="Kernel.CompiledCode">isAnnotated</Method>
			<Method methodClass="Kernel.CompiledCode">isOverride</Method>
			<Method methodClass="Kernel.CompiledCode">isPrimitive</Method>
			<Method methodClass="Kernel.CompiledCode">isPublic</Method>
			<Method methodClass="Kernel.CompiledCode">literalAt:put:</Method>
			<Method methodClass="Kernel.CompiledCode">literalsDetect:ifNone:</Method>
			<Method methodClass="Kernel.CompiledCode">needsContext</Method>
			<Method methodClass="Kernel.CompiledCode">readsInstVar:</Method>
			<Method methodClass="Kernel.CompiledCode">sendsSelector:</Method>
			<Method methodClass="Kernel.CompiledCode">superMessages</Method>
			<Method methodClass="Kernel.CompiledCode">tempCount</Method>
			<Method methodClass="Kernel.CompiledCode">textMap</Method>
			<Method methodClass="Kernel.CompiledCode">writesInstVar:</Method>
			<Method methodClass="Kernel.CompiledCode class">initializeInfoCache</Method>
			<Method methodClass="Kernel.CompiledMethod">changePosition</Method>
			<Method methodClass="Kernel.CompiledMethod">hasChanged</Method>
			<Method methodClass="Kernel.CompiledMethod">isClassMethod</Method>
			<Method methodClass="Kernel.CompiledMethod">isExternalCall</Method>
			<Method methodClass="Kernel.CompiledMethod">isOverridden</Method>
			<Method methodClass="Kernel.CompiledMethod">isOverride</Method>
			<Method methodClass="Kernel.CompiledMethod">loseSource</Method>
			<Method methodClass="Kernel.CompiledMethod">owningPackageIfLoose</Method>
			<Method methodClass="Kernel.CompiledMethod class">defaultSortBlock</Method>
			<Method methodClass="Kernel.Compiler class">compile:in:</Method>
			<Method methodClass="Kernel.Compiler class">compileDebugExpression:in:environment:evaluationPools:</Method>
			<Method methodClass="Kernel.Compiler class">compileDebugMethod:in:environment:</Method>
			<Method methodClass="Kernel.Compiler class">compileExpression:in:</Method>
			<Method methodClass="Kernel.Compiler class">defaultFlags:</Method>
			<Method methodClass="Kernel.Compiler class">disableWarning:</Method>
			<Method methodClass="Kernel.Compiler class">enableWarning:</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:logged:</Method>
			<Method methodClass="Kernel.Compiler class">identifierFrom:</Method>
			<Method methodClass="Kernel.Compiler class">isAValidLocalIdentifier:</Method>
			<Method methodClass="Kernel.Compiler class">isValidSelector:</Method>
			<Method methodClass="Kernel.Compiler class">warningClass</Method>
			<Method methodClass="Kernel.CompilerNotification">extras</Method>
			<Method methodClass="Kernel.CompilerNotification">ranges</Method>
			<Method methodClass="Kernel.ConsoleSessionManager class">isRuntime</Method>
			<Method methodClass="Kernel.ConsoleSessionManager class">run</Method>
			<Method methodClass="Kernel.Context">outer:</Method>
			<Method methodClass="OS.CPINFOEXW">defaultCharacter</Method>
			<Method methodClass="OS.CPINFOEXW">unicodeDefaultChar</Method>
			<Method methodClass="OS.CRTLibrary">_stricmp:string2:</Method>
			<Method methodClass="OS.CRTLibrary">strcmp:string2:</Method>
			<Method methodClass="Core.DateAndTime">asFILETIME</Method>
			<Method methodClass="Core.DateAndTime">asUnixTime</Method>
			<Method methodClass="Core.DateAndTime">day</Method>
			<Method methodClass="Core.DateAndTime">dayOfWeekAbbreviation</Method>
			<Method methodClass="Core.DateAndTime">dayOfWeekName</Method>
			<Method methodClass="Core.DateAndTime">hour</Method>
			<Method methodClass="Core.DateAndTime">isLeapYear</Method>
			<Method methodClass="Core.DateAndTime">julianDate</Method>
			<Method methodClass="Core.DateAndTime">julianDayNumber</Method>
			<Method methodClass="Core.DateAndTime">lilianDayNumber</Method>
			<Method methodClass="Core.DateAndTime">meridianAbbreviation</Method>
			<Method methodClass="Core.DateAndTime">monthAbbreviation</Method>
			<Method methodClass="Core.DateAndTime">monthName</Method>
			<Method methodClass="Core.DateAndTime">nanosecond</Method>
			<Method methodClass="Core.DateAndTime">printStringFormat:</Method>
			<Method methodClass="Core.DateAndTime">timeZoneName</Method>
			<Method methodClass="Core.DateAndTime class">clockPrecision</Method>
			<Method methodClass="Core.DateAndTime class">fromDate:time:</Method>
			<Method methodClass="Core.DateAndTime class">fromUnixTime:</Method>
			<Method methodClass="Core.DateAndTime class">nowUTC</Method>
			<Method methodClass="Core.DateAndTime class">tomorrow</Method>
			<Method methodClass="Core.DateAndTime class">year:day:</Method>
			<Method methodClass="Core.DateAndTime class">year:day:offset:</Method>
			<Method methodClass="Core.DateAndTime class">year:day:seconds:offset:</Method>
			<Method methodClass="Core.DateAndTime class">year:month:day:</Method>
			<Method methodClass="Core.DateAndTime class">yesterday</Method>
			<Method methodClass="Core.DeferredValue">deferredValue</Method>
			<Method methodClass="Core.DeferredValue">hasValue</Method>
			<Method methodClass="Core.DeferredValue class">evaluate:with:at:</Method>
			<Method methodClass="Core.DeferredValue class">evaluate:with:with:at:</Method>
			<Method methodClass="Core.Delay">duration</Method>
			<Method methodClass="Core.Delay">terminateProcess</Method>
			<Method methodClass="Core.Delay class">forSeconds:</Method>
			<Method methodClass="Core.Delay class">highestResolution</Method>
			<Method methodClass="Core.Delay class">lowestResolution</Method>
			<Method methodClass="Core.Delay class">millisecondClockValue</Method>
			<Method methodClass="Core.Delay class">timerResolution</Method>
			<Method methodClass="Core.Delay class">timingProcess</Method>
			<Method methodClass="Core.Delay class">untilMilliseconds:</Method>
			<Method methodClass="Core.Delay class">withTimerResolution:do:</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_aspectGetters</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_aspectGetters:</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_notifier:</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_openLogFile:</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_rootClasses:</Method>
			<Method methodClass="Core.Dictionary">allKeysSatisfy:</Method>
			<Method methodClass="Core.Dictionary">anyKeysSatisfy:</Method>
			<Method methodClass="Core.Dictionary">associationAt:ifPresent:</Method>
			<Method methodClass="Core.Dictionary">at:ifPresent:</Method>
			<Method methodClass="Core.Dictionary">atAll:put:</Method>
			<Method methodClass="Core.Dictionary">changeKey:to:</Method>
			<Method methodClass="Core.Dictionary">includesAssociation:</Method>
			<Method methodClass="Core.Dictionary">keyAtValue:</Method>
			<Method methodClass="Core.Dictionary">removeAllKeys:ifAbsent:</Method>
			<Method methodClass="Core.Dictionary">removeAssociation:</Method>
			<Method methodClass="Core.Dictionary">removeAssociation:ifAbsent:</Method>
			<Method methodClass="Core.Duration">humanReadablePrintString</Method>
			<Method methodClass="Core.Duration">minutes</Method>
			<Method methodClass="Core.Duration">printHumanReadableOn:</Method>
			<Method methodClass="Core.Duration">printStringFormat:</Method>
			<Method methodClass="Core.Duration class">days:hours:minutes:seconds:</Method>
			<Method methodClass="Core.Duration class">hours:minutes:</Method>
			<Method methodClass="Core.Duration class">hours:minutes:seconds:</Method>
			<Method methodClass="External.DWORD">highSWord</Method>
			<Method methodClass="External.DWORD">highSWord:</Method>
			<Method methodClass="External.DWORD">highWord:</Method>
			<Method methodClass="External.DWORD">lowSWord</Method>
			<Method methodClass="External.DWORD">lowSWord:</Method>
			<Method methodClass="External.DWORD">lowWord:</Method>
			<Method methodClass="External.DynamicLinkLibrary">formatMessage:with:</Method>
			<Method methodClass="External.DynamicLinkLibrary">loadString:</Method>
			<Method methodClass="External.DynamicLinkLibrary">versionString</Method>
			<Method methodClass="External.DynamicLinkLibrary class">initializeAfterBinaryLoad</Method>
			<Method methodClass="Kernel.EqualitySearchPolicy">isEquality</Method>
			<Method methodClass="Kernel.EqualitySearchPolicy">keyAtValue:in:ifAbsent:</Method>
			<Method methodClass="Kernel.EqualitySearchPolicy">newLookupTable</Method>
			<Method methodClass="Kernel.EqualitySearchPolicy">newSet</Method>
			<Method methodClass="Kernel.EqualitySearchPolicy">nextIndexOf:in:from:to:</Method>
			<Method methodClass="Core.Error">resignalAsWarning</Method>
			<Method methodClass="Core.Error">warningClass</Method>
			<Method methodClass="Core.Error class">iconStyle</Method>
			<Method methodClass="Kernel.EventMessageSend">asMessageSend</Method>
			<Method methodClass="Kernel.EventsCollection">hasActionsForEvent:</Method>
			<Method methodClass="Core.Exception">abortRetryIgnore</Method>
			<Method methodClass="Core.Exception">hasTag</Method>
			<Method methodClass="Core.Exception">iconStyle</Method>
			<Method methodClass="Core.Exception">isSuppressible</Method>
			<Method methodClass="Core.Exception">okCancel</Method>
			<Method methodClass="Core.Exception">retryUsing:</Method>
			<Method methodClass="Core.Exception">stackTrace:</Method>
			<Method methodClass="Kernel.ExceptionHandlerAbstract">retryUsing:</Method>
			<Method methodClass="External.ExternalArray">binarySearchFor:using:</Method>
			<Method methodClass="External.ExternalArray">detect:</Method>
			<Method methodClass="External.ExternalArray">from:do:</Method>
			<Method methodClass="External.ExternalArray">length:</Method>
			<Method methodClass="External.ExternalArray class">alignment</Method>
			<Method methodClass="External.ExternalMethod">isExternalCall</Method>
			<Method methodClass="External.ExternalMethod">procAddress</Method>
			<Method methodClass="Core.False">asBit</Method>
			<Method methodClass="Core.False">asDword</Method>
			<Method methodClass="Core.False">xor:</Method>
			<Method methodClass="Core.File">beSparse</Method>
			<Method methodClass="Core.File">creationTime</Method>
			<Method methodClass="Core.File">delete</Method>
			<Method methodClass="Core.File">fileType</Method>
			<Method methodClass="Core.File">lastAccessTime</Method>
			<Method methodClass="Core.File">pathName</Method>
			<Method methodClass="Core.File">read:startingAt:count:</Method>
			<Method methodClass="Core.File">readByte</Method>
			<Method methodClass="Core.File">readWriteStream</Method>
			<Method methodClass="Core.File">size:</Method>
			<Method methodClass="Core.File">write:startingAt:count:</Method>
			<Method methodClass="Core.File">writeByte:</Method>
			<Method methodClass="Core.File class">appendPathDelimiter:</Method>
			<Method methodClass="Core.File class">commonPrefixOf:and:</Method>
			<Method methodClass="Core.File class">composeShortStem:extension:</Method>
			<Method methodClass="Core.File class">createDirectoryPath:</Method>
			<Method methodClass="Core.File class">deleteDirectory:</Method>
			<Method methodClass="Core.File class">extensionDelimiter</Method>
			<Method methodClass="Core.File class">forAllDirectoriesIn:do:</Method>
			<Method methodClass="Core.File class">isDirectory:</Method>
			<Method methodClass="Core.File class">isRootPath:</Method>
			<Method methodClass="Core.File class">isWriteable:</Method>
			<Method methodClass="Core.File class">isWriteable:set:</Method>
			<Method methodClass="Core.File class">lastWriteTime:</Method>
			<Method methodClass="Core.File class">locateFilename:in:</Method>
			<Method methodClass="Core.File class">readAllBytes:</Method>
			<Method methodClass="Core.File class">readAllText:</Method>
			<Method methodClass="Core.File class">removePathDelimiter:</Method>
			<Method methodClass="Core.File class">shortPathOf:</Method>
			<Method methodClass="Core.File class">splitDriveFrom:</Method>
			<Method methodClass="Core.File class">temporary</Method>
			<Method methodClass="Core.File class">windowsDirectory</Method>
			<Method methodClass="Core.FileException class">signalOn:</Method>
			<Method methodClass="Core.FileLocator class">absolute</Method>
			<Method methodClass="Core.FileLocator class">imageFolderRelative:</Method>
			<Method methodClass="Core.FileLocator class">imageRelative:</Method>
			<Method methodClass="Core.FileLocator class">installRelative:</Method>
			<Method methodClass="Core.FileStream">beText</Method>
			<Method methodClass="Core.FileStream">externalType</Method>
			<Method methodClass="Core.FileStream">isBufferDirty</Method>
			<Method methodClass="Core.FileStream class">bufferSize</Method>
			<Method methodClass="Core.FileStream class">readWrite:text:</Method>
			<Method methodClass="Core.FileStream class">write:mode:type:</Method>
			<Method methodClass="Core.FileStream class">write:text:</Method>
			<Method methodClass="Core.FileStream class">write:type:</Method>
			<Method methodClass="OS.FILETIME">asDateAndTime</Method>
			<Method methodClass="OS.FILETIME">asFILETIME</Method>
			<Method methodClass="OS.FILETIME">asLocalTime</Method>
			<Method methodClass="OS.FILETIME class">fromUnixTime:</Method>
			<Method methodClass="Core.Float">arcCos</Method>
			<Method methodClass="Core.Float">arcSin</Method>
			<Method methodClass="Core.Float">arcTan</Method>
			<Method methodClass="Core.Float">arcTan:</Method>
			<Method methodClass="Core.Float">cos</Method>
			<Method methodClass="Core.Float">floorLog10</Method>
			<Method methodClass="Core.Float">greaterOrEquals:</Method>
			<Method methodClass="Core.Float">integerPart</Method>
			<Method methodClass="Core.Float">isDenormal</Method>
			<Method methodClass="Core.Float">isInfinite</Method>
			<Method methodClass="Core.Float">lessOrEquals:</Method>
			<Method methodClass="Core.Float">printOn:base:significantFigures:</Method>
			<Method methodClass="Core.Float">printOn:decimalPlaces:</Method>
			<Method methodClass="Core.Float">printOn:significantFigures:</Method>
			<Method methodClass="Core.Float">sin</Method>
			<Method methodClass="Core.Float">sqrt</Method>
			<Method methodClass="Core.Float">tan</Method>
			<Method methodClass="Core.Float class">defaultDecimalExponents</Method>
			<Method methodClass="Core.Float class">defaultDecimalExponents:</Method>
			<Method methodClass="Core.Float class">e</Method>
			<Method methodClass="Core.Float class">emax</Method>
			<Method methodClass="Core.Float class">emin</Method>
			<Method methodClass="Core.Float class">epsilon</Method>
			<Method methodClass="Core.Float class">exceptionMask</Method>
			<Method methodClass="Core.Float class">fmax</Method>
			<Method methodClass="Core.Float class">fmin</Method>
			<Method methodClass="Core.Float class">maxLiteralIntegerExponent</Method>
			<Method methodClass="Core.Float class">radix</Method>
			<Method methodClass="Core.Float class">statusFlags</Method>
			<Method methodClass="Core.FloatingPointException">isOverflow</Method>
			<Method methodClass="Core.FloatingPointException">isUnderflow</Method>
			<Method methodClass="Core.Fraction">isFraction</Method>
			<Method methodClass="Core.Fraction">squared</Method>
			<Method methodClass="Kernel.FullBindingReference">baseClass</Method>
			<Method methodClass="Kernel.FullBindingReference">private</Method>
			<Method methodClass="Kernel.FullBindingReference">scope:</Method>
			<Method methodClass="External.FunctionDescriptor">printDescription</Method>
			<Method methodClass="External.FunctionDescriptor class">initializeCallingConventions</Method>
			<Method methodClass="External.FunctionDescriptor class">initializeExternalRefTypes</Method>
			<Method methodClass="External.FunctionDescriptor class">initializeExternalTypes</Method>
			<Method methodClass="External.FunctionDescriptor class">initializeTypeSizes</Method>
			<Method methodClass="External.FunctionDescriptor class">structTypeForSize:</Method>
			<Method methodClass="External.FunctionDescriptor class">typeFromName:</Method>
			<Method methodClass="Core.GUID">asObject</Method>
			<Method methodClass="Core.GUID">idlString</Method>
			<Method methodClass="Core.GUID">stringSize</Method>
			<Method methodClass="Core.GUID class">alignment</Method>
			<Method methodClass="Core.GUID class">defineFields</Method>
			<Method methodClass="Core.GUID class">fromIdlString:</Method>
			<Method methodClass="Core.GUID class">init:</Method>
			<Method methodClass="Core.GUID class">newUnique</Method>
			<Method methodClass="OS.HRESULT">isSeverityError</Method>
			<Method methodClass="OS.HRESULT">isSigned</Method>
			<Method methodClass="OS.HRESULT">succeeded</Method>
			<Method methodClass="OS.HRESULT class">registerFacility:name:</Method>
			<Method methodClass="OS.HRESULT class">unregisterFacility:</Method>
			<Method methodClass="OS.HRESULTError">errorInfo</Method>
			<Method methodClass="OS.HRESULTError">errorInfo:</Method>
			<Method methodClass="OS.HRESULTError">hresult:</Method>
			<Method methodClass="OS.HRESULTError class">registerFacility:class:</Method>
			<Method methodClass="OS.HRESULTError class">signalCode:facility:</Method>
			<Method methodClass="OS.HRESULTError class">unregisterFacilityClass:</Method>
			<Method methodClass="Kernel.IdentitySearchPolicy">isIdentity</Method>
			<Method methodClass="Kernel.IdentitySearchPolicy">keyAtValue:in:ifAbsent:</Method>
			<Method methodClass="Kernel.IdentitySearchPolicy">newLookupTable</Method>
			<Method methodClass="Kernel.IdentitySearchPolicy">newSet</Method>
			<Method methodClass="Kernel.IdentitySearchPolicy">nextIndexOf:in:from:to:</Method>
			<Method methodClass="Smalltalk.ImageStripper">_buildPreservedMessages</Method>
			<Method methodClass="Smalltalk.ImageStripper">_clearChangedProperties</Method>
			<Method methodClass="Smalltalk.ImageStripper">_disableClassChangeFlagging</Method>
			<Method methodClass="Smalltalk.ImageStripper">_disableDevelopmentSystem</Method>
			<Method methodClass="Smalltalk.ImageStripper">_initialTidy</Method>
			<Method methodClass="Smalltalk.ImageStripper">_logPreservedClasses</Method>
			<Method methodClass="Smalltalk.ImageStripper">_logPreservedMessages</Method>
			<Method methodClass="Smalltalk.ImageStripper">_logRequiredMethodCategories</Method>
			<Method methodClass="Smalltalk.ImageStripper">_preStripTidy</Method>
			<Method methodClass="Smalltalk.ImageStripper">_purgeIcons</Method>
			<Method methodClass="Smalltalk.ImageStripper">_removeClassBuilder:</Method>
			<Method methodClass="Smalltalk.ImageStripper">logLiveClasses</Method>
			<Method methodClass="Smalltalk.ImageStripper">logPackagePrerequisites</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">addToCommandRoute:</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">ambientFontChanged</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">beActive</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">defaultWindowStyle</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">detail:</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">forecolorChanged</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">isEnabled</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">isEnabled:</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">isPersistentView</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">isView</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">isWindowVisible</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">monitorProgressPeriod</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">parentPresenter</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">presenter</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">resourceLib</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">setItem:font:</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">setItem:text:</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">update</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">validateUserInterface</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress class">show</Method>
			<Method methodClass="Kernel.InputState">millisecondClockValue</Method>
			<Method methodClass="Kernel.InputState">windowAt:ifAbsent:</Method>
			<Method methodClass="Kernel.InputState class">maxIdleSleep</Method>
			<Method methodClass="Kernel.InputState class">maxIdleSleep:</Method>
			<Method methodClass="Kernel.InstructionInterpreter">dispatcher</Method>
			<Method methodClass="Kernel.InstructionInterpreter">sendSelfSelector:args:</Method>
			<Method methodClass="Kernel.InstructionInterpreter">unused</Method>
			<Method methodClass="Kernel.InstructionInterpreter">unused:with:</Method>
			<Method methodClass="Kernel.InstructionInterpreter">unused:with:with:</Method>
			<Method methodClass="Core.Integer">&amp;</Method>
			<Method methodClass="Core.Integer">asCharacter</Method>
			<Method methodClass="Core.Integer">asDword</Method>
			<Method methodClass="Core.Integer">asSDword</Method>
			<Method methodClass="Core.Integer">bitAt:</Method>
			<Method methodClass="Core.Integer">bitAt:put:</Method>
			<Method methodClass="Core.Integer">clearBit:</Method>
			<Method methodClass="Core.Integer">factorial</Method>
			<Method methodClass="Core.Integer">factorialIterative</Method>
			<Method methodClass="External.INTEGER">isSigned</Method>
			<Method methodClass="Core.Integer">gcdbin:</Method>
			<Method methodClass="Core.Integer">highByte</Method>
			<Method methodClass="Core.Integer">highPartSigned</Method>
			<Method methodClass="Core.Integer">integerPart</Method>
			<Method methodClass="Core.Integer">isPrime</Method>
			<Method methodClass="Core.Integer">lcm:</Method>
			<Method methodClass="Core.Integer">printStringBase:</Method>
			<Method methodClass="Core.Integer">setBit:</Method>
			<Method methodClass="External.INTEGER class">decompileDefinition</Method>
			<Method methodClass="External.IntegerBytes">asObject</Method>
			<Method methodClass="External.IntegerBytes class">pointerFieldType</Method>
			<Method methodClass="Core.Interval">start:</Method>
			<Method methodClass="Core.Interval">step:</Method>
			<Method methodClass="Core.Interval class">from:to:</Method>
			<Method methodClass="External.InvalidExternalCall">argument</Method>
			<Method methodClass="External.InvalidExternalCall">type</Method>
			<Method methodClass="OS.InvariantLocale">isInstalled</Method>
			<Method methodClass="OS.KernelLibrary">addAtom:</Method>
			<Method methodClass="OS.KernelLibrary">attachConsole:</Method>
			<Method methodClass="OS.KernelLibrary">beep:dwDuration:</Method>
			<Method methodClass="OS.KernelLibrary">debugBreak</Method>
			<Method methodClass="OS.KernelLibrary">expandEnvironmentStrings:</Method>
			<Method methodClass="OS.KernelLibrary">findResource:lpName:lpType:</Method>
			<Method methodClass="OS.KernelLibrary">getACP</Method>
			<Method methodClass="OS.KernelLibrary">getCommandLine</Method>
			<Method methodClass="OS.KernelLibrary">getConsoleTitle:nSize:</Method>
			<Method methodClass="OS.KernelLibrary">getCurrentThread</Method>
			<Method methodClass="OS.KernelLibrary">getCurrentThreadId</Method>
			<Method methodClass="OS.KernelLibrary">getDiskFreeSpace:lpSectorsPerCluster:lpBytesPerSector:lpNumberOfFreeClusters:lpTotalNumberOfClusters:</Method>
			<Method methodClass="OS.KernelLibrary">getDiskFreeSpaceEx:lpFreeBytesAvailable:lpTotalNumberOfBytes:lpTotalNumberOfFreeBytes:</Method>
			<Method methodClass="OS.KernelLibrary">getLocaleInfoEx:lCType:lpLCData:cchData:</Method>
			<Method methodClass="OS.KernelLibrary">getThreadTimes:lpCreationTime:lpExitTime:lpKernelTime:lpUserTime:</Method>
			<Method methodClass="OS.KernelLibrary">getTickCount</Method>
			<Method methodClass="OS.KernelLibrary">getUserDefaultLCID</Method>
			<Method methodClass="OS.KernelLibrary">getVolumeInformation:lpVolumeNameBuffer:nVolumeNameSize:lpVolumeSerialNumber:lpMaximumComponentLength:lpFileSystemFlags:lpFileSystemNameBuffer:nFileSystemNameSize:</Method>
			<Method methodClass="OS.KernelLibrary">getWindowsDirectory:uSize:</Method>
			<Method methodClass="OS.KernelLibrary">globalFree:</Method>
			<Method methodClass="OS.KernelLibrary">isWindows7OrGreater</Method>
			<Method methodClass="OS.KernelLibrary">isWindows7SP1OrGreater</Method>
			<Method methodClass="OS.KernelLibrary">isWindows8Point1OrGreater</Method>
			<Method methodClass="OS.KernelLibrary">isWindowsServer</Method>
			<Method methodClass="OS.KernelLibrary">isWindowsVistaOrGreater</Method>
			<Method methodClass="OS.KernelLibrary">isWindowsVistaSP1OrGreater</Method>
			<Method methodClass="OS.KernelLibrary">isWindowsVistaSP2OrGreater</Method>
			<Method methodClass="OS.KernelLibrary">isWindowsXPOrGreater</Method>
			<Method methodClass="OS.KernelLibrary">isWow64</Method>
			<Method methodClass="OS.KernelLibrary">loadResource:hResInfo:</Method>
			<Method methodClass="OS.KernelLibrary">localFree:</Method>
			<Method methodClass="OS.KernelLibrary">lockResource:</Method>
			<Method methodClass="OS.KernelLibrary">moveFileEx:lpNewFileName:dwFlags:</Method>
			<Method methodClass="OS.KernelLibrary">pulseEvent:</Method>
			<Method methodClass="OS.KernelLibrary">releaseMutex:</Method>
			<Method methodClass="OS.KernelLibrary">resetEvent:</Method>
			<Method methodClass="OS.KernelLibrary">setEvent:</Method>
			<Method methodClass="OS.KernelLibrary">setStdHandle:hHandle:</Method>
			<Method methodClass="OS.KernelLibrary">setVolumeLabel:lpVolumeName:</Method>
			<Method methodClass="OS.KernelLibrary">sizeOfResource:hResInfo:</Method>
			<Method methodClass="OS.KernelLibrary">sleep:</Method>
			<Method methodClass="OS.KernelLibrary">sleepEx:bAlertable:</Method>
			<Method methodClass="OS.KernelLibrary">terminateProcessId:</Method>
			<Method methodClass="OS.KernelLibrary">threadSetLastError:</Method>
			<Method methodClass="OS.KernelLibrary">virtualProtect:dwSize:flNewProtect:lpflOldProtect:</Method>
			<Method methodClass="OS.KernelLibrary">waitForSingleObject:dwMilliseconds:</Method>
			<Method methodClass="OS.KernelLibrary">winExec:uCmdShow:</Method>
			<Method methodClass="Core.LargeInteger">limbSize</Method>
			<Method methodClass="Core.LimitedWriteStream">checkLimit</Method>
			<Method methodClass="Core.LimitedWriteStream">limit</Method>
			<Method methodClass="Core.LimitedWriteStream">limit:</Method>
			<Method methodClass="Core.LimitedWriteStream">limitBlock</Method>
			<Method methodClass="Core.LimitedWriteStream">limitBlock:</Method>
			<Method methodClass="Core.LimitedWriteStream">originalContents</Method>
			<Method methodClass="Core.LimitedWriteStream">visitedBlock:</Method>
			<Method methodClass="Core.LimitedWriteStream class">over:limit:</Method>
			<Method methodClass="Core.LimitedWriteStream class">with:from:to:</Method>
			<Method methodClass="Core.LinkedList">removeAll</Method>
			<Method methodClass="Core.LinkedList">removeAllSuchThat:</Method>
			<Method methodClass="Core.Locale">boolFormat</Method>
			<Method methodClass="Core.Locale">dayOfWeek:</Method>
			<Method methodClass="Core.Locale">displayDate:on:</Method>
			<Method methodClass="Core.Locale">displayTime:on:</Method>
			<Method methodClass="Core.Locale">hashString:</Method>
			<Method methodClass="Core.Locale">indexOfMonth:</Method>
			<Method methodClass="Core.Locale">printFloat:</Method>
			<Method methodClass="Core.Locale">printFloat:format:</Method>
			<Method methodClass="Core.Locale">subLanguageId</Method>
			<Method methodClass="Core.Locale class">installedSystemLocales</Method>
			<Method methodClass="Core.Locale class">installedUILanguages</Method>
			<Method methodClass="Core.Locale class">makeLangId:subLang:</Method>
			<Method methodClass="Core.Locale class">makeLcId:sortId:</Method>
			<Method methodClass="Core.Locale class">onSettingChanged:</Method>
			<Method methodClass="Core.Locale class">standard:</Method>
			<Method methodClass="Core.Locale class">supportedSystemLocales</Method>
			<Method methodClass="OS.LocalFILETIME">asLocalTime</Method>
			<Method methodClass="Core.LookupTable">allKeysSatisfy:</Method>
			<Method methodClass="Core.LookupTable">anyKeysSatisfy:</Method>
			<Method methodClass="Core.LookupTable">includesAssociation:</Method>
			<Method methodClass="Core.Magnitude">clampBetween:and:</Method>
			<Method methodClass="External.Memory class">copyBytesToGlobalHeap:</Method>
			<Method methodClass="External.Memory class">HeapMinimize</Method>
			<Method methodClass="Kernel.MemoryManager">bytesUsedByObject:</Method>
			<Method methodClass="Kernel.MemoryManager">finalizer</Method>
			<Method methodClass="Kernel.MemoryManager">instanceStats:</Method>
			<Method methodClass="Kernel.MemoryManager">maxObjects</Method>
			<Method methodClass="Kernel.MemoryManager">undertaker</Method>
			<Method methodClass="Kernel.MemoryManager">undertaker:</Method>
			<Method methodClass="Kernel.MemoryManager class">gcInterval:</Method>
			<Method methodClass="Core.Message">argument</Method>
			<Method methodClass="Core.Message">arguments:</Method>
			<Method methodClass="Core.Message class">selector:argument:</Method>
			<Method methodClass="External.MessageCallback">closure</Method>
			<Method methodClass="External.MessageCallback">closure:</Method>
			<Method methodClass="Core.MessageSendAbstract">cull:cull:cull:cull:</Method>
			<Method methodClass="Core.MessageSendAbstract">deferredValue</Method>
			<Method methodClass="Kernel.MessageSendCollector">sendSelfSelector:args:</Method>
			<Method methodClass="Core.Metaclass">absoluteReference</Method>
			<Method methodClass="Core.Metaclass">comment</Method>
			<Method methodClass="Core.Metaclass">comment:</Method>
			<Method methodClass="Core.Metaclass">importedNamespacesDo:</Method>
			<Method methodClass="Core.Metaclass">instanceClass:</Method>
			<Method methodClass="Kernel.MethodAnnotations">withSelector:</Method>
			<Method methodClass="Kernel.MethodAnnotations class">fromPairs:</Method>
			<Method methodClass="Core.MethodCategory">addMethods:</Method>
			<Method methodClass="Core.MethodCategory">behaviors</Method>
			<Method methodClass="Core.MethodCategory">removeMethods:</Method>
			<Method methodClass="Core.MethodCategory">selectorsInBehavior:</Method>
			<Method methodClass="Core.MethodCategory class">addPseud:</Method>
			<Method methodClass="Core.MethodCategory class">allMethodCategories</Method>
			<Method methodClass="Core.MethodCategory class">deprecatedMethods</Method>
			<Method methodClass="Core.MethodCategory class">primitives</Method>
			<Method methodClass="Core.MethodCategory class">private</Method>
			<Method methodClass="Core.MethodCategory class">pseudPrefix</Method>
			<Method methodClass="Core.MethodCategory class">public</Method>
			<Method methodClass="Core.MethodCategory class">removePseud:</Method>
			<Method methodClass="OS.MSG">isInput</Method>
			<Method methodClass="OS.MSG">isKeyboardInput</Method>
			<Method methodClass="OS.MSG">isKeyPress:</Method>
			<Method methodClass="OS.MSG">isMouseInput</Method>
			<Method methodClass="OS.MSGBOXPARAMSW">dwLanguageId:</Method>
			<Method methodClass="Core.Mutex">critical:ifLocked:</Method>
			<Method methodClass="Core.Mutex">owner</Method>
			<Method methodClass="Kernel.Namespace class">allBehaviors</Method>
			<Method methodClass="Kernel.Namespace class">allBindings</Method>
			<Method methodClass="Kernel.Namespace class">asBag</Method>
			<Method methodClass="Kernel.Namespace class">associationAt:ifPresent:</Method>
			<Method methodClass="Kernel.Namespace class">asSortedCollection</Method>
			<Method methodClass="Kernel.Namespace class">asSortedCollection:</Method>
			<Method methodClass="Kernel.Namespace class">at:ifPresent:</Method>
			<Method methodClass="Kernel.Namespace class">changeKey:to:</Method>
			<Method methodClass="Kernel.Namespace class">detect:</Method>
			<Method methodClass="Kernel.Namespace class">keyAtValue:</Method>
			<Method methodClass="Kernel.Namespace class">removeAllKeys:ifAbsent:</Method>
			<Method methodClass="Kernel.Namespace class">variableRenamed:from:</Method>
			<Method methodClass="Core.Notification">isSuppressible</Method>
			<Method methodClass="Core.Notification">isSuppressible:</Method>
			<Method methodClass="Core.Notification class">deprecated</Method>
			<Method methodClass="Core.Notification class">iconStyle</Method>
			<Method methodClass="OS.NTLibrary">isWine</Method>
			<Method methodClass="OS.NTLibrary">rtlNtStatusToDosError:</Method>
			<Method methodClass="Kernel.NullEventsCollection">hasActionsForEvent:</Method>
			<Method methodClass="Core.Number">arcCos</Method>
			<Method methodClass="Core.Number">arcSin</Method>
			<Method methodClass="Core.Number">arcTan</Method>
			<Method methodClass="Core.Number">arcTan:</Method>
			<Method methodClass="Core.Number">asFloatD</Method>
			<Method methodClass="Core.Number">asFloatE</Method>
			<Method methodClass="Core.Number">asFloatQ</Method>
			<Method methodClass="Core.Number">closeTo:</Method>
			<Method methodClass="Core.Number">cos</Method>
			<Method methodClass="Core.Number">degreesToRadians</Method>
			<Method methodClass="Core.Number">hour</Method>
			<Method methodClass="Core.Number">integerPart</Method>
			<Method methodClass="Core.Number">isFraction</Method>
			<Method methodClass="Core.Number">isNumber</Method>
			<Method methodClass="Core.Number">minutes</Method>
			<Method methodClass="Core.Number">radiansToDegrees</Method>
			<Method methodClass="Core.Number">sin</Method>
			<Method methodClass="Core.Number">sqrt</Method>
			<Method methodClass="Core.Number">tan</Method>
			<Method methodClass="OS.NUMBERFMTW">grouping</Method>
			<Method methodClass="Core.Object">addDependent:</Method>
			<Method methodClass="Core.Object">basicDoesNotUnderstand:</Method>
			<Method methodClass="Core.Object">becomeAn:</Method>
			<Method methodClass="Core.Object">broadcast:</Method>
			<Method methodClass="Core.Object">broadcast:with:</Method>
			<Method methodClass="Core.Object">deepCopy</Method>
			<Method methodClass="Core.Object">instVarNamed:</Method>
			<Method methodClass="Core.Object">isFinalizable</Method>
			<Method methodClass="Core.Object">isIndexable</Method>
			<Method methodClass="Core.Object">isMemberOf:</Method>
			<Method methodClass="Core.Object">isNumber</Method>
			<Method methodClass="Core.Object">literalStoreEvaluationString</Method>
			<Method methodClass="Core.Object">noEventsDo:</Method>
			<Method methodClass="Core.Object">oneWayBecome:</Method>
			<Method methodClass="Core.Object">perform:with:with:with:with:</Method>
			<Method methodClass="Core.Object">propertyAt:</Method>
			<Method methodClass="Core.Object">release</Method>
			<Method methodClass="Core.Object">removeAllProperties</Method>
			<Method methodClass="Core.Object">removeDependent:</Method>
			<Method methodClass="Core.Object">shouldNotImplement</Method>
			<Method methodClass="Core.Object">storeString</Method>
			<Method methodClass="Core.Object">subclassResponsibility</Method>
			<Method methodClass="Core.Object">swappingBecome:</Method>
			<Method methodClass="Core.Object">trigger:withArguments:</Method>
			<Method methodClass="Core.Object">when:send:to:with:</Method>
			<Method methodClass="Core.Object">when:send:to:withArguments:</Method>
			<Method methodClass="Core.Object">when:sendTo:</Method>
			<Method methodClass="Core.Object class">fromBinaryStoreBytes:context:</Method>
			<Method methodClass="Core.Object class">fromLiteralStoreArray:</Method>
			<Method methodClass="Core.Object class">fromLiteralStoreArray:context:</Method>
			<Method methodClass="Core.Object class">initializeDependencyMechanism</Method>
			<Method methodClass="Core.Object class">initializeEventsRegister</Method>
			<Method methodClass="Core.Object class">initializePropertyRegister</Method>
			<Method methodClass="Core.Object class">resourcesLocator</Method>
			<Method methodClass="Core.OrderedCollection">addAllFirst:</Method>
			<Method methodClass="Core.OrderedCollection">findFirst:</Method>
			<Method methodClass="Core.OrderedCollection">removeAll</Method>
			<Method methodClass="Core.OrderedCollection">removeAllSuchThat:</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">dwBuildNumber:</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">dwPlatformId:</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">wServicePackMinor:</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">wSuiteMask:</Method>
			<Method methodClass="Kernel.Package">about</Method>
			<Method methodClass="Kernel.Package">aboutBlock:</Method>
			<Method methodClass="Kernel.Package">aboutBlockBytes:</Method>
			<Method methodClass="Kernel.Package">addLooseMethod:</Method>
			<Method methodClass="Kernel.Package">addPackagedMethod:</Method>
			<Method methodClass="Kernel.Package">addResourceIdentifier:</Method>
			<Method methodClass="Kernel.Package">addVariableNamed:</Method>
			<Method methodClass="Kernel.Package">aliasVariableNames</Method>
			<Method methodClass="Kernel.Package">allDependentPackages</Method>
			<Method methodClass="Kernel.Package">allMethods</Method>
			<Method methodClass="Kernel.Package">allSourceObjects</Method>
			<Method methodClass="Kernel.Package">basicAddClass:</Method>
			<Method methodClass="Kernel.Package">basicAddVariableNamed:</Method>
			<Method methodClass="Kernel.Package">basicPackageVersion</Method>
			<Method methodClass="Kernel.Package">behaviors</Method>
			<Method methodClass="Kernel.Package">binaryGlobalNames:</Method>
			<Method methodClass="Kernel.Package">binaryVariableNames</Method>
			<Method methodClass="Kernel.Package">canShowAbout</Method>
			<Method methodClass="Kernel.Package">classDefinitionsFileName</Method>
			<Method methodClass="Kernel.Package">classNames:</Method>
			<Method methodClass="Kernel.Package">comment</Method>
			<Method methodClass="Kernel.Package">comment:</Method>
			<Method methodClass="Kernel.Package">errorFileCorrupt</Method>
			<Method methodClass="Kernel.Package">getPrerequisites</Method>
			<Method methodClass="Kernel.Package">globalAliases:</Method>
			<Method methodClass="Kernel.Package">globalNames</Method>
			<Method methodClass="Kernel.Package">imageStripper:</Method>
			<Method methodClass="Kernel.Package">imageStripperBytes</Method>
			<Method methodClass="Kernel.Package">includesResourceIdentifier:</Method>
			<Method methodClass="Kernel.Package">includesVariableNamed:</Method>
			<Method methodClass="Kernel.Package">isBasePackage</Method>
			<Method methodClass="Kernel.Package">isDefaultPackage</Method>
			<Method methodClass="Kernel.Package">isInstalled</Method>
			<Method methodClass="Kernel.Package">load</Method>
			<Method methodClass="Kernel.Package">looseResourceIdentifiers</Method>
			<Method methodClass="Kernel.Package">manualPrerequisites:</Method>
			<Method methodClass="Kernel.Package">membershipChanged</Method>
			<Method methodClass="Kernel.Package">methodsOfClass:</Method>
			<Method methodClass="Kernel.Package">nameForResourceIdentifier:</Method>
			<Method methodClass="Kernel.Package">okToSaveOrDeploy</Method>
			<Method methodClass="Kernel.Package">okToUninstall</Method>
			<Method methodClass="Kernel.Package">onClassRemoved:</Method>
			<Method methodClass="Kernel.Package">onClassRenamed:from:to:</Method>
			<Method methodClass="Kernel.Package">onVariableRenamed:from:</Method>
			<Method methodClass="Kernel.Package">packageFolder</Method>
			<Method methodClass="Kernel.Package">packageVersion</Method>
			<Method methodClass="Kernel.Package">packageVersion:</Method>
			<Method methodClass="Kernel.Package">preDeclareClassesOnLoad:</Method>
			<Method methodClass="Kernel.Package">predeclareClassesSetting</Method>
			<Method methodClass="Kernel.Package">privateUninstall</Method>
			<Method methodClass="Kernel.Package">rebaseTo:</Method>
			<Method methodClass="Kernel.Package">removeAllProperties</Method>
			<Method methodClass="Kernel.Package">removePackagedMethod:</Method>
			<Method methodClass="Kernel.Package">removeVariableNamed:</Method>
			<Method methodClass="Kernel.Package">resetChangeFlags</Method>
			<Method methodClass="Kernel.Package">scriptAt:put:</Method>
			<Method methodClass="Kernel.Package">setAliasVariableNames:</Method>
			<Method methodClass="Kernel.Package">setClassNames:</Method>
			<Method methodClass="Kernel.Package">setManualPrerequisites:</Method>
			<Method methodClass="Kernel.Package">setMethodNames:</Method>
			<Method methodClass="Kernel.Package">setPrerequisites:</Method>
			<Method methodClass="Kernel.Package">setVariableNames:</Method>
			<Method methodClass="Kernel.Package">timestamp</Method>
			<Method methodClass="Kernel.Package">timestamp:</Method>
			<Method methodClass="Kernel.Package">uninstall</Method>
			<Method methodClass="Kernel.Package">untracedGlobals:</Method>
			<Method methodClass="Kernel.Package">untracedVariables:</Method>
			<Method methodClass="Kernel.Package">updateNamesToFullyQualified</Method>
			<Method methodClass="Kernel.Package">variableNames:</Method>
			<Method methodClass="Kernel.Package">variables</Method>
			<Method methodClass="Kernel.Package">versionIfRequired</Method>
			<Method methodClass="Kernel.Package">vmVersionCheck:</Method>
			<Method methodClass="Kernel.Package class">binaryPacLoader:</Method>
			<Method methodClass="Kernel.Package class">clashSignal</Method>
			<Method methodClass="Kernel.Package class">defaultSortBlock</Method>
			<Method methodClass="Kernel.Package class">fromFile:</Method>
			<Method methodClass="Kernel.Package class">packageFileVersion</Method>
			<Method methodClass="Kernel.Package class">preDeclareClassesOnLoad:</Method>
			<Method methodClass="Kernel.Package class">stbConvertFromVersion2:</Method>
			<Method methodClass="Kernel.Package class">stbConvertFromVersion3:</Method>
			<Method methodClass="Kernel.Package class">stbConvertFromVersion4:</Method>
			<Method methodClass="Kernel.Package class">stbConvertFromVersion5:</Method>
			<Method methodClass="Kernel.Package class">stbConvertFromVersion6:</Method>
			<Method methodClass="Kernel.Package class">stbConvertFromVersion7:</Method>
			<Method methodClass="Kernel.Package class">uncommitted</Method>
			<Method methodClass="Core.PluggableLookupTable class">new:searchPolicy:</Method>
			<Method methodClass="Core.PluggableSet class">new:searchPolicy:</Method>
			<Method methodClass="Core.PositionableStream">nextDOUBLE</Method>
			<Method methodClass="Core.PositionableStream">nextDWORD</Method>
			<Method methodClass="Core.PositionableStream">nextFLOAT</Method>
			<Method methodClass="Core.PositionableStream">nextSWORD</Method>
			<Method methodClass="Core.PositionableStream">nextWORD</Method>
			<Method methodClass="Core.PositionableStream">originalContents</Method>
			<Method methodClass="Core.PositionableStream">readLimit:</Method>
			<Method methodClass="Kernel.PostedActionWindow">isPersistentView</Method>
			<Method methodClass="Kernel.PostedActionWindow">isView</Method>
			<Method methodClass="Kernel.PostedActionWindow">setTimer:interval:</Method>
			<Method methodClass="Core.Process">canDebug</Method>
			<Method methodClass="Core.Process">debugger:</Method>
			<Method methodClass="Core.Process">fpControl:</Method>
			<Method methodClass="Core.Process">isSuspended</Method>
			<Method methodClass="Core.Process">isTerminated</Method>
			<Method methodClass="Core.Process">isWaiting</Method>
			<Method methodClass="Core.Process">resumeUnconditionally</Method>
			<Method methodClass="Core.Process">setPriority:</Method>
			<Method methodClass="Core.Process">stackTrace:</Method>
			<Method methodClass="Core.Process">suspendUnconditionally</Method>
			<Method methodClass="Core.Process">threadSync</Method>
			<Method methodClass="Kernel.ProcessorScheduler">highestPriority</Method>
			<Method methodClass="Kernel.ProcessorScheduler">idleProcess</Method>
			<Method methodClass="Kernel.ProcessorScheduler">mainProcess</Method>
			<Method methodClass="Kernel.ProcessorScheduler">pendingTerminations</Method>
			<Method methodClass="Kernel.ProcessorScheduler">processesAt:</Method>
			<Method methodClass="Kernel.ProcessorScheduler">sleep:</Method>
			<Method methodClass="Kernel.ProcessorScheduler">suspendActive</Method>
			<Method methodClass="Kernel.ProcessorScheduler">unregisterCOMStubs</Method>
			<Method methodClass="Kernel.ProcessorScheduler">userBackgroundPriority</Method>
			<Method methodClass="Kernel.ProcessorScheduler">userInterruptPriority</Method>
			<Method methodClass="Kernel.ProcessorScheduler class">interruptSelectors</Method>
			<Method methodClass="Kernel.ProcessorScheduler class">newPriorities:activeProcess:</Method>
			<Method methodClass="Kernel.PropertyManager">propertyOf:at:</Method>
			<Method methodClass="Kernel.PropertyManager">propertyOf:at:ifAbsentPut:</Method>
			<Method methodClass="Kernel.PropertyManager">removePropertyOf:at:</Method>
			<Method methodClass="Kernel.ProtoObject">oneWayBecome:</Method>
			<Method methodClass="Kernel.RelativeBindingReference">asFullyQualifiedReference</Method>
			<Method methodClass="Kernel.RelativeBindingReference">baseClass</Method>
			<Method methodClass="Kernel.RelativeBindingReference">private</Method>
			<Method methodClass="UI.ResourceIdentifier">exists</Method>
			<Method methodClass="UI.ResourceIdentifier">exportedFileName</Method>
			<Method methodClass="UI.ResourceIdentifier">hiddenClasses</Method>
			<Method methodClass="UI.ResourceIdentifier">icon:</Method>
			<Method methodClass="UI.ResourceIdentifier">resourceOrNil</Method>
			<Method methodClass="UI.ResourceIdentifier class">forMethod:</Method>
			<Method methodClass="UI.ResourceIdentifier class">viewResourceCategoryName</Method>
			<Method methodClass="External.ResourceLibrary class">open:withAlias:</Method>
			<Method methodClass="Root class">nestedClasses</Method>
			<Method methodClass="Core.RunArray">asRunArray</Method>
			<Method methodClass="Core.RunArray">runStartAndValueAt:</Method>
			<Method methodClass="Core.RunArray">runStartAt:</Method>
			<Method methodClass="Core.RunArray class">with:with:with:</Method>
			<Method methodClass="Core.RunArray class">with:with:with:with:</Method>
			<Method methodClass="Core.RunArray class">with:with:with:with:with:</Method>
			<Method methodClass="Core.ScaledDecimal">integerPart</Method>
			<Method methodClass="External.SDWORD">isSigned</Method>
			<Method methodClass="Core.SearchPolicy">isEquality</Method>
			<Method methodClass="Core.SearchPolicy">isIdentity</Method>
			<Method methodClass="Core.SearchPolicy">keyAtValue:in:ifAbsent:</Method>
			<Method methodClass="Core.SearchPolicy">newLookupTable</Method>
			<Method methodClass="Core.SearchPolicy">newSet</Method>
			<Method methodClass="Core.SearchPolicy">nextIndexOf:in:from:to:</Method>
			<Method methodClass="Core.SearchPolicy class">always</Method>
			<Method methodClass="Core.SearchPolicy class">caseInsensitive</Method>
			<Method methodClass="Core.SearchPolicy class">never</Method>
			<Method methodClass="Core.SearchPolicy class">newCompareBlock:hashBlock:</Method>
			<Method methodClass="Core.Semaphore">pulse</Method>
			<Method methodClass="Core.Semaphore">terminateProcess</Method>
			<Method methodClass="Core.SequenceableCollection">after:</Method>
			<Method methodClass="Core.SequenceableCollection">asRunArray</Method>
			<Method methodClass="Core.SequenceableCollection">at:ifPresent:</Method>
			<Method methodClass="Core.SequenceableCollection">atAll:put:</Method>
			<Method methodClass="Core.SequenceableCollection">before:</Method>
			<Method methodClass="Core.SequenceableCollection">binarySearchFor:using:</Method>
			<Method methodClass="Core.SequenceableCollection">copyReplaceAll:with:</Method>
			<Method methodClass="Core.SequenceableCollection">copyReplaceFrom:to:with:</Method>
			<Method methodClass="Core.SequenceableCollection">copyReplaceFrom:to:withObject:</Method>
			<Method methodClass="Core.SequenceableCollection">copyWith:atIndex:</Method>
			<Method methodClass="Core.SequenceableCollection">encodeOn:nextPutAll:</Method>
			<Method methodClass="Core.SequenceableCollection">fifth</Method>
			<Method methodClass="Core.SequenceableCollection">findFirst:</Method>
			<Method methodClass="Core.SequenceableCollection">findLast:</Method>
			<Method methodClass="Core.SequenceableCollection">fourth</Method>
			<Method methodClass="Core.SequenceableCollection">from:do:</Method>
			<Method methodClass="Core.SequenceableCollection">from:to:do:</Method>
			<Method methodClass="Core.SequenceableCollection">includesAnyOf:</Method>
			<Method methodClass="Core.SequenceableCollection">indexOf:startingAt:</Method>
			<Method methodClass="Core.SequenceableCollection">indexOfSubCollection:</Method>
			<Method methodClass="Core.SequenceableCollection">indexOfSubCollection:startingAt:ifAbsent:</Method>
			<Method methodClass="Core.SequenceableCollection">keyAtValue:</Method>
			<Method methodClass="Core.SequenceableCollection">lastIndexOf:ifAbsent:</Method>
			<Method methodClass="Core.SequenceableCollection">occurrencesOfSubCollection:</Method>
			<Method methodClass="Core.SequenceableCollection">pairsDo:</Method>
			<Method methodClass="Core.SequenceableCollection">prevIndexOfSubCollection:startingAt:ifAbsent:</Method>
			<Method methodClass="Core.SequenceableCollection">randomizeUsing:</Method>
			<Method methodClass="Core.SequenceableCollection">replaceAll:with:</Method>
			<Method methodClass="Core.SequenceableCollection">replaceFrom:to:with:</Method>
			<Method methodClass="Core.SequenceableCollection">sixth</Method>
			<Method methodClass="Core.SequenceableCollection">swap:with:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">add:after:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">add:before:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">addAll:after:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">addAll:before:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">addAllFirst:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">removeLast</Method>
			<Method methodClass="Core.SequencedStream">isPositionable</Method>
			<Method methodClass="Core.SequencedStream">skipWhileMatchAll:</Method>
			<Method methodClass="Core.SequencedStream">upToAll:</Method>
			<Method methodClass="Core.SessionManager">appIdString</Method>
			<Method methodClass="Core.SessionManager">applicationShortName</Method>
			<Method methodClass="Core.SessionManager">argvLegacyOptionsRemoved</Method>
			<Method methodClass="Core.SessionManager">backupOnImageSave</Method>
			<Method methodClass="Core.SessionManager">closeEventLog</Method>
			<Method methodClass="Core.SessionManager">computerName</Method>
			<Method methodClass="Core.SessionManager">errorLogName</Method>
			<Method methodClass="Core.SessionManager">getCommandLine</Method>
			<Method methodClass="Core.SessionManager">getenv:</Method>
			<Method methodClass="Core.SessionManager">imageVersion</Method>
			<Method methodClass="Core.SessionManager">isBinaryLooseMethodInstallationAllowed</Method>
			<Method methodClass="Core.SessionManager">isDebug</Method>
			<Method methodClass="Core.SessionManager">isRuntime</Method>
			<Method methodClass="Core.SessionManager">logComment:</Method>
			<Method methodClass="Core.SessionManager">logErrorEvent:</Method>
			<Method methodClass="Core.SessionManager">logInformationEvent:</Method>
			<Method methodClass="Core.SessionManager">logSuccessEvent:</Method>
			<Method methodClass="Core.SessionManager">logWarningEvent:</Method>
			<Method methodClass="Core.SessionManager">onQueryWindowsShutdown</Method>
			<Method methodClass="Core.SessionManager">productRegistryKey</Method>
			<Method methodClass="Core.SessionManager">registerServer:</Method>
			<Method methodClass="Core.SessionManager">saveImage</Method>
			<Method methodClass="Core.SessionManager">saveImage:</Method>
			<Method methodClass="Core.SessionManager">sessionId</Method>
			<Method methodClass="Core.SessionManager">setenv:value:</Method>
			<Method methodClass="Core.SessionManager">stderr:</Method>
			<Method methodClass="Core.SessionManager">stdin:</Method>
			<Method methodClass="Core.SessionManager">stdout:</Method>
			<Method methodClass="Core.SessionManager">systemDirectory</Method>
			<Method methodClass="Core.SessionManager">trace:</Method>
			<Method methodClass="Core.SessionManager">traceLine:</Method>
			<Method methodClass="Core.SessionManager">unregisterServer:</Method>
			<Method methodClass="Core.SessionManager">userName</Method>
			<Method methodClass="Core.SessionManager">windowsDirectory</Method>
			<Method methodClass="Core.SessionManager class">installNew</Method>
			<Method methodClass="Core.SessionManager class">isRuntime</Method>
			<Method methodClass="Core.Set">copyWithoutDuplicates</Method>
			<Method methodClass="Core.Set">elements</Method>
			<Method methodClass="Core.Set">elements:</Method>
			<Method methodClass="Core.Set">isHealthy</Method>
			<Method methodClass="Core.Set">removeAll</Method>
			<Method methodClass="Core.Set class">preferredSizesFrom:</Method>
			<Method methodClass="Core.SharedLookupTable">allKeysSatisfy:</Method>
			<Method methodClass="Core.SharedLookupTable">anyKeysSatisfy:</Method>
			<Method methodClass="Core.SharedLookupTable">changeKey:to:</Method>
			<Method methodClass="Core.SharedLookupTable">includesAssociation:</Method>
			<Method methodClass="Core.SharedLookupTable">mutex</Method>
			<Method methodClass="Core.SharedQueue">removeAll</Method>
			<Method methodClass="Core.SharedSet">mutex</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathCompactPath:pszPath:dx:</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathCompactPathEx:pszSrc:cchMax:dwFlags:</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathFindNextComponent:</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathIsURL:</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathParseIconLocation:</Method>
			<Method methodClass="Core.Signal">makeNonResumable</Method>
			<Method methodClass="Core.Signal">resumable:</Method>
			<Method methodClass="Core.SmallInteger">&amp;</Method>
			<Method methodClass="Core.SmallInteger">deepCopy</Method>
			<Method methodClass="Core.SmallInteger">printStringBase:</Method>
			<Method methodClass="Core.SmallInteger class">hasImmediateInstances</Method>
			<Method methodClass="Core.SmallInteger class">maxBytes</Method>
			<Method methodClass="Core.SmallInteger class">maximum</Method>
			<Method methodClass="Core.SmallInteger class">minimum</Method>
			<Method methodClass="Smalltalk class">classAdded:</Method>
			<Method methodClass="Smalltalk class">classesByGuid</Method>
			<Method methodClass="Smalltalk class">classUpdated:</Method>
			<Method methodClass="Smalltalk class">oldNames</Method>
			<Method methodClass="Kernel.SmalltalkLocale">dayOfWeekShortAbbreviation:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">englishLanguageName</Method>
			<Method methodClass="Kernel.SmalltalkLocale">firstDayOfWeek</Method>
			<Method methodClass="Kernel.SmalltalkLocale">indexOfMonth:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">integerBase</Method>
			<Method methodClass="Kernel.SmalltalkLocale">integerBase:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">isInstalled</Method>
			<Method methodClass="Kernel.SmalltalkLocale">iso639LanguageName</Method>
			<Method methodClass="Kernel.SmalltalkLocale">isValidLocale</Method>
			<Method methodClass="Kernel.SmalltalkLocale">lastTwoDigitYear</Method>
			<Method methodClass="Kernel.SmalltalkLocale">longDateFormat</Method>
			<Method methodClass="Kernel.SmalltalkLocale">nameOfDay:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">nativeDigits</Method>
			<Method methodClass="Kernel.SmalltalkLocale">percentSymbol</Method>
			<Method methodClass="Kernel.SmalltalkLocale">printFloat:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">shortTimeFormat</Method>
			<Method methodClass="Kernel.SmalltalkLocale">yearMonthFormat</Method>
			<Method methodClass="Core.SortAlgorithm class">introSort:</Method>
			<Method methodClass="Core.SortedCollection">anyIndexOf:</Method>
			<Method methodClass="Core.SortedCollection">asSortedCollection</Method>
			<Method methodClass="Core.SortedCollection">binaryIncludes:</Method>
			<Method methodClass="Core.SortedCollection class">caseSensitiveSortBlock</Method>
			<Method methodClass="Core.SortedCollection class">defaultSortBlock</Method>
			<Method methodClass="Core.SortedCollection class">withNilsSortBlock</Method>
			<Method methodClass="Kernel.SourceFiler">isSourceOnly</Method>
			<Method methodClass="Kernel.SourceFiler">isSourceOnly:</Method>
			<Method methodClass="Kernel.SourceManager">copySourceFilesTo:</Method>
			<Method methodClass="Kernel.SourceManager">errorNotPackaged:</Method>
			<Method methodClass="Kernel.SourceManager">fileInHere:</Method>
			<Method methodClass="Kernel.SourceManager">fileItIn:</Method>
			<Method methodClass="Kernel.SourceManager">hasSources</Method>
			<Method methodClass="Kernel.SourceManager">openNewChangesFile:</Method>
			<Method methodClass="Kernel.SourceManager">truncateChanges</Method>
			<Method methodClass="Kernel.StackFrame">frameAddress</Method>
			<Method methodClass="Kernel.StackFrame">getFrames:</Method>
			<Method methodClass="Kernel.StackFrame">homeContext</Method>
			<Method methodClass="Kernel.StackFrame">homeFrame</Method>
			<Method methodClass="Kernel.StackFrame">index:</Method>
			<Method methodClass="Kernel.StackFrame">ip:</Method>
			<Method methodClass="Kernel.StackFrame">isBlockFrame</Method>
			<Method methodClass="Kernel.StackFrame">isRestartable</Method>
			<Method methodClass="Kernel.StackFrame">localAt:</Method>
			<Method methodClass="Kernel.StackFrame">prevIP</Method>
			<Method methodClass="Kernel.StackFrame">process:</Method>
			<Method methodClass="Kernel.StackFrame">sender:</Method>
			<Method methodClass="Kernel.StackFrame">sp</Method>
			<Method methodClass="Kernel.StackFrame">stackTrace:</Method>
			<Method methodClass="Kernel.StackFrame">temp:at:</Method>
			<Method methodClass="Kernel.StackFrame">tempNames</Method>
			<Method methodClass="Kernel.StackFrame">textMap</Method>
			<Method methodClass="Kernel.StackFrame class">findIP:inTextMap:</Method>
			<Method methodClass="Kernel.STBClassConversion">isUpgrading</Method>
			<Method methodClass="Kernel.STBFiler">context</Method>
			<Method methodClass="Kernel.STBFiler">version:</Method>
			<Method methodClass="Kernel.STBFiler class">errorInconsistentSTB:</Method>
			<Method methodClass="Kernel.STBInFiler">classLocator</Method>
			<Method methodClass="Kernel.STBInFiler">classLocator:</Method>
			<Method methodClass="Kernel.STBPrefix">dword</Method>
			<Method methodClass="Kernel.STBPrefix">isNonZeroVersion</Method>
			<Method methodClass="Kernel.STBPrefix">isProxy</Method>
			<Method methodClass="OS.StdioBinaryFileStream">externalType</Method>
			<Method methodClass="OS.StdioFileStream">isNonBlocking</Method>
			<Method methodClass="OS.StdioFileStream class">attach:toFd:mode:type:</Method>
			<Method methodClass="OS.StdioFileStream class">write:text:</Method>
			<Method methodClass="OS.StdioFileStream class">write:type:</Method>
			<Method methodClass="OS.StdioTextFileStream">externalType</Method>
			<Method methodClass="Kernel.STLClassCollector class">classesIn:</Method>
			<Method methodClass="Core.Stream">binaryStore:</Method>
			<Method methodClass="Core.Stream">isPositionable</Method>
			<Method methodClass="Core.Stream">nextDWORDPut:</Method>
			<Method methodClass="Core.Stream">nextInto:</Method>
			<Method methodClass="Core.Stream">nextMatchFor:</Method>
			<Method methodClass="Core.Stream">skipThrough:</Method>
			<Method methodClass="Core.String">asLowercase:</Method>
			<Method methodClass="Core.String">asPhrase</Method>
			<Method methodClass="Core.String">asUppercase:</Method>
			<Method methodClass="Core.String">beginsWith:ignoreCase:</Method>
			<Method methodClass="Core.String">byteAt:put:</Method>
			<Method methodClass="Core.String">capitalized</Method>
			<Method methodClass="Core.String">copyReplaceAll:with:</Method>
			<Method methodClass="Core.String">copyToBuffer:ofSize:</Method>
			<Method methodClass="Core.String">expandMacros</Method>
			<Method methodClass="Core.String">expandMacrosWith:with:with:with:</Method>
			<Method methodClass="Core.String">findString:</Method>
			<Method methodClass="Core.String">findString:startingAt:ignoreCase:</Method>
			<Method methodClass="Core.String">formatWith:</Method>
			<Method methodClass="Core.String">formatWith:with:</Method>
			<Method methodClass="Core.String">formatWith:with:with:</Method>
			<Method methodClass="Core.String">formatWith:with:with:with:</Method>
			<Method methodClass="Core.String">match:</Method>
			<Method methodClass="Core.String">midString:from:</Method>
			<Method methodClass="Core.String">rightString:</Method>
			<Method methodClass="Core.String">skipOver:ignoreCase:</Method>
			<Method methodClass="Core.String">sprintfWith:</Method>
			<Method methodClass="Core.String">subStrings:</Method>
			<Method methodClass="Core.String">titleCased</Method>
			<Method methodClass="Core.String">urlDecoded</Method>
			<Method methodClass="Core.String">urlEncoded</Method>
			<Method methodClass="Core.String">withNormalizedLineDelimiters</Method>
			<Method methodClass="Core.String class">ansiClass</Method>
			<Method methodClass="Core.String class">encodings</Method>
			<Method methodClass="Core.String class">formatMessage:withArguments:</Method>
			<Method methodClass="Core.String class">formatSystemMessage:withArguments:</Method>
			<Method methodClass="Core.String class">fromAtomId:</Method>
			<Method methodClass="Core.String class">fromByteArray:length:</Method>
			<Method methodClass="Core.String class">fromByteArray:startingAt:</Method>
			<Method methodClass="Core.String class">fromGlobalHandle:</Method>
			<Method methodClass="Core.String class">fromResourceId:</Method>
			<Method methodClass="Core.String class">fromResourceId:in:</Method>
			<Method methodClass="Core.String class">fromUtf16String:</Method>
			<Method methodClass="Core.String class">installedCodePages</Method>
			<Method methodClass="Core.String class">lf</Method>
			<Method methodClass="Core.String class">supportedCodePages</Method>
			<Method methodClass="Core.String class">utf16Class</Method>
			<Method methodClass="Core.String class">utf8Class</Method>
			<Method methodClass="Core.String class">with:with:with:</Method>
			<Method methodClass="Core.String class">with:with:with:with:</Method>
			<Method methodClass="Core.String class">with:with:with:with:with:</Method>
			<Method methodClass="External.Structure">alignment</Method>
			<Method methodClass="External.Structure">asObject</Method>
			<Method methodClass="External.Structure">bytesAtOffset:put:</Method>
			<Method methodClass="External.Structure">copyStringFrom:to:</Method>
			<Method methodClass="External.Structure">detach</Method>
			<Method methodClass="External.Structure">fieldsDo:</Method>
			<Method methodClass="External.Structure">fieldsDo:separatedBy:</Method>
			<Method methodClass="External.Structure">isFieldBrowsable:</Method>
			<Method methodClass="External.Structure">isPointer</Method>
			<Method methodClass="External.Structure">setField:value:</Method>
			<Method methodClass="External.Structure class">alignment</Method>
			<Method methodClass="External.Structure class">byteSize:</Method>
			<Method methodClass="External.Structure class">fieldNamesFromTemplate</Method>
			<Method methodClass="External.Structure class">init:</Method>
			<Method methodClass="External.Structure class">isCompiled</Method>
			<Method methodClass="External.Structure class">isFieldBrowsable:</Method>
			<Method methodClass="External.Structure class">libraryAndIndex</Method>
			<Method methodClass="External.Structure class">newBufferClass:</Method>
			<Method methodClass="External.Structure class">newHeapPointer</Method>
			<Method methodClass="External.Structure class">newPointer:</Method>
			<Method methodClass="External.Structure class">offsetOf:</Method>
			<Method methodClass="External.Structure class">setGuid:</Method>
			<Method methodClass="External.Structure class">withBytes:</Method>
			<Method methodClass="Core.Symbol">deepCopy</Method>
			<Method methodClass="Core.Symbol">printArgumentTypeOn:</Method>
			<Method methodClass="Core.Symbol class">allInstancesDo:</Method>
			<Method methodClass="Core.Symbol class">resizeTable</Method>
			<Method methodClass="Core.Symbol class">stats</Method>
			<Method methodClass="OS.SYSTEMTIME">asDateAndTime</Method>
			<Method methodClass="OS.SYSTEMTIME">asFILETIME</Method>
			<Method methodClass="OS.SYSTEMTIME">hour</Method>
			<Method methodClass="OS.SYSTEMTIME class">day:month:year:</Method>
			<Method methodClass="OS.SYSTEMTIME class">nowUTC</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">printableFields</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">zoneId</Method>
			<Method methodClass="Core.True">asBit</Method>
			<Method methodClass="Core.True">asDword</Method>
			<Method methodClass="Core.True">xor:</Method>
			<Method methodClass="External.UInt32Bytes">asDword</Method>
			<Method methodClass="External.UIntPtrBytes">highPart</Method>
			<Method methodClass="External.UIntPtrBytes">highPart:</Method>
			<Method methodClass="External.UIntPtrBytes">highPartSigned</Method>
			<Method methodClass="External.UIntPtrBytes">lowPart:</Method>
			<Method methodClass="Core.UndefinedObject">deepCopy</Method>
			<Method methodClass="OS.UserLibrary">blockInput:</Method>
			<Method methodClass="OS.UserLibrary">createDialog:lpTemplate:hWndParent:lpDialogFunc:dwInitParam:</Method>
			<Method methodClass="OS.UserLibrary">disableProcessWindowsGhosting</Method>
			<Method methodClass="OS.UserLibrary">getAsyncKeyState:</Method>
			<Method methodClass="OS.UserLibrary">getKeyboardLayout:</Method>
			<Method methodClass="OS.UserLibrary">getKeyboardLayoutName:</Method>
			<Method methodClass="OS.UserLibrary">getKeyboardState:</Method>
			<Method methodClass="OS.UserLibrary">getKeyNameText:lpString:nSize:</Method>
			<Method methodClass="OS.UserLibrary">getKeyState:</Method>
			<Method methodClass="OS.UserLibrary">getSysColor:</Method>
			<Method methodClass="OS.UserLibrary">inSendMessage</Method>
			<Method methodClass="OS.UserLibrary">loadCursor:lpCursorName:</Method>
			<Method methodClass="OS.UserLibrary">loadKeyboardLayout:flags:</Method>
			<Method methodClass="OS.UserLibrary">mapVirtualKey:uMapType:</Method>
			<Method methodClass="OS.UserLibrary">postThreadMessage:msg:wParam:lParam:</Method>
			<Method methodClass="OS.UserLibrary">setKeyboardState:</Method>
			<Method methodClass="OS.UserLibrary">setWindowDWORD:nIndex:dwNewDWORD:</Method>
			<Method methodClass="OS.UserLibrary">showWindow:nCmdShow:</Method>
			<Method methodClass="OS.UserLibrary">vkKeyScan:</Method>
			<Method methodClass="Core.Utf16String">copyToBuffer:ofSize:</Method>
			<Method methodClass="Core.Utf16String class">characterForCodeUnit:</Method>
			<Method methodClass="Core.Utf16String class">fromAtomId:</Method>
			<Method methodClass="Core.Utf16String class">fromBytes:codePage:</Method>
			<Method methodClass="Core.Utf16String class">fromUtf16String:</Method>
			<Method methodClass="Core.Utf8String">urlEncoded</Method>
			<Method methodClass="Core.Utf8String class">characterForCodeUnit:</Method>
			<Method methodClass="Core.UtfEncodedString">copyWith:atIndex:</Method>
			<Method methodClass="Core.UtfEncodedString">fifth</Method>
			<Method methodClass="Core.UtfEncodedString">findFirst:</Method>
			<Method methodClass="Core.UtfEncodedString">findLast:</Method>
			<Method methodClass="Core.UtfEncodedString">fourth</Method>
			<Method methodClass="Core.UtfEncodedString">midString:from:</Method>
			<Method methodClass="Core.UtfEncodedString">pairsDo:</Method>
			<Method methodClass="Core.UtfEncodedString">sixth</Method>
			<Method methodClass="Kernel.VariableBinding">absoluteName</Method>
			<Method methodClass="Kernel.VariableBinding">isConstant</Method>
			<Method methodClass="Kernel.VariableBinding">isConstant:</Method>
			<Method methodClass="Kernel.VariableBinding">isDeprecated:</Method>
			<Method methodClass="OS.VersionInfo">comments</Method>
			<Method methodClass="OS.VersionInfo">fileVersion</Method>
			<Method methodClass="OS.VersionInfo">legalCopyright</Method>
			<Method methodClass="Kernel.VMLibrary">applicationHandle</Method>
			<Method methodClass="Kernel.VMLibrary">debugDump:</Method>
			<Method methodClass="Kernel.VMLibrary">defaultProductDetails</Method>
			<Method methodClass="Kernel.VMLibrary">emptyBlock</Method>
			<Method methodClass="Kernel.VMLibrary">fullVersion</Method>
			<Method methodClass="Kernel.VMLibrary">getDlgProc</Method>
			<Method methodClass="Kernel.VMLibrary">getVTable</Method>
			<Method methodClass="Kernel.VMLibrary">getWndProc</Method>
			<Method methodClass="Kernel.VMLibrary">highBit:</Method>
			<Method methodClass="Kernel.VMLibrary">isSlowMachine</Method>
			<Method methodClass="Kernel.VMLibrary">largeSignedFromUnsigned:</Method>
			<Method methodClass="Kernel.VMLibrary">largeUnsignedFromSigned:</Method>
			<Method methodClass="Kernel.VMLibrary">makeLargeSigned:</Method>
			<Method methodClass="Kernel.VMLibrary">makeLargeSigned:highPart:</Method>
			<Method methodClass="Kernel.VMLibrary">makeLargeUnsigned:</Method>
			<Method methodClass="Kernel.VMLibrary">makeLargeUnsigned:highPart:</Method>
			<Method methodClass="Kernel.VMLibrary">specialSelectors</Method>
			<Method methodClass="Kernel.VMLibrary">unsignedFromSigned:</Method>
			<Method methodClass="Kernel.VMLibrary class">maxBlockNesting</Method>
			<Method methodClass="Kernel.VMLibrary class">maxLiterals</Method>
			<Method methodClass="Kernel.VMLibrary class">maxMessageArguments</Method>
			<Method methodClass="Kernel.VMLibrary class">maxTemps</Method>
			<Method methodClass="Kernel.VMLibrary class">registryKeys</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">fileVersion</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">versionAtOffset:put:</Method>
			<Method methodClass="Core.Warning class">iconStyle</Method>
			<Method methodClass="Core.WeakLookupTable">hasWeakKeys</Method>
			<Method methodClass="Core.WeakLookupTable">hasWeakValues</Method>
			<Method methodClass="Core.WeakLookupTable">haveStrongKeys</Method>
			<Method methodClass="Core.WeakLookupTable">haveWeakValues</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">isReadOnly</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">shortFileName</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">stem</Method>
			<Method methodClass="OS.Win32Fault">exceptionRecord</Method>
			<Method methodClass="Core.WriteStream">padTo:put:</Method>
			<Method methodClass="Core.WriteStream class">with:from:to:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS._FPIEEE_RECORD">roundingMode</Method>
			<Method methodClass="OS._FPIEEE_RECORD class">precisionModes</Method>
			<Method methodClass="OS._FPIEEE_RECORD class">roundingModes</Method>
			<Method methodClass="OS._FPIEEE_VALUE class">formatCodes</Method>
			<Method methodClass="OS.AbstractWindowsLocale">dayNames</Method>
			<Method methodClass="OS.AbstractWindowsLocale">getCalendarInfoInteger:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">getDateFormats:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">getTimeFormats</Method>
			<Method methodClass="OS.AbstractWindowsLocale">monthNames</Method>
			<Method methodClass="OS.AbstractWindowsLocale class">installedUILanguages:</Method>
			<Method methodClass="OS.AbstractWindowsLocale class">systemLocales:</Method>
			<Method methodClass="OS.AdvApiLibrary">deregisterEventSource:</Method>
			<Method methodClass="OS.AdvApiLibrary">getUserName:nSize:</Method>
			<Method methodClass="Core.ArithmeticValue">**</Method>
			<Method methodClass="Core.ArrayedCollection">detect:ifNone:</Method>
			<Method methodClass="Core.Association">setKey:</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beInaccessible</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beReadOnly</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beUncompiled</Method>
			<Method methodClass="Kernel.AttributeDescriptor">beWriteOnly</Method>
			<Method methodClass="Kernel.AttributeDescriptor">canGenerateAccessors</Method>
			<Method methodClass="Kernel.AttributeDescriptor">isBrowsable</Method>
			<Method methodClass="Core.Bag class">identityNew:</Method>
			<Method methodClass="Core.Behavior">compileAll</Method>
			<Method methodClass="Core.Behavior">extraInstanceSpec:</Method>
			<Method methodClass="Core.Behavior">isNonInstantiable:</Method>
			<Method methodClass="Core.Behavior">isNullTerminated</Method>
			<Method methodClass="Core.Behavior">setSpecialBehavior:to:</Method>
			<Method methodClass="Core.Behavior">understoodSelectorsDo:</Method>
			<Method methodClass="Core.Behavior">whichClassSatisfies:</Method>
			<Method methodClass="Core.Behavior">whichMethodsAccess:</Method>
			<Method methodClass="Core.Behavior">whichMethodsAssign:</Method>
			<Method methodClass="Core.Behavior">whichMethodsRead:</Method>
			<Method methodClass="Kernel.BindingReference">ifDefined:ifNotDefined:</Method>
			<Method methodClass="Kernel.BindingReference class">isValidUnqualifiedName:</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">home</Method>
			<Method methodClass="Kernel.BlockClosure">cull:cull:cull:</Method>
			<Method methodClass="Kernel.BlockClosure">deferredValueAt:</Method>
			<Method methodClass="Kernel.BlockClosure">forkMaxStack:</Method>
			<Method methodClass="Kernel.BlockClosure">home</Method>
			<Method methodClass="Kernel.BlockClosure">ticksToRun</Method>
			<Method methodClass="Kernel.BlockClosure">value:value:value:value:</Method>
			<Method methodClass="Kernel.BlockClosure class">attemptToRecompile:</Method>
			<Method methodClass="Core.ByteArray">addressAtOffset:</Method>
			<Method methodClass="Core.ByteArray">indexOfSubCollection:startingAt:</Method>
			<Method methodClass="Core.ByteArray">printHexOn:</Method>
			<Method methodClass="Core.ByteArray class">fromHexString:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">containsInstruction:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">indexOfIP:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">instructionsDo:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">prevIP:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">segments</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">selectorOfMessageSend:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">sendsSpecialSelector:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">specialMessages</Method>
			<Method methodClass="Core.Category">permanentCategories</Method>
			<Method methodClass="Core.Character">isUppercase</Method>
			<Method methodClass="Core.Character class">utf8Value:</Method>
			<Method methodClass="Core.Class">absoluteNameFor:</Method>
			<Method methodClass="Core.Class">addClassConstant:value:</Method>
			<Method methodClass="Core.Class">allEnvironmentsDo:</Method>
			<Method methodClass="Core.Class">categories</Method>
			<Method methodClass="Core.Class">classBindingNames</Method>
			<Method methodClass="Core.Class">classVariables</Method>
			<Method methodClass="Core.Class">getFullName</Method>
			<Method methodClass="Core.Class">nestedClassesDo:</Method>
			<Method methodClass="Core.ClassDescription">categoriesFor:</Method>
			<Method methodClass="Core.ClassDescription">compile:categories:package:</Method>
			<Method methodClass="Core.ClassDescription">indexOfInstVar:</Method>
			<Method methodClass="Core.ClassDescription">methodChanged:</Method>
			<Method methodClass="Core.ClassDescription">methods</Method>
			<Method methodClass="Core.ClassDescription">printDefinitionOn:</Method>
			<Method methodClass="Core.ClassDescription">protocolNames</Method>
			<Method methodClass="Core.ClassDescription">realMethodCategories</Method>
			<Method methodClass="Core.ClassDescription">removeCategory:</Method>
			<Method methodClass="Core.ClassDescription">removeProtocol:ifAbsent:</Method>
			<Method methodClass="Core.ClassDescription">resourceSelectorsDo:</Method>
			<Method methodClass="Kernel.ClassLocator">hasPackageName</Method>
			<Method methodClass="Core.Collection">asSortedCollectionUsing:</Method>
			<Method methodClass="Core.Collection">detect:ifNone:</Method>
			<Method methodClass="Core.Collection">distinct</Method>
			<Method methodClass="Core.Collection">errorValueNotFound:</Method>
			<Method methodClass="Core.Collection">single</Method>
			<Method methodClass="Kernel.CompilationResult">buildTextMap</Method>
			<Method methodClass="Kernel.CompiledCode">hasAnnotation:</Method>
			<Method methodClass="Kernel.CompiledCode">isCompilationFailure</Method>
			<Method methodClass="Kernel.CompiledCode">refersToAnyOf:</Method>
			<Method methodClass="Kernel.CompiledCode">sendsSpecialSelector:</Method>
			<Method methodClass="Kernel.CompiledCode">specialMessages</Method>
			<Method methodClass="Kernel.CompiledCode class">initializeInfoCache:</Method>
			<Method methodClass="Kernel.CompiledCode class">packByteCodes:</Method>
			<Method methodClass="Kernel.CompiledMethod">categories</Method>
			<Method methodClass="Kernel.CompiledMethod">isGetter</Method>
			<Method methodClass="Kernel.CompileFailedMethod">isCompilationFailure</Method>
			<Method methodClass="Kernel.Compiler class">compile:in:environment:</Method>
			<Method methodClass="Kernel.Compiler class">compileExpression:in:environment:</Method>
			<Method methodClass="Kernel.Compiler class">isAReservedWord:</Method>
			<Method methodClass="Kernel.Compiler class">isAValidIdentifierChar:</Method>
			<Method methodClass="Kernel.Compiler class">isAValidInitialIdentifierChar:</Method>
			<Method methodClass="Kernel.CompilerErrorNotification class">severity</Method>
			<Method methodClass="Kernel.CompilerInfoNotification class">severity</Method>
			<Method methodClass="Kernel.CompilerNotification">severity</Method>
			<Method methodClass="Kernel.CompilerWarningNotification class">severity</Method>
			<Method methodClass="Kernel.Context">home</Method>
			<Method methodClass="OS.CRTLibrary">_statusfp</Method>
			<Method methodClass="OS.CRTLibrary">strncpy_s:bufferSize:strSource:count:</Method>
			<Method methodClass="OS.CRTLibrary">wcsncpy_s:bufferSize:strSource:count:</Method>
			<Method methodClass="Core.DateAndTime">printOn:format:</Method>
			<Method methodClass="Core.DateAndTime">rataDie</Method>
			<Method methodClass="Core.DateAndTime">timeZoneAbbreviation</Method>
			<Method methodClass="Core.DateAndTime class">fromFILETIME:</Method>
			<Method methodClass="Core.DateAndTime class">fromSYSTEMTIME:</Method>
			<Method methodClass="Core.DateAndTime class">today</Method>
			<Method methodClass="Core.DateAndTime class">year:day:hour:minute:second:</Method>
			<Method methodClass="Core.DateAndTime class">year:day:hour:minute:second:offset:</Method>
			<Method methodClass="Core.DateAndTime class">year:month:day:hour:minute:second:</Method>
			<Method methodClass="Core.DeferredValue">deferredValueAt:</Method>
			<Method methodClass="Core.Delay">resumptionTime:</Method>
			<Method methodClass="Core.Delay class">forMilliseconds:</Method>
			<Method methodClass="Core.Delay class">timerResolution:set:</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_basicDevelopmentClasses</Method>
			<Method methodClass="Core.Dictionary">associationAt:</Method>
			<Method methodClass="Core.Dictionary">at:ifAbsentPut:</Method>
			<Method methodClass="Core.Dictionary">keyAtEqualValue:ifAbsent:</Method>
			<Method methodClass="Core.Dictionary">removeAssociationAt:</Method>
			<Method methodClass="Core.Dictionary">values</Method>
			<Method methodClass="Core.Duration">days</Method>
			<Method methodClass="Core.Duration">hours</Method>
			<Method methodClass="Core.Duration">milliseconds</Method>
			<Method methodClass="Core.Duration">nanoseconds</Method>
			<Method methodClass="Core.Duration">printOn:format:</Method>
			<Method methodClass="Core.Duration class">minutes:</Method>
			<Method methodClass="External.DynamicLinkLibrary">getProcAddress:</Method>
			<Method methodClass="External.DynamicLinkLibrary">versionFormatString</Method>
			<Method methodClass="Core.Error">asWarning</Method>
			<Method methodClass="Core.Error class">subclassResponsibility:</Method>
			<Method methodClass="Kernel.EventsCollection">triggerEvent:withArguments:</Method>
			<Method methodClass="Core.Exception">abortRetryOrIgnore</Method>
			<Method methodClass="Core.Exception">resignalAs:</Method>
			<Method methodClass="External.ExternalArray">detect:ifNone:</Method>
			<Method methodClass="Core.File">checkBoundsOf:startingAt:for:</Method>
			<Method methodClass="Core.File">write:</Method>
			<Method methodClass="Core.File class">copy:to:</Method>
			<Method methodClass="Core.File class">createDirectory:</Method>
			<Method methodClass="Core.File class">delete:</Method>
			<Method methodClass="Core.File class">exists:</Method>
			<Method methodClass="Core.File class">forAll:in:do:</Method>
			<Method methodClass="Core.File class">forAllDirectories:in:do:</Method>
			<Method methodClass="Core.File class">pathDelimiter</Method>
			<Method methodClass="Core.File class">pathDelimiters</Method>
			<Method methodClass="Core.File class">removeDirectory:</Method>
			<Method methodClass="Core.File class">rename:to:</Method>
			<Method methodClass="Core.File class">shortenComponent:max:</Method>
			<Method methodClass="Core.File class">splitExtensionFrom:</Method>
			<Method methodClass="Core.File class">temporaryFilename</Method>
			<Method methodClass="Core.File class">workingDirectory</Method>
			<Method methodClass="Core.File class">workingDirectory:</Method>
			<Method methodClass="Core.FileLocator class">folderRelative:</Method>
			<Method methodClass="Core.FileStream class">write:</Method>
			<Method methodClass="OS.FILETIME class">fromDateAndTime:</Method>
			<Method methodClass="OS.FILETIME class">fromSYSTEMTIME:</Method>
			<Method methodClass="Core.Float">equals:</Method>
			<Method methodClass="Core.Float">log</Method>
			<Method methodClass="Core.Float">printOn:base:significantFigures:decimalExponents:</Method>
			<Method methodClass="Core.Float class">denormalized</Method>
			<Method methodClass="Core.Float class">fminDenormalized</Method>
			<Method methodClass="Core.Float class">fminNormalized</Method>
			<Method methodClass="Core.Float class">pi</Method>
			<Method methodClass="Kernel.FullBindingReference">home</Method>
			<Method methodClass="External.FunctionDescriptor class">argumentTypes:</Method>
			<Method methodClass="OS.HRESULT">failed</Method>
			<Method methodClass="OS.HRESULT">severity</Method>
			<Method methodClass="OS.HRESULTError class">signalHRESULT:</Method>
			<Method methodClass="Smalltalk.ImageStripper">logReferencesToClasses</Method>
			<Method methodClass="Smalltalk.ImageStripper">requiredMethodCategories</Method>
			<Method methodClass="Smalltalk.ImageStripperProgress">getItemHandle:ifAbsent:</Method>
			<Method methodClass="Kernel.InputState">postAction:</Method>
			<Method methodClass="Kernel.InputState">topLevelWindows</Method>
			<Method methodClass="Core.Integer">asStackPointer</Method>
			<Method methodClass="Core.Integer">factorial2p</Method>
			<Method methodClass="Core.Integer">lowPartSigned</Method>
			<Method methodClass="OS.KernelLibrary">copyMemory:source:length:</Method>
			<Method methodClass="OS.KernelLibrary">deviceIoControl:dwIoControlCode:lpInBuffer:nInBufferSize:lpOutBuffer:nOutBufferSize:lpBytesReturned:lpoverlapped:</Method>
			<Method methodClass="OS.KernelLibrary">expandEnvironmentStrings:lpDst:nSize:</Method>
			<Method methodClass="OS.KernelLibrary">getAtomName:lpBuffer:nSize:</Method>
			<Method methodClass="OS.KernelLibrary">getComputerName:nSize:</Method>
			<Method methodClass="OS.KernelLibrary">getEnvironmentVariable:lpBuffer:nSize:</Method>
			<Method methodClass="OS.KernelLibrary">getFinalPathNameByHandle:lpszFilePath:cchFilePath:dwFlags:</Method>
			<Method methodClass="OS.KernelLibrary">getShortPathName:lpszShortPath:cchBuffer:</Method>
			<Method methodClass="OS.KernelLibrary">getSystemDirectory:uSize:</Method>
			<Method methodClass="OS.KernelLibrary">getSystemTime:</Method>
			<Method methodClass="OS.KernelLibrary">getSystemWindowsDirectory:uSize:</Method>
			<Method methodClass="OS.KernelLibrary">globalAlloc:dwBytes:</Method>
			<Method methodClass="OS.KernelLibrary">globalLock:</Method>
			<Method methodClass="OS.KernelLibrary">globalUnlock:</Method>
			<Method methodClass="OS.KernelLibrary">heapCompact:dwFlags:</Method>
			<Method methodClass="OS.KernelLibrary">isValidLocale:dwFlags:</Method>
			<Method methodClass="OS.KernelLibrary">isWow64Process:wow64Process:</Method>
			<Method methodClass="OS.KernelLibrary">multiByteToWideChar:dwFlags:lpMultiByteStr:cchMultiByte:lpWideCharStr:cchWideChar:</Method>
			<Method methodClass="OS.KernelLibrary">openProcess:bInheritHandle:dwProcessId:</Method>
			<Method methodClass="OS.KernelLibrary">removeDirectory:</Method>
			<Method methodClass="OS.KernelLibrary">setEndOfFile:</Method>
			<Method methodClass="OS.KernelLibrary">setEnvironmentVariable:lpValue:</Method>
			<Method methodClass="OS.KernelLibrary">setFileAttributes:value:</Method>
			<Method methodClass="OS.KernelLibrary">terminateProcess:exitCode:</Method>
			<Method methodClass="Core.LimitedWriteStream class">on:from:to:</Method>
			<Method methodClass="Core.LinkedList">addFirst:</Method>
			<Method methodClass="Core.LinkedList">removeLastIfAbsent:</Method>
			<Method methodClass="Core.Locale">hashString:flags:</Method>
			<Method methodClass="Core.Locale">printDate:on:format:</Method>
			<Method methodClass="Core.Locale">printTime:on:format:</Method>
			<Method methodClass="Core.Locale">titlecaseString:</Method>
			<Method methodClass="OS.LocalFILETIME class">fromSYSTEMTIME:</Method>
			<Method methodClass="Core.LookupTable">keyAtEqualValue:ifAbsent:</Method>
			<Method methodClass="Core.MessageSendAbstract">cull:cull:cull:</Method>
			<Method methodClass="Core.MessageSendAbstract">deferredValueAt:</Method>
			<Method methodClass="Core.MessageSendAbstract">value:value:value:value:</Method>
			<Method methodClass="Core.MessageSendAbstract class">receiver:selector:argument:</Method>
			<Method methodClass="Kernel.MessageSendCollector">superMessagesDo:</Method>
			<Method methodClass="Core.Metaclass">classBindingNames</Method>
			<Method methodClass="Core.Metaclass">classVariables</Method>
			<Method methodClass="Core.Metaclass">printDefinitionOn:</Method>
			<Method methodClass="Core.Metaclass">removeClassVarName:</Method>
			<Method methodClass="Kernel.MethodAnnotations">withSelector:do:</Method>
			<Method methodClass="Core.MethodCategory">addMethod:</Method>
			<Method methodClass="Core.MethodCategory">methods</Method>
			<Method methodClass="Core.MethodCategory">removeMethod:</Method>
			<Method methodClass="Core.MethodCategory class">removeCategory:</Method>
			<Method methodClass="Kernel.Namespace class">associationAt:</Method>
			<Method methodClass="Kernel.Namespace class">at:ifAbsentPut:</Method>
			<Method methodClass="Kernel.Namespace class">detect:ifNone:</Method>
			<Method methodClass="Kernel.Namespace class">values</Method>
			<Method methodClass="Kernel.NullEventsCollection">triggerEvent:withArguments:</Method>
			<Method methodClass="Core.Number">days</Method>
			<Method methodClass="Core.Number">hours</Method>
			<Method methodClass="Core.Number">log</Method>
			<Method methodClass="Core.Number">milliseconds</Method>
			<Method methodClass="Core.Number">nanoseconds</Method>
			<Method methodClass="Core.Object">binaryStoreBytes</Method>
			<Method methodClass="Core.Object">breakDependents</Method>
			<Method methodClass="Core.Object">displayString:</Method>
			<Method methodClass="Core.Object">fullPrintString</Method>
			<Method methodClass="Core.Object">isWeak</Method>
			<Method methodClass="Core.Object">literalStoreEvaluationOn:</Method>
			<Method methodClass="Core.Object">removeAllEventsTriggered</Method>
			<Method methodClass="Core.Object">trigger:with:with:</Method>
			<Method methodClass="Core.Object">when:send:to:</Method>
			<Method methodClass="Core.Object class">fromBinaryStoreBytes:</Method>
			<Method methodClass="Core.Object class">literalReadFrom:</Method>
			<Method methodClass="Core.OrderedCollection">addFirst:</Method>
			<Method methodClass="Core.OrderedCollection">detect:ifNone:</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">wProductType:</Method>
			<Method methodClass="Kernel.Package">aboutBlock</Method>
			<Method methodClass="Kernel.Package">addMethod:</Method>
			<Method methodClass="Kernel.Package">allSourceObjectsDo:</Method>
			<Method methodClass="Kernel.Package">basicComment:</Method>
			<Method methodClass="Kernel.Package">basicPackageVersion:</Method>
			<Method methodClass="Kernel.Package">basicRemoveClass:</Method>
			<Method methodClass="Kernel.Package">basicScriptAt:put:</Method>
			<Method methodClass="Kernel.Package">hasCyclicPrerequisites</Method>
			<Method methodClass="Kernel.Package">hasUncommittedPrerequisites</Method>
			<Method methodClass="Kernel.Package">imageStripperBytes:</Method>
			<Method methodClass="Kernel.Package">includesClass:</Method>
			<Method methodClass="Kernel.Package">loadPAC</Method>
			<Method methodClass="Kernel.Package">loadPAX</Method>
			<Method methodClass="Kernel.Package">membershipChangedAt:</Method>
			<Method methodClass="Kernel.Package">methods</Method>
			<Method methodClass="Kernel.Package">packageFileName:</Method>
			<Method methodClass="Kernel.Package">packagePathname</Method>
			<Method methodClass="Kernel.Package">removeLooseMethod:</Method>
			<Method methodClass="Kernel.Package">removeMethod:</Method>
			<Method methodClass="Kernel.Package">removePAXProperties</Method>
			<Method methodClass="Kernel.Package">renameLooseMethodsOf:to:</Method>
			<Method methodClass="Kernel.Package">setBinaryVariableNames:</Method>
			<Method methodClass="Kernel.Package">setUntracedVariables:</Method>
			<Method methodClass="Kernel.Package">storeComment</Method>
			<Method methodClass="Kernel.Package">synchronizeNames</Method>
			<Method methodClass="Kernel.Package">uninstallClasses</Method>
			<Method methodClass="Kernel.Package">uninstallMethods</Method>
			<Method methodClass="Kernel.Package">uninstallVariables</Method>
			<Method methodClass="Kernel.Package">upateFileNames</Method>
			<Method methodClass="Kernel.Package">validate</Method>
			<Method methodClass="Kernel.Package class">fromPACFile:</Method>
			<Method methodClass="Kernel.Package class">fromPAXFile:</Method>
			<Method methodClass="Kernel.Package class">unsaveableSignal</Method>
			<Method methodClass="Kernel.PluggableSearchPolicy">compareBlock:hashBlock:</Method>
			<Method methodClass="Core.PositionableStream class">on:from:to:</Method>
			<Method methodClass="Kernel.PostedActionWindow">postAction:</Method>
			<Method methodClass="Core.Process">suspend</Method>
			<Method methodClass="Kernel.ProcessorScheduler">setHighestPriority:activeProcess:</Method>
			<Method methodClass="Kernel.PropertyManager">removeAllPropertiesOf:</Method>
			<Method methodClass="Kernel.RelativeBindingReference">home</Method>
			<Method methodClass="UI.ResourceIdentifier class">exportFileExtension</Method>
			<Method methodClass="OS.RPCLibrary">uuidCreate:</Method>
			<Method methodClass="Core.RunArray">runsAndValuesDo:</Method>
			<Method methodClass="Core.SequenceableCollection">after:ifAbsent:</Method>
			<Method methodClass="Core.SequenceableCollection">allButFirst</Method>
			<Method methodClass="Core.SequenceableCollection">before:ifAbsent:</Method>
			<Method methodClass="Core.SequenceableCollection">copyWithoutAll:</Method>
			<Method methodClass="Core.SequenceableCollection">endsWith:</Method>
			<Method methodClass="Core.SequenceableCollection">indexOfSubCollection:startingAt:</Method>
			<Method methodClass="Core.SequenceableCollection">keyAtEqualValue:ifAbsent:</Method>
			<Method methodClass="Core.SequenceableCollection">last:</Method>
			<Method methodClass="Core.SequenceableCollection">lastIndexOf:</Method>
			<Method methodClass="Core.SequenceableCollection">mutableCopy</Method>
			<Method methodClass="Core.SequenceableCollection">prevIndexOfSubCollection:startingAt:</Method>
			<Method methodClass="Core.SequenceableCollection">runsAndValuesDo:</Method>
			<Method methodClass="Core.SequenceableCollection">skipOver:</Method>
			<Method methodClass="Core.SequenceableCollection class">binarySearch:for:using:</Method>
			<Method methodClass="Core.SequenceableCollection class">streamContents:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">add:beforeIndex:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">addAll:beforeIndex:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">addFirst:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">removeLastIfAbsent:</Method>
			<Method methodClass="Core.SequencedStream">skipToAll:</Method>
			<Method methodClass="Core.SessionManager">defaultResourceLibrary</Method>
			<Method methodClass="Core.SessionManager">errorLogExtension</Method>
			<Method methodClass="Core.SessionManager">imageVersionMajor</Method>
			<Method methodClass="Core.SessionManager">imageVersionMinor</Method>
			<Method methodClass="Core.SessionManager">install</Method>
			<Method methodClass="Core.SessionManager">isOAD</Method>
			<Method methodClass="Core.SessionManager">logEvent:type:</Method>
			<Method methodClass="Core.SessionManager">resourcesLocatorForClass:</Method>
			<Method methodClass="Core.SessionManager">saveImageDefault</Method>
			<Method methodClass="Core.SessionManager">saveImageTo:</Method>
			<Method methodClass="Core.SessionManager">servers</Method>
			<Method methodClass="Core.SessionManager">serverShutdown</Method>
			<Method methodClass="Core.SessionManager class">asSessionManagerClass</Method>
			<Method methodClass="Core.Set">distinct</Method>
			<Method methodClass="Core.SharedLookupTable">at:ifAbsentPut:</Method>
			<Method methodClass="Core.SharedLookupTable">keyAtEqualValue:ifAbsent:</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathCommonPrefix:pszFile2:achPath:</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathIsRoot:</Method>
			<Method methodClass="Core.SmallInteger">asStackPointer</Method>
			<Method methodClass="Smalltalk class">developmentSystem</Method>
			<Method methodClass="Kernel.SmalltalkLocale">dayNames</Method>
			<Method methodClass="Kernel.SmalltalkLocale">monthNames</Method>
			<Method methodClass="Kernel.SourceManager">changesFileName</Method>
			<Method methodClass="Kernel.SourceManager">flushChanges</Method>
			<Method methodClass="Kernel.SourceManager">sourcesFileName</Method>
			<Method methodClass="Kernel.SourceManager">storeCommentString:forClass:</Method>
			<Method methodClass="Kernel.SourceManager">storeGUIDForClass:</Method>
			<Method methodClass="Kernel.StackFrame">basicSP</Method>
			<Method methodClass="Kernel.StackFrame">getOuter:</Method>
			<Method methodClass="Kernel.StackFrame">temps</Method>
			<Method methodClass="OS.StdioFileStream class">write:</Method>
			<Method methodClass="Core.Stream">basicNextPutAll:</Method>
			<Method methodClass="Core.Stream">next:into:startingAt:</Method>
			<Method methodClass="Core.String">contains:</Method>
			<Method methodClass="Core.String">indexOfSubCollection:startingAt:</Method>
			<Method methodClass="Core.String">match:ignoreCase:</Method>
			<Method methodClass="Core.String class">formatMessage:in:withArguments:</Method>
			<Method methodClass="Core.String class">systemCodePages:</Method>
			<Method methodClass="External.Structure">beNullHeapPointer</Method>
			<Method methodClass="External.Structure">getField:</Method>
			<Method methodClass="External.Structure">getValidFields</Method>
			<Method methodClass="External.Structure">template</Method>
			<Method methodClass="External.Structure class">new:bufferClass:</Method>
			<Method methodClass="External.Structure class">template</Method>
			<Method methodClass="Core.Symbol">mutableCopy</Method>
			<Method methodClass="OS.SYSTEMTIME class">fromFILETIME:</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">currentName</Method>
			<Method methodClass="External.UIntPtrBytes">lowPartSigned</Method>
			<Method methodClass="OS.UserLibrary">getSystemMetrics:</Method>
			<Method methodClass="OS.UserLibrary">loadString:uID:lpBuffer:nBufferMax:</Method>
			<Method methodClass="OS.UserLibrary">setActiveWindow:</Method>
			<Method methodClass="OS.UserLibrary">setDlgItemText:nIDDlgItem:lpString:</Method>
			<Method methodClass="OS.UserLibrary">updateWindow:</Method>
			<Method methodClass="Core.Utf16String">before:ifAbsent:</Method>
			<Method methodClass="Core.Utf16String">indexOfSubCollection:startingAt:</Method>
			<Method methodClass="Core.Utf8String">before:ifAbsent:</Method>
			<Method methodClass="Core.UtfEncodedString">after:ifAbsent:</Method>
			<Method methodClass="Core.UtfEncodedString">codeUnitsDo:</Method>
			<Method methodClass="Core.UtfEncodedString">detect:ifNone:</Method>
			<Method methodClass="Core.UtfEncodedString">last:</Method>
			<Method methodClass="Kernel.VariableBinding">isDeprecated</Method>
			<Method methodClass="OS.VersionInfo">formatVersionString:</Method>
			<Method methodClass="OS.VersionInfo">specialBuild</Method>
			<Method methodClass="Kernel.VMLibrary">_snprintf_s:bufferSize:count:format:with:</Method>
			<Method methodClass="Kernel.VMLibrary">basePatchLevel</Method>
			<Method methodClass="Kernel.VMLibrary">bytecodeVersion</Method>
			<Method methodClass="Kernel.VMLibrary">indexOfSpecialSelector:ifAbsent:</Method>
			<Method methodClass="Kernel.VMLibrary">signedFromUnsigned:</Method>
			<Method methodClass="Kernel.VMLibrary">versionFormatString</Method>
			<Method methodClass="Core.WeakLookupTable class">newWithWeakKeys:</Method>
			<Method methodClass="Core.WriteStream">basicNextPutAll:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS._FPIEEE_RECORD class">getFieldNames</Method>
			<Method methodClass="OS._FPIEEE_VALUE class">getFieldNames</Method>
			<Method methodClass="Kernel.AbstractChunkSourceFiler">emitGUIDOfClass:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">buildDayNamesMap</Method>
			<Method methodClass="OS.AbstractWindowsLocale">buildMonthNamesMap</Method>
			<Method methodClass="OS.AbstractWindowsLocale">calendarId</Method>
			<Method methodClass="OS.AbstractWindowsLocale">mapTitlecaseFlags</Method>
			<Method methodClass="OS.AdvApiLibrary">reportEvent:wType:wCategory:dwEventId:lpUserSid:wNumStrings:dwDataSize:lpStrings:lpRawData:</Method>
			<Method methodClass="Core.Behavior">dynamicSelectorsDo:</Method>
			<Method methodClass="Core.Behavior">instanceSpec:</Method>
			<Method methodClass="Core.Behavior">kindOfSubclass</Method>
			<Method methodClass="Core.Behavior">recompile:</Method>
			<Method methodClass="Core.Behavior">removeSelector:</Method>
			<Method methodClass="Core.Behavior">selectors</Method>
			<Method methodClass="Core.Behavior">setShapeFlags:to:</Method>
			<Method methodClass="Core.Behavior">whichMethodsAccess:at:</Method>
			<Method methodClass="Core.Behavior">whichMethodsAssign:at:</Method>
			<Method methodClass="Core.Behavior">whichMethodsRead:at:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">instruction:do:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">ip</Method>
			<Method methodClass="External.Callback class">block:descriptor:</Method>
			<Method methodClass="Core.Character">asUppercase</Method>
			<Method methodClass="Core.Character">isAlphaNumeric</Method>
			<Method methodClass="Core.Character">isLowercase</Method>
			<Method methodClass="Core.Character">isLowerCase</Method>
			<Method methodClass="Core.Character">isUtf16Trail</Method>
			<Method methodClass="Core.Class">canModifyBinding:newValue:</Method>
			<Method methodClass="Core.Class">categories:</Method>
			<Method methodClass="Core.Class">printAbsoluteNameOn:</Method>
			<Method methodClass="Core.ClassDescription">categoriesOfMethod:</Method>
			<Method methodClass="Core.ClassDescription">classVariableString</Method>
			<Method methodClass="Core.ClassDescription">compile:categories:package:flags:</Method>
			<Method methodClass="Core.ClassDescription">definedBindings</Method>
			<Method methodClass="Core.ClassDescription">indexOfInstVar:ifAbsent:</Method>
			<Method methodClass="Core.ClassDescription">localEnvironment</Method>
			<Method methodClass="Core.ClassDescription">recompileAllReferencesToLiteral:</Method>
			<Method methodClass="Core.Collection">asSortedArray:</Method>
			<Method methodClass="Kernel.CompiledCode">localEnvironment</Method>
			<Method methodClass="Kernel.CompiledMethod">categories:</Method>
			<Method methodClass="Kernel.Compiler class">compileExpression:in:environment:flags:</Method>
			<Method methodClass="Kernel.Compiler class">reservedWords</Method>
			<Method methodClass="OS.CPINFOEXW class">codePage:</Method>
			<Method methodClass="OS.CPINFOEXW class">getFieldNames</Method>
			<Method methodClass="OS.CRTLibrary">memcpy_s:destSize:src:count:</Method>
			<Method methodClass="Core.DateAndTime">asUTC</Method>
			<Method methodClass="Core.DateAndTime">midnight</Method>
			<Method methodClass="Core.DateAndTime class">fromSYSTEMTIME:offset:</Method>
			<Method methodClass="Core.DateAndTime class">midnight</Method>
			<Method methodClass="Core.DateAndTime class">year:day:hour:minute:second:offsetSeconds:</Method>
			<Method methodClass="Core.DeferredValue class">evaluate:at:</Method>
			<Method methodClass="Core.Dictionary">removeAssociationAt:ifAbsent:</Method>
			<Method methodClass="Core.Duration">asNanoseconds</Method>
			<Method methodClass="Core.Duration">microseconds</Method>
			<Method methodClass="Core.Duration class">days:</Method>
			<Method methodClass="Core.Duration class">hours:</Method>
			<Method methodClass="Core.Duration class">milliseconds:</Method>
			<Method methodClass="Core.Duration class">nanoseconds:</Method>
			<Method methodClass="Kernel.EventsCollection">triggerEvent:with:with:</Method>
			<Method methodClass="Core.Exception">isNested</Method>
			<Method methodClass="OS.EXCEPTION_RECORD class">getFieldNames</Method>
			<Method methodClass="Kernel.ExceptionSet">selectors</Method>
			<Method methodClass="External.ExternalArray">with:do:</Method>
			<Method methodClass="External.ExternalArray class">getFieldNames</Method>
			<Method methodClass="Core.File">lastWriteTime</Method>
			<Method methodClass="Core.File class">attributes:</Method>
			<Method methodClass="Core.File class">forDirectoriesIn:do:</Method>
			<Method methodClass="Core.File class">temporaryFilenameWithPrefix:</Method>
			<Method methodClass="Core.FileException">file</Method>
			<Method methodClass="Core.FileStream">file</Method>
			<Method methodClass="Core.FileStream">fullFlush</Method>
			<Method methodClass="Core.FileStream class">write:mode:</Method>
			<Method methodClass="OS.FILETIME">asUTC</Method>
			<Method methodClass="OS.FILETIME class">getFieldNames</Method>
			<Method methodClass="External.FunctionDescriptor class">returnType:argumentTypes:</Method>
			<Method methodClass="Core.Integer">lowPart</Method>
			<Method methodClass="OS.KernelLibrary">copyFile:lpNewFileName:bfailIfExists:</Method>
			<Method methodClass="OS.KernelLibrary">createDirectory:lpSecurityAttributes:</Method>
			<Method methodClass="OS.KernelLibrary">enumDateFormats:locale:dwFlags:</Method>
			<Method methodClass="OS.KernelLibrary">enumSystemCodePages:dwFlags:</Method>
			<Method methodClass="OS.KernelLibrary">enumSystemLocales:dwFlags:</Method>
			<Method methodClass="OS.KernelLibrary">enumTimeFormats:locale:dwFlags:</Method>
			<Method methodClass="OS.KernelLibrary">enumUILanguages:dwFlags:lParam:</Method>
			<Method methodClass="OS.KernelLibrary">getCalendarInfo:calendar:calType:lpCalData:cchData:lpValue:</Method>
			<Method methodClass="OS.KernelLibrary">getCurrentDirectory:lpBuffer:</Method>
			<Method methodClass="OS.KernelLibrary">moveFile:lpNewFileName:</Method>
			<Method methodClass="OS.KernelLibrary">queryPerformanceCounter:</Method>
			<Method methodClass="OS.KernelLibrary">setCurrentDirectory:</Method>
			<Method methodClass="OS.KernelLibrary">systemTimeToFileTime:lpFileTime:</Method>
			<Method methodClass="Core.Locale">mapTitlecaseFlags</Method>
			<Method methodClass="OS.LocalFILETIME">asUTC</Method>
			<Method methodClass="Core.LookupTable">removeAssociationAt:ifAbsent:</Method>
			<Method methodClass="Kernel.MethodAnnotations">selectors</Method>
			<Method methodClass="OS.MSG class">getFieldNames</Method>
			<Method methodClass="OS.MSGBOXPARAMSW class">getFieldNames</Method>
			<Method methodClass="Kernel.Namespace class">localEnvironment</Method>
			<Method methodClass="OS.NTLibrary">setTimerResolution:set:actualResolution:</Method>
			<Method methodClass="Kernel.NullEventsCollection">triggerEvent:with:with:</Method>
			<Method methodClass="Core.Number">closeTo:precision:</Method>
			<Method methodClass="Core.Number">microseconds</Method>
			<Method methodClass="OS.NUMBERFMTW class">getFieldNames</Method>
			<Method methodClass="Core.Object">binaryStoreOn:</Method>
			<Method methodClass="Core.Object">literalStoreArray</Method>
			<Method methodClass="Core.Object">setDependents:</Method>
			<Method methodClass="Core.Object">when:perform:</Method>
			<Method methodClass="Core.Object class">literalReadFrom:context:</Method>
			<Method methodClass="Core.OrderedCollection">makeRoomAtFirstFor:</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW class">getFieldNames</Method>
			<Method methodClass="Kernel.Package">allPrerequisites</Method>
			<Method methodClass="Kernel.Package">declareClasses</Method>
			<Method methodClass="Kernel.Package">dependentPackages</Method>
			<Method methodClass="Kernel.Package">depthOfClass:</Method>
			<Method methodClass="Kernel.Package">fileInClasses</Method>
			<Method methodClass="Kernel.Package">fileNameForSourceVariable:</Method>
			<Method methodClass="Kernel.Package">hasCyclicPrerequisites:safe:</Method>
			<Method methodClass="Kernel.Package">includesClassNamed:</Method>
			<Method methodClass="Kernel.Package">initializeOldSourcePackage</Method>
			<Method methodClass="Kernel.Package">loadBinaryVariables</Method>
			<Method methodClass="Kernel.Package">loadPAC:</Method>
			<Method methodClass="Kernel.Package">memberUpdatedAt:</Method>
			<Method methodClass="Kernel.Package">paxVersion:</Method>
			<Method methodClass="Kernel.Package">preDeclareClassesOnLoad</Method>
			<Method methodClass="Kernel.Package">remainingClasses</Method>
			<Method methodClass="Kernel.Package">removeClassName:</Method>
			<Method methodClass="Kernel.Package">removeMethodNames:</Method>
			<Method methodClass="Kernel.Package">sourceVariableNames</Method>
			<Method methodClass="Kernel.Package class">errorInvalidPACFile:</Method>
			<Method methodClass="Kernel.Package class">errorInvalidPAXFile:</Method>
			<Method methodClass="Kernel.Package class">preDeclareClassesOnLoad</Method>
			<Method methodClass="Core.Process">lastError</Method>
			<Method methodClass="External.SCALAR class">getFieldNames</Method>
			<Method methodClass="Core.SequenceableCollection">allButFirst:</Method>
			<Method methodClass="Core.SequenceableCollection">errorFirstObject:</Method>
			<Method methodClass="Core.SequenceableCollection">errorLastObject:</Method>
			<Method methodClass="Core.SequenceableCollection">prevIndexOf:from:to:</Method>
			<Method methodClass="Core.SequenceableCollection">with:do:</Method>
			<Method methodClass="Core.SequenceableCollection class">new:streamContents:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">addAll:afterIndex:</Method>
			<Method methodClass="Core.SessionManager">defaultResLibPath</Method>
			<Method methodClass="Core.SessionManager">isHeadless</Method>
			<Method methodClass="Core.SessionManager">openEventLog</Method>
			<Method methodClass="Core.SessionManager">productName</Method>
			<Method methodClass="Core.SessionManager">retire</Method>
			<Method methodClass="Core.SessionManager">snapshot:</Method>
			<Method methodClass="Core.SessionManager class">current:</Method>
			<Method methodClass="Kernel.SourceManager">sourcesFileStream</Method>
			<Method methodClass="Kernel.SourceManager">storeCommentString:forPackage:</Method>
			<Method methodClass="Kernel.StackFrame">ip</Method>
			<Method methodClass="Kernel.StackFrame">tempsBeforeIp:</Method>
			<Method methodClass="OS.StdioFileStream class">write:mode:</Method>
			<Method methodClass="Core.String">asUppercase</Method>
			<Method methodClass="Core.String">leftString:</Method>
			<Method methodClass="Core.String">matchPatternFrom:in:from:</Method>
			<Method methodClass="Core.String">prevIndexOf:from:to:</Method>
			<Method methodClass="External.Structure">bytes:</Method>
			<Method methodClass="External.Structure">heapPointerClass</Method>
			<Method methodClass="OS.SYSTEMTIME class">getFieldNames</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION class">getFieldNames</Method>
			<Method methodClass="External.UIntPtrBytes">lowPart</Method>
			<Method methodClass="OS.UserLibrary">getDlgItem:nIDDlgItem:</Method>
			<Method methodClass="OS.UserLibrary">postMessage:msg:wParam:lParam:</Method>
			<Method methodClass="Core.UtfEncodedString">allButFirst:</Method>
			<Method methodClass="Core.UtfEncodedString">leftString:</Method>
			<Method methodClass="Core.UtfEncodedString">with:do:</Method>
			<Method methodClass="OS.VersionInfo">productMajor</Method>
			<Method methodClass="OS.VersionInfo">productMinor</Method>
			<Method methodClass="OS.VersionInfo">productName</Method>
			<Method methodClass="Kernel.VMLibrary">errorIntegerMoreThan32Bits:</Method>
			<Method methodClass="Kernel.VMLibrary">productName</Method>
			<Method methodClass="Kernel.VMLibrary class">hasBytecodeRepresentation:</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO class">getFieldNames</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW class">getFieldNames</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS._FPIEEE_RECORD">enable</Method>
			<Method methodClass="OS._FPIEEE_RECORD">operand2</Method>
			<Method methodClass="OS._FPIEEE_RECORD">status</Method>
			<Method methodClass="Core.ArrayedCollection">sort:</Method>
			<Method methodClass="Core.Behavior">recompileReferencesToLiteral:</Method>
			<Method methodClass="Core.Behavior">selectMethods:</Method>
			<Method methodClass="Kernel.BindingReference">declare:</Method>
			<Method methodClass="External.BlockCallback">block:</Method>
			<Method methodClass="Core.Category class">unclassified</Method>
			<Method methodClass="Core.Class">classCategories</Method>
			<Method methodClass="Core.Class">classCategories:</Method>
			<Method methodClass="Core.Class">guid</Method>
			<Method methodClass="Core.Class">printNameOn:relativeTo:</Method>
			<Method methodClass="Core.ClassDescription">bindings</Method>
			<Method methodClass="Core.ClassDescription">classCategoryClass</Method>
			<Method methodClass="Core.ClassDescription">compile:environment:categories:package:flags:</Method>
			<Method methodClass="Core.ClassDescription">storeClassCategories</Method>
			<Method methodClass="Core.Collection">removeAll:</Method>
			<Method methodClass="Core.Collection">symmetricDifference:</Method>
			<Method methodClass="Kernel.CompilationResult">tempsAtIp:</Method>
			<Method methodClass="Kernel.CompiledCode">accessesInstVar:at:</Method>
			<Method methodClass="Kernel.CompiledCode">readsInstVar:at:</Method>
			<Method methodClass="Kernel.CompiledCode">writesInstVar:at:</Method>
			<Method methodClass="OS.CPINFOEXW">codepage</Method>
			<Method methodClass="OS.CPINFOEXW">CodePageName</Method>
			<Method methodClass="OS.CPINFOEXW">DefaultChar</Method>
			<Method methodClass="OS.CPINFOEXW">LeadByte</Method>
			<Method methodClass="OS.CPINFOEXW">MaxCharSize</Method>
			<Method methodClass="OS.CPINFOEXW">UnicodeDefaultChar</Method>
			<Method methodClass="Core.DateAndTime class">now</Method>
			<Method methodClass="Core.DateAndTime class">year:month:day:offset:</Method>
			<Method methodClass="Core.DeferredValue">evaluate:withArguments:at:</Method>
			<Method methodClass="Core.DeferredValue class">evaluate:withArguments:at:</Method>
			<Method methodClass="Core.Duration class">microseconds:</Method>
			<Method methodClass="External.DynamicLinkLibrary">versionInfo</Method>
			<Method methodClass="External.DynamicLinkLibrary class">versionInfo</Method>
			<Method methodClass="Kernel.EventsCollection">addEvent:action:</Method>
			<Method methodClass="OS.EXCEPTION_RECORD">ExceptionFlags</Method>
			<Method methodClass="OS.EXCEPTION_RECORD">ExceptionRecord</Method>
			<Method methodClass="External.ExternalArray">packing</Method>
			<Method methodClass="Core.File">getTimes:atime:mtime:</Method>
			<Method methodClass="Core.File class">forDirectories:in:do:</Method>
			<Method methodClass="Core.File class">tempPath</Method>
			<Method methodClass="Core.FileStream class">write:mode:check:text:</Method>
			<Method methodClass="OS.FILETIME class">fromLocalTime:</Method>
			<Method methodClass="OS.FILETIME class">now</Method>
			<Method methodClass="External.FunctionDescriptor class">callingConvention:returnType:argumentTypes:</Method>
			<Method methodClass="OS.KernelLibrary">getCPInfoExW:dwFlags:lpCPInfoEx:</Method>
			<Method methodClass="OS.KernelLibrary">getTempFileName:lpPrefixString:uUnique:lpTempFileName:</Method>
			<Method methodClass="OS.KernelLibrary">threadGetLastError</Method>
			<Method methodClass="Core.Locale">lowercaseString:</Method>
			<Method methodClass="OS.LocalFILETIME class">now</Method>
			<Method methodClass="Core.MethodCategory">includesMethod:</Method>
			<Method methodClass="Core.MethodCategory class">pseudoCategories</Method>
			<Method methodClass="OS.MSG">lParam</Method>
			<Method methodClass="OS.MSG">time</Method>
			<Method methodClass="OS.MSG">wParam</Method>
			<Method methodClass="OS.MSG">x</Method>
			<Method methodClass="OS.MSG">y</Method>
			<Method methodClass="Core.Object">literalStoreOn:</Method>
			<Method methodClass="Core.Object class">binaryReadFrom:</Method>
			<Method methodClass="Core.OrderedCollection">sort:</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">dwBuildNumber</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">dwMajorVersion</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">dwMinorVersion</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">dwPlatformId</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">szCSDVersion</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">wProductType</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">wServicePackMajor</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">wServicePackMinor</Method>
			<Method methodClass="OS.OSVERSIONINFOEXW">wSuiteMask</Method>
			<Method methodClass="Kernel.Package">addAllPrerequisitesTo:</Method>
			<Method methodClass="Kernel.Package">changedFrom:</Method>
			<Method methodClass="Kernel.Package">classNames</Method>
			<Method methodClass="Kernel.Package">declareVariables</Method>
			<Method methodClass="Kernel.Package">ensureNamesFullyQualified</Method>
			<Method methodClass="Kernel.Package">fileNameForBinaryVariable:extension:</Method>
			<Method methodClass="Kernel.Package">includesMethod:</Method>
			<Method methodClass="Kernel.Package">initializeLegacyResources</Method>
			<Method methodClass="Kernel.Package">postLoadInitialization:</Method>
			<Method methodClass="Kernel.Package">resetPrerequisites</Method>
			<Method methodClass="Kernel.Package">sourceVariableExtension</Method>
			<Method methodClass="Core.SequenceableCollection">errorCollectionsOfDifferentSizes</Method>
			<Method methodClass="Core.SessionManager">eventLogSource</Method>
			<Method methodClass="Core.SessionManager">inputState:</Method>
			<Method methodClass="Core.SessionManager">versionInfo</Method>
			<Method methodClass="Kernel.StackFrame">basicIP</Method>
			<Method methodClass="Kernel.StackFrame">ipBias</Method>
			<Method methodClass="OS.StdioFileStream class">write:mode:check:text:</Method>
			<Method methodClass="External.Structure class">packing</Method>
			<Method methodClass="OS.SYSTEMTIME class">now</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">daylightDate</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">daylightName</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">standardDate</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">standardName</Method>
			<Method methodClass="OS.UserLibrary">charUpper:</Method>
			<Method methodClass="Kernel.VMLibrary">registerEventSource:</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">dwFileDateLS</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">dwFileDateMS</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">dwFileFlags</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">dwFileFlagsMask</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">dwFileOS</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">dwFileSubtype</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">dwFileType</Method>
			<Method methodClass="OS.VS_FIXEDFILEINFO">dwStrucVersion</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">cAlternateFileName</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">ftCreationTime</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">ftLastAccessTime</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">ftLastWriteTime</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS.AbstractWindowsLocale">mapLowercaseFlags</Method>
			<Method methodClass="Kernel.BlockClosure">on:do:on:do:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">accessesInstVarAt:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">readsInstVarAt:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">writesInstVarAt:</Method>
			<Method methodClass="Core.ClassDescription">suggestedPrivacyFor:</Method>
			<Method methodClass="Kernel.ClassLocator class">isImportedClass:</Method>
			<Method methodClass="Core.Collection">asSortedArray</Method>
			<Method methodClass="Core.Collection">remove:</Method>
			<Method methodClass="Core.Collection">union:</Method>
			<Method methodClass="Kernel.CompilationResult">package:</Method>
			<Method methodClass="Kernel.CompilationResult">tempsMap</Method>
			<Method methodClass="Kernel.CompiledCode">refersToLiteral:</Method>
			<Method methodClass="Kernel.CompiledCode">storeCategories</Method>
			<Method methodClass="Kernel.CompiledCode">tempsMap</Method>
			<Method methodClass="Kernel.CompiledMethod">recompile</Method>
			<Method methodClass="Core.DateAndTime class">utcSecondsNow</Method>
			<Method methodClass="Core.DeferredValue">_evaluate:withArguments:</Method>
			<Method methodClass="Core.DeferredValue">exception:</Method>
			<Method methodClass="Core.FileStream class">write:mode:check:type:</Method>
			<Method methodClass="External.FunctionDescriptor class">callingConvention:returnType:argumentTypes:environment:</Method>
			<Method methodClass="OS.KernelLibrary">getFileTime:lpCreationTime:lpLastAccessTime:lpLastWriteTime:</Method>
			<Method methodClass="OS.KernelLibrary">getLocalTime:</Method>
			<Method methodClass="OS.KernelLibrary">getTempPath:lpBuffer:</Method>
			<Method methodClass="OS.KernelLibrary">localFileTimeToFileTime:lpFileTime:</Method>
			<Method methodClass="Core.Locale">mapLowercaseFlags</Method>
			<Method methodClass="Core.MethodCategory">isPrivacy</Method>
			<Method methodClass="Core.MethodCategory class">setMethod:categories:</Method>
			<Method methodClass="Core.MethodCategory class">unclassifiedName</Method>
			<Method methodClass="Core.Object class">binaryReadFrom:context:</Method>
			<Method methodClass="Kernel.Package">allResourceNames</Method>
			<Method methodClass="Kernel.Package">basicResetPrerequisites</Method>
			<Method methodClass="Kernel.Package">convertPoolDictionariesToSharedPools</Method>
			<Method methodClass="Kernel.Package">fileInScript:</Method>
			<Method methodClass="Kernel.Package">initializeGlobals</Method>
			<Method methodClass="Kernel.Package">isImportedClass:</Method>
			<Method methodClass="Kernel.Package">prerequisites</Method>
			<Method methodClass="Kernel.Package">updateMethodNamesToFullyQualified</Method>
			<Method methodClass="Core.SortAlgorithm class">defaultSort:</Method>
			<Method methodClass="OS.StdioFileStream class">write:mode:check:type:</Method>
			<Method methodClass="OS.VersionInfo class">forPath:</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">isDirectory</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Array">asArrayCopy</Method>
			<Method methodClass="Core.Array">refersTo:asLiteralOf:</Method>
			<Method methodClass="Kernel.BindingReference">refersTo:asLiteralOf:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">indexOfInstVarAccess:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">indexOfInstVarRead:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">indexOfInstVarWrite:</Method>
			<Method methodClass="Core.Category">isPseud</Method>
			<Method methodClass="Core.Class">refersTo:asLiteralOf:</Method>
			<Method methodClass="Kernel.ClassLocator class">addAlias:forClass:</Method>
			<Method methodClass="Core.Collection">asArrayCopy</Method>
			<Method methodClass="Kernel.CompilationResult">buildTempsMap</Method>
			<Method methodClass="Kernel.CompiledCode">debugInfo</Method>
			<Method methodClass="Kernel.CompiledMethod">realCategories</Method>
			<Method methodClass="Kernel.ExceptionHandlerSet class">handlers:</Method>
			<Method methodClass="OS.KernelLibrary">getSystemTimePreciseAsFileTime:</Method>
			<Method methodClass="Kernel.MethodAnnotations">refersTo:asLiteralOf:</Method>
			<Method methodClass="Core.MethodCategory">addMethodSilently:</Method>
			<Method methodClass="Core.Object">refersTo:asLiteralOf:</Method>
			<Method methodClass="Kernel.Package">basicRemoveVariableNamed:</Method>
			<Method methodClass="Kernel.Package">evaluateScript:source:</Method>
			<Method methodClass="Kernel.Package">initializeClasses</Method>
			<Method methodClass="Kernel.Package">isAlias:</Method>
			<Method methodClass="Kernel.Package">prerequisiteNames</Method>
			<Method methodClass="Kernel.Package">scriptAt:</Method>
			<Method methodClass="Core.SmallInteger">refersTo:asLiteralOf:</Method>
			<Method methodClass="Kernel.STBFiler">context:</Method>
			<Method methodClass="Core.String">refersTo:asLiteralOf:</Method>
			<Method methodClass="Core.Symbol">refersTo:asLiteralOf:</Method>
			<Method methodClass="Core.UndefinedObject">refersTo:asLiteralOf:</Method>
			<Method methodClass="Kernel.VariableBinding">refersTo:asLiteralOf:</Method>
			<Method methodClass="OS.VersionInfo">fileInfo:</Method>
			<Method methodClass="OS.VersionLibrary">getFileVersionInfo:</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">dwFileAttributes</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Category">isVirtual</Method>
			<Method methodClass="Core.ClassDescription">includeSelector:inCategory:</Method>
			<Method methodClass="Core.ClassDescription">whichCategoriesIncludeSelector:</Method>
			<Method methodClass="Kernel.CompiledExpression">getDebugInfo</Method>
			<Method methodClass="Kernel.CompiledMethod">getDebugInfo</Method>
			<Method methodClass="Kernel.CompileFailedMethod">getDebugInfo</Method>
			<Method methodClass="Kernel.ExceptionHandlerSet">setHandlers:</Method>
			<Method methodClass="OS.KernelLibrary">getSystemTimeAsFileTime:</Method>
			<Method methodClass="Kernel.Package">buildPrerequisiteNames</Method>
			<Method methodClass="Kernel.Package">classesInHierarchyOrder</Method>
			<Method methodClass="Kernel.Package">isSystemPackage</Method>
			<Method methodClass="Kernel.Package">scripts</Method>
			<Method methodClass="Kernel.Package">sourceFilerOn:</Method>
			<Method methodClass="Kernel.SourceFiler">evaluationContext:</Method>
			<Method methodClass="OS.VersionLibrary">getFileVersionInfo:dwHandle:dwLen:lpData:</Method>
			<Method methodClass="OS.VersionLibrary">getFileVersionInfoSize:lpdwHandle:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.CompiledCode">evaluationPools</Method>
			<Method methodClass="Kernel.CompiledCode">isDebugMethod</Method>
			<Method methodClass="Kernel.CompiledExpression">evaluationPools</Method>
			<Method methodClass="Kernel.CompiledExpression">expressionClass</Method>
			<Method methodClass="Kernel.CompiledMethod">privacyCategory</Method>
			<Method methodClass="Kernel.Compiler class">debugInfoFor:in:environment:debug:</Method>
			<Method methodClass="Kernel.Compiler class">debugInfoForExpression:in:environment:evaluationPools:debug:</Method>
			<Method methodClass="Kernel.Package">calculatePrerequisites</Method>
			<Method methodClass="Kernel.Package">hierarchyOrderOfClasses:</Method>
			<Method methodClass="Kernel.Package">manualPrerequisites</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.ByteCodeDispatcher class">lengthOfInstruction:</Method>
			<Method methodClass="Core.Collection">asOrderedCollection</Method>
			<Method methodClass="Core.Collection">intersection:</Method>
			<Method methodClass="Kernel.Compiler class">debugInfoFlags:</Method>
			<Method methodClass="External.ExternalArray">asOrderedCollection</Method>
			<Method methodClass="Kernel.Namespace class">asOrderedCollection</Method>
			<Method methodClass="Core.OrderedCollection">asOrderedCollection</Method>
			<Method methodClass="Kernel.Package">tracePrerequisites</Method>
			<Method methodClass="Core.SortedCollection">asOrderedCollection</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.Package">tracePrerequisites:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.Package">tracePrerequisitesOfClasses:packagedVariables:</Method>
			<Method methodClass="Kernel.Package">tracePrerequisitesOfEnvironment:</Method>
			<Method methodClass="Kernel.Package">tracePrerequisitesOfImageStripper:</Method>
			<Method methodClass="Kernel.Package">tracePrerequisitesOfLiterals:packagedVariables:</Method>
			<Method methodClass="Kernel.Package">tracePrerequisitesOfMethods:</Method>
			<Method methodClass="Kernel.Package">tracePrerequisitesOfResources:packagedVariables:</Method>
			<Method methodClass="Kernel.Package">tracePrerequisitesOfVariables:packagedVariables:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.ClassDescription">resourceIdentifiers</Method>
			<Method methodClass="Kernel.Package">bindingRefToLiteral:</Method>
			<Method methodClass="Kernel.Package">classes</Method>
			<Method methodClass="Kernel.Package">isSourceObject:</Method>
			<Method methodClass="Kernel.Package">resourceIdentifiers</Method>
			<Method methodClass="Kernel.Package">trace:prerequisite:from:to:dependency:</Method>
			<Method methodClass="Kernel.Package">untracedVariables</Method>
			<Method methodClass="Kernel.Package">variableNames</Method>
			<Method methodClass="Kernel.STLClassCollector">classes</Method>
			<Method methodClass="Kernel.STLClassCollector">resourceIdentifiers</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.Package">classFromName:</Method>
			<Method methodClass="Kernel.STLClassCollector">findResourceIdentifiers</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="1">
		<StripClasses reason="unreferenced">
			<RemoveClass>Kernel.AttributeDescriptor</RemoveClass>
			<RemoveClass>Core.DeferredValue</RemoveClass>
			<RemoveClass>Kernel.STLPrinter</RemoveClass>
			<RemoveClass>Kernel.LiteralPrinter</RemoveClass>
			<RemoveClass>OS.VersionInfo</RemoveClass>
			<RemoveClass>External.BlockCallback</RemoveClass>
			<RemoveClass>Core.Bag</RemoveClass>
			<RemoveClass>Core.RunArray</RemoveClass>
			<RemoveClass>External.UInt32Bytes</RemoveClass>
			<RemoveClass>External.Memory</RemoveClass>
			<RemoveClass>Core.PluggableSet</RemoveClass>
			<RemoveClass>Core.PluggableLookupTable</RemoveClass>
			<RemoveClass>Core.SharedIdentitySet</RemoveClass>
			<RemoveClass>External.ResourceLibrary</RemoveClass>
			<RemoveClass>OS.VersionLibrary</RemoveClass>
			<RemoveClass>Kernel.ClassRemovalError</RemoveClass>
			<RemoveClass>Kernel.SubclassResponsibilityError</RemoveClass>
			<RemoveClass>Kernel.ExceptionHandlerSet</RemoveClass>
			<RemoveClass>Kernel.AbsoluteFileLocator</RemoveClass>
			<RemoveClass>Kernel.FolderRelativeFileLocator</RemoveClass>
			<RemoveClass>Core.DateAndTime</RemoveClass>
			<RemoveClass>Kernel.PluggableSearchPolicy</RemoveClass>
			<RemoveClass>Kernel.AlwaysSearchPolicy</RemoveClass>
			<RemoveClass>Kernel.CaseInsensitiveSearchPolicy</RemoveClass>
			<RemoveClass>Kernel.STBOutFiler</RemoveClass>
			<RemoveClass>Kernel.STLOutFiler</RemoveClass>
			<RemoveClass>Kernel.AbstractSTBOutFiler</RemoveClass>
			<RemoveClass>Kernel.STBInFiler</RemoveClass>
			<RemoveClass>Kernel.STBExternalResourceLibraryProxy</RemoveClass>
			<RemoveClass>Kernel.STBGlobalObjectProxy</RemoveClass>
			<RemoveClass>OS.CPINFOEXW</RemoveClass>
			<RemoveClass>External.DWORDArray</RemoveClass>
			<RemoveClass>External.ExternalArray</RemoveClass>
			<RemoveClass>External.BYTE</RemoveClass>
			<RemoveClass>External.BOOL</RemoveClass>
			<RemoveClass>External.SDWORD</RemoveClass>
			<RemoveClass>External.DWORD</RemoveClass>
			<RemoveClass>OS.LocalFILETIME</RemoveClass>
			<RemoveClass>OS.FILETIME</RemoveClass>
			<RemoveClass>OS.VS_FIXEDFILEINFO</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="OS.AbstractWindowsLocale">listSeparator</Method>
			<Method methodClass="External.Address">stbSaveOn:</Method>
			<Method methodClass="Core.Array">literalPrintOn:</Method>
			<Method methodClass="Kernel.BlockClosure">valueWithArgumentsAt:descriptor:</Method>
			<Method methodClass="Core.Boolean">asBoolean</Method>
			<Method methodClass="Core.Boolean">isAtomic</Method>
			<Method methodClass="Core.ByteArray">qwordAtOffset:put:</Method>
			<Method methodClass="Core.ByteArray">sbyteAtOffset:</Method>
			<Method methodClass="Core.ByteArray">stbSaveOn:</Method>
			<Method methodClass="Core.Character">isAtomic</Method>
			<Method methodClass="Core.Character">isWhitespace</Method>
			<Method methodClass="Core.Class">literalPrintOn:</Method>
			<Method methodClass="Core.Class">stbSaveOn:</Method>
			<Method methodClass="Core.ClassDescription">isAtomic</Method>
			<Method methodClass="Kernel.ClassLocator">copyWithCodeBase</Method>
			<Method methodClass="Kernel.ClassLocator">localFileSpecFor:</Method>
			<Method methodClass="Kernel.ClassLocator">locateClass</Method>
			<Method methodClass="Core.Collection">occurrencesOf:</Method>
			<Method methodClass="Kernel.CompilerNotification">offset</Method>
			<Method methodClass="OS.CRTLibrary">free:</Method>
			<Method methodClass="Core.Dictionary">occurrencesOf:</Method>
			<Method methodClass="Core.Dictionary">searchPolicy</Method>
			<Method methodClass="Core.Dictionary">stbSaveOn:</Method>
			<Method methodClass="Core.Duration">subtractFromDateAndTime:</Method>
			<Method methodClass="External.DynamicLinkLibrary">stbSaveOn:</Method>
			<Method methodClass="Kernel.EqualitySearchPolicy">hash:max:</Method>
			<Method methodClass="External.ExternalMethod">stbSaveOn:</Method>
			<Method methodClass="Core.File class">splitFilenameFrom:</Method>
			<Method methodClass="Core.FileLocator">localFileSpecFor:</Method>
			<Method methodClass="Core.FileLocator class">installRelative</Method>
			<Method methodClass="Kernel.FullBindingReference">stbSaveOn:</Method>
			<Method methodClass="External.Handle">stbSaveOn:</Method>
			<Method methodClass="OS.HRESULT class">notImplemented</Method>
			<Method methodClass="Core.IdentityDictionary">hash:max:</Method>
			<Method methodClass="Core.IdentityDictionary">searchPolicy</Method>
			<Method methodClass="Kernel.IdentitySearchPolicy">hash:max:</Method>
			<Method methodClass="Core.IdentitySet">hash:max:</Method>
			<Method methodClass="Kernel.ImageRelativeFileLocator">stbSaveOn:</Method>
			<Method methodClass="Kernel.InstallRelativeFileLocator">stbSaveOn:</Method>
			<Method methodClass="Core.Integer">asBoolean</Method>
			<Method methodClass="Core.Integer">highWord</Method>
			<Method methodClass="Core.Integer">lowWord</Method>
			<Method methodClass="OS.InvariantLocale">stbSaveOn:</Method>
			<Method methodClass="OS.KernelLibrary">fileTimeToLocalTime:lpLocalFileTime:</Method>
			<Method methodClass="OS.KernelLibrary">fileTimeToSystemTime:lpSystemTime:</Method>
			<Method methodClass="OS.KernelLibrary">heapAlloc:dwFlags:dwBytes:</Method>
			<Method methodClass="OS.KernelLibrary">heapReAlloc:dwFlags:lpMem:dwBytes:</Method>
			<Method methodClass="OS.KernelLibrary">heapSize:dwFlags:lpMem:</Method>
			<Method methodClass="OS.KernelLibrary">heapValidate:dwFlags:lpMem:</Method>
			<Method methodClass="Core.Locale">stbSaveOn:</Method>
			<Method methodClass="Core.Locale class">timeZoneInformation</Method>
			<Method methodClass="Core.LookupTable">stbSaveOn:</Method>
			<Method methodClass="Core.Metaclass">literalPrintOn:</Method>
			<Method methodClass="Core.Metaclass">stbSaveOn:</Method>
			<Method methodClass="Kernel.MethodDictionary">hash:max:</Method>
			<Method methodClass="Kernel.Namespace class">occurrencesOf:</Method>
			<Method methodClass="Core.Object">isAtomic</Method>
			<Method methodClass="Core.Object">literalPrintOn:</Method>
			<Method methodClass="Core.Object">stbSaveOn:</Method>
			<Method methodClass="Core.OrderedCollection">stbSaveOn:</Method>
			<Method methodClass="Kernel.Package">stbSaveOn:</Method>
			<Method methodClass="Core.Process">stbSaveOn:</Method>
			<Method methodClass="Kernel.ProcessorScheduler">isAtomic</Method>
			<Method methodClass="Kernel.ProcessorScheduler">literalPrintOn:</Method>
			<Method methodClass="Core.SearchPolicy">hash:max:</Method>
			<Method methodClass="Core.SequencedStream">skipWhile:</Method>
			<Method methodClass="Core.Set">hash:max:</Method>
			<Method methodClass="Core.Set">occurrencesOf:</Method>
			<Method methodClass="Core.Set">stbSaveOn:</Method>
			<Method methodClass="Core.SharedIdentityDictionary">hash:max:</Method>
			<Method methodClass="Core.SharedIdentityDictionary">searchPolicy</Method>
			<Method methodClass="Core.SharedLookupTable">stbSaveOn:</Method>
			<Method methodClass="Core.SharedSet">stbSaveOn:</Method>
			<Method methodClass="Kernel.SingletonSearchPolicy">stbSaveOn:</Method>
			<Method methodClass="Core.SmallInteger">isAtomic</Method>
			<Method methodClass="Kernel.SmalltalkLocale">listSeparator</Method>
			<Method methodClass="Kernel.SmalltalkLocale">stbSaveOn:</Method>
			<Method methodClass="Core.SortedCollection">stbSaveOn:</Method>
			<Method methodClass="Kernel.STBPrefix">encodeClass:locator:</Method>
			<Method methodClass="Kernel.STBPrefix">encodeClassRef:</Method>
			<Method methodClass="Kernel.STBPrefix class">encodeCharacter:</Method>
			<Method methodClass="Kernel.STBPrefix class">encodeObjectRef:</Method>
			<Method methodClass="Kernel.STBPrefix class">encodeSmallInteger:</Method>
			<Method methodClass="Kernel.STBPrefix class">forProxy</Method>
			<Method methodClass="Core.Stream">nextSDWORDPut:</Method>
			<Method methodClass="Core.String">length</Method>
			<Method methodClass="Core.String">occurrencesOf:</Method>
			<Method methodClass="Core.String">sprintfWith:with:</Method>
			<Method methodClass="Core.Symbol">isAtomic</Method>
			<Method methodClass="Core.Symbol">stbSaveOn:</Method>
			<Method methodClass="OS.SYSTEMTIME">asSYSTEMTIME</Method>
			<Method methodClass="OS.SYSTEMTIME">wDay:</Method>
			<Method methodClass="OS.SYSTEMTIME">wDayOfWeek:</Method>
			<Method methodClass="OS.SYSTEMTIME">wHour:</Method>
			<Method methodClass="OS.SYSTEMTIME">wMilliseconds:</Method>
			<Method methodClass="OS.SYSTEMTIME">wMinute:</Method>
			<Method methodClass="OS.SYSTEMTIME">wMonth:</Method>
			<Method methodClass="OS.SYSTEMTIME">wSecond:</Method>
			<Method methodClass="OS.SYSTEMTIME">wYear:</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">offset</Method>
			<Method methodClass="Core.UndefinedObject">isAtomic</Method>
			<Method methodClass="Core.Utf16String">stbSaveOn:</Method>
			<Method methodClass="Core.UtfEncodedString">length</Method>
			<Method methodClass="Core.WeakIdentityDictionary">hash:max:</Method>
			<Method methodClass="Core.WeakIdentityDictionary">searchPolicy</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.ClassLocator">packageName</Method>
			<Method methodClass="Core.Dictionary">associations</Method>
			<Method methodClass="Core.FileLocator">findOrImportForeignClass</Method>
			<Method methodClass="Kernel.IdentitySearchPolicy">hash:</Method>
			<Method methodClass="Core.Locale class">getTimeZoneInfo</Method>
			<Method methodClass="Kernel.Namespace class">associations</Method>
			<Method methodClass="Core.SearchPolicy">hash:</Method>
			<Method methodClass="Core.SearchPolicy class">equality</Method>
			<Method methodClass="Core.SearchPolicy class">identity</Method>
			<Method methodClass="Core.SequenceableCollection">associations</Method>
			<Method methodClass="Kernel.STBClassProxy class">forClass:</Method>
			<Method methodClass="Kernel.STBCollectionProxy class">forCollection:</Method>
			<Method methodClass="Kernel.STBIdentityDictionaryProxy class">forCollection:</Method>
			<Method methodClass="Kernel.STBMetaclassProxy class">forClass:</Method>
			<Method methodClass="Kernel.STBPrefix class">forData</Method>
			<Method methodClass="Kernel.STBSortedCollectionProxy class">forCollection:</Method>
			<Method methodClass="Core.String">associations</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">offsetSeconds</Method>
			<Method methodClass="Kernel.VMLibrary">_snprintf_s:bufferSize:count:format:with:with:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.ClassLocator">errorClassNotFound</Method>
			<Method methodClass="OS.KernelLibrary">getTimeZoneInformation:</Method>
			<Method methodClass="Core.SortedCollection">algorithm</Method>
			<Method methodClass="Kernel.STBClassProxy">locatorKey:</Method>
			<Method methodClass="Kernel.STBCollectionProxy class">class:array:</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">currentBias</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">zoneId:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="UI.ResourceIdentifier class">class:</Method>
			<Method methodClass="Kernel.STBCollectionProxy">array:</Method>
			<Method methodClass="Kernel.STBCollectionProxy">class:</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">bias</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">daylightBias</Method>
			<Method methodClass="OS.TIME_ZONE_INFORMATION">standardBias</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="1">
		<StripClasses reason="unreferenced">
			<RemoveClass>Kernel.STBPrefix</RemoveClass>
			<RemoveClass>Kernel.STBSortedCollectionProxy</RemoveClass>
			<RemoveClass>OS.SYSTEMTIME</RemoveClass>
			<RemoveClass>OS.TIME_ZONE_INFORMATION</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Locale">displayDateTime:on:</Method>
			<Method methodClass="Core.SortedCollection">sortBlock:</Method>
			<Method methodClass="Core.SortedCollection class">sortBlock:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Collection class">defaultSortAlgorithmClass</Method>
			<Method methodClass="Core.Locale">printDateTime:on:format:</Method>
			<Method methodClass="Core.SortAlgorithm">copyWithSortBlock:</Method>
			<Method methodClass="Core.SortedCollection">algorithm:</Method>
			<Method methodClass="Core.SortedCollection class">sortAlgorithm:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.DefaultSortAlgorithm class">newSortBlock:</Method>
			<Method methodClass="Core.Locale">dateAndTimeFormatters</Method>
			<Method methodClass="Core.Locale">dateFormat</Method>
			<Method methodClass="Core.Locale">timeFormat</Method>
			<Method methodClass="Kernel.PluggableSortAlgorithm class">newSortBlock:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS.AbstractWindowsLocale">dayOfWeekAbbreviation:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">dayOfWeekName:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">longTimeFormat</Method>
			<Method methodClass="OS.AbstractWindowsLocale">monthAbbreviation:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">monthName:</Method>
			<Method methodClass="OS.AbstractWindowsLocale">shortAmDesignator</Method>
			<Method methodClass="OS.AbstractWindowsLocale">shortDateFormat</Method>
			<Method methodClass="OS.AbstractWindowsLocale">shortPmDesignator</Method>
			<Method methodClass="Kernel.DefaultSortAlgorithm class">pluggableEquivalentClass</Method>
			<Method methodClass="Kernel.SmalltalkLocale">dayOfWeekAbbreviation:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">dayOfWeekName:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">longTimeFormat</Method>
			<Method methodClass="Kernel.SmalltalkLocale">monthAbbreviation:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">monthName:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">shortAmDesignator</Method>
			<Method methodClass="Kernel.SmalltalkLocale">shortDateFormat</Method>
			<Method methodClass="Kernel.SmalltalkLocale">shortPmDesignator</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS.AbstractWindowsLocale">amDesignator</Method>
			<Method methodClass="OS.AbstractWindowsLocale">pmDesignator</Method>
			<Method methodClass="OS.KernelLibrary">isWindows10OrGreater</Method>
			<Method methodClass="Kernel.SmalltalkLocale">amDesignator</Method>
			<Method methodClass="Kernel.SmalltalkLocale">pmDesignator</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="1">
		<StripClasses reason="unreferenced">
			<RemoveClass>Kernel.IntrosortAlgorithm</RemoveClass>
			<RemoveClass>Kernel.PluggableSortAlgorithm</RemoveClass>
		</StripClasses>
	</StripCycle>
	<StripCycle id="1"></StripCycle>
	<FoldStrings>
		<Total>449</Total>
		<Folded>98</Folded>
	</FoldStrings>
	<FoldBytecodes>
		<Total>2600</Total>
		<Folded>383</Folded>
	</FoldBytecodes>
	<StripDevelopmentObjects>
		<StripMethods reason="development">
			<Method methodClass="Smalltalk.BasicImageStripper class">new</Method>
			<Method methodClass="Smalltalk.BasicImageStripper class">stbConvertFrom:</Method>
			<Method methodClass="Smalltalk.BasicImageStripper class">stbVersion</Method>
			<Method methodClass="Core.Behavior">recompileMethod:environment:</Method>
			<Method methodClass="Kernel.BindingReference">owningPackage:</Method>
			<Method methodClass="Kernel.BlockClosure">printOn:</Method>
			<Method methodClass="Core.Class">fileIn</Method>
			<Method methodClass="Core.Class">fileOutName</Method>
			<Method methodClass="Core.Class">fileOutNameForClass:</Method>
			<Method methodClass="Core.Class">fileOutStem</Method>
			<Method methodClass="Core.Class">owningPackage</Method>
			<Method methodClass="Core.Class">owningPackage:</Method>
			<Method methodClass="Core.Class">packageManager</Method>
			<Method methodClass="Core.Class">sourceFilerClass</Method>
			<Method methodClass="Core.Class">uninitialize</Method>
			<Method methodClass="Core.ClassDescription">logRemoveSelectors:</Method>
			<Method methodClass="Core.ClassDescription">removeMethodFromNonVirtualCategories:</Method>
			<Method methodClass="Core.ClassDescription">removeSelectors:</Method>
			<Method methodClass="Core.ClassDescription">removeUnsupportedProtocols:selector:</Method>
			<Method methodClass="Kernel.CompiledCode">envTempCount</Method>
			<Method methodClass="Kernel.CompiledCode">messages</Method>
			<Method methodClass="Kernel.CompiledCode">messagesDo:</Method>
			<Method methodClass="Kernel.CompiledCode class">elementsExpired:of:</Method>
			<Method methodClass="Kernel.CompiledExpression">getSource</Method>
			<Method methodClass="Kernel.CompiledMethod">changeManager</Method>
			<Method methodClass="Kernel.CompiledMethod">getSource</Method>
			<Method methodClass="Kernel.CompiledMethod">isChanged</Method>
			<Method methodClass="Kernel.CompiledMethod">isLoose</Method>
			<Method methodClass="Kernel.CompiledMethod">owningPackage:</Method>
			<Method methodClass="Kernel.CompiledMethod">protocols</Method>
			<Method methodClass="Kernel.ConsoleSessionManager class">new</Method>
			<Method methodClass="Core.Delay">printOn:</Method>
			<Method methodClass="Kernel.ExceptionHandlerAbstract">printOn:</Method>
			<Method methodClass="External.ExternalMethod">printOn:</Method>
			<Method methodClass="Core.GUID">printOn:</Method>
			<Method methodClass="Kernel.MemoryManager">initialize</Method>
			<Method methodClass="External.MessageCallback">printOn:</Method>
			<Method methodClass="Core.Metaclass">owningPackage</Method>
			<Method methodClass="Core.Metaclass">packageManager</Method>
			<Method methodClass="Core.MethodCategory">includesBehavior:</Method>
			<Method methodClass="Core.MethodCategory">removeClass:</Method>
			<Method methodClass="Core.Process">debugger</Method>
			<Method methodClass="Kernel.ProcessorScheduler">onBreak:</Method>
			<Method methodClass="UI.ResourceIdentifier">isChanged</Method>
			<Method methodClass="UI.ResourceIdentifier">owningPackage:</Method>
			<Method methodClass="Kernel.SourceManager">changePositionOf:</Method>
			<Method methodClass="Kernel.SourceManager">fileInPackagedClass:</Method>
			<Method methodClass="Kernel.SourceManager">isMethodChanged:</Method>
			<Method methodClass="External.Structure class">initializeAfterLoad</Method>
			<Method methodClass="Kernel.VariableBinding">owningPackage</Method>
			<Method methodClass="Kernel.VariableBinding">owningPackage:</Method>
			<Method methodClass="OS.WindowsLocale">printOn:</Method>
		</StripMethods>
		<StripClasses reason="development">
			<RemoveClass>Kernel.ChunkSourceFiler</RemoveClass>
			<RemoveClass>Kernel.AbstractChunkSourceFiler</RemoveClass>
			<RemoveClass>Kernel.Package</RemoveClass>
			<RemoveClass>Kernel.SourceFiler</RemoveClass>
			<RemoveClass>Kernel.SourceManager</RemoveClass>
		</StripClasses>
		<StripClasses reason="development"></StripClasses>
	</StripDevelopmentObjects>
	<StripCycle id="2">
		<!-- All resources stripped -->
		<StripClasses reason="unreferenced">
			<RemoveClass>Kernel.MessageSendCollector</RemoveClass>
			<RemoveClass>Kernel.InstructionInterpreter</RemoveClass>
			<RemoveClass>Kernel.RaisedNotificationSignal</RemoveClass>
			<RemoveClass>Core.NotificationSignal</RemoveClass>
			<RemoveClass>Core.FileStream</RemoveClass>
			<RemoveClass>Core.ReadWriteStream</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="Core.ArithmeticValue">truncateTo:</Method>
			<Method methodClass="Core.Behavior">removeSelectors:</Method>
			<Method methodClass="Kernel.BindingContext">owningPackage</Method>
			<Method methodClass="Kernel.BindingReference">declare</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">environmentName</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">instance</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">dispatchAll</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">instructions:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">selectorOfSpecialSend:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">selectorOfSpecialSendEx:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher class">decodeLongJump:byte2:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher class">on:for:</Method>
			<Method methodClass="Kernel.ChunkReader">fileInFrom:</Method>
			<Method methodClass="Core.Class">initializeAfterLoad</Method>
			<Method methodClass="Core.Class class">foldLiterals</Method>
			<Method methodClass="Core.ClassDescription">&gt;&gt;</Method>
			<Method methodClass="Core.ClassDescription">allProtocols</Method>
			<Method methodClass="Core.ClassDescription">changeIndexValue:</Method>
			<Method methodClass="Core.ClassDescription">isChanged</Method>
			<Method methodClass="Core.ClassDescription">methodsFor</Method>
			<Method methodClass="Core.ClassDescription">owningPackage</Method>
			<Method methodClass="Core.ClassDescription">sourceFilerClass</Method>
			<Method methodClass="Core.ClassDescription">whichNonVirtualCategoriesIncludeSelector:</Method>
			<Method methodClass="Core.Collection">anyOne</Method>
			<Method methodClass="Kernel.CompiledCode">byteCodeDispatcher</Method>
			<Method methodClass="Kernel.CompiledCode">envInfo</Method>
			<Method methodClass="Kernel.CompiledCode">literalAt:</Method>
			<Method methodClass="Kernel.CompiledCode">literalsDo:</Method>
			<Method methodClass="Kernel.CompiledCode">setByteCodes:</Method>
			<Method methodClass="Kernel.CompiledExpression">isExpression</Method>
			<Method methodClass="Kernel.CompiledExpression">owningPackage</Method>
			<Method methodClass="Kernel.CompiledMethod">isExpression</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:for:environment:logged:</Method>
			<Method methodClass="Kernel.CompilerNotification class">beep</Method>
			<Method methodClass="Kernel.ConsoleSessionManager">initializeFromSessionManager:</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_setRunFlag:</Method>
			<Method methodClass="External.DynamicLinkLibrary class">default:</Method>
			<Method methodClass="Core.Error">notify</Method>
			<Method methodClass="Core.Exception">beep</Method>
			<Method methodClass="Core.Exception class">beep</Method>
			<Method methodClass="External.ExternalMethod">functionName</Method>
			<Method methodClass="Core.File">read:</Method>
			<Method methodClass="Core.File class">composePath:stem:extension:</Method>
			<Method methodClass="Core.File class">composeStem:extension:</Method>
			<Method methodClass="Core.File class">find:</Method>
			<Method methodClass="Core.File class">fullPathOf:relativeTo:</Method>
			<Method methodClass="Core.File class">replacePath:with:</Method>
			<Method methodClass="Core.FileLocator">relativePathTo:</Method>
			<Method methodClass="Core.FileLocator class">imageRelative</Method>
			<Method methodClass="Kernel.FullBindingReference">environmentName</Method>
			<Method methodClass="Kernel.FullBindingReference">instance</Method>
			<Method methodClass="Smalltalk.ImageStripper">_foldDuplicateConstants</Method>
			<Method methodClass="Smalltalk.ImageStripper">_removeDevelopmentObjects:</Method>
			<Method methodClass="Core.Integer">&gt;&gt;</Method>
			<Method methodClass="OS.KernelLibrary">zeroMemory:length:</Method>
			<Method methodClass="Kernel.MetaBindingReference">instance</Method>
			<Method methodClass="Core.MethodCategory">addClass:</Method>
			<Method methodClass="Core.MethodCategory">behaviorsDo:</Method>
			<Method methodClass="Core.MethodCategory">methodsInBehavior:</Method>
			<Method methodClass="Core.MethodCategory">removeMethodSilently:</Method>
			<Method methodClass="Kernel.MethodCompileFailed">resumeWithStubMethod</Method>
			<Method methodClass="Core.Object">changed</Method>
			<Method methodClass="Core.Object">propertyAt:ifAbsent:</Method>
			<Method methodClass="Core.Object">propertyAt:put:</Method>
			<Method methodClass="Core.Object">removePropertyAt:</Method>
			<Method methodClass="External.PermanentLibrary class">default:</Method>
			<Method methodClass="Core.PositionableStream">collection</Method>
			<Method methodClass="Kernel.PropertyManager">register</Method>
			<Method methodClass="Kernel.RelativeBindingReference">environmentName</Method>
			<Method methodClass="Kernel.RelativeFileLocator">relativePathTo:</Method>
			<Method methodClass="UI.ResourceIdentifier">compiledMethod</Method>
			<Method methodClass="UI.ResourceIdentifier">hiddenObjects</Method>
			<Method methodClass="UI.ResourceIdentifier class">allResourceIdentifiers</Method>
			<Method methodClass="UI.ResourceIdentifier class">class:name:</Method>
			<Method methodClass="UI.ResourceIdentifier class">removeResource:</Method>
			<Method methodClass="Core.SequenceableCollection">anyOne</Method>
			<Method methodClass="Core.SequenceableCollection">emitEncodingMarkerOn:</Method>
			<Method methodClass="Core.SequenceableCollection">skipEncodingMarkerFrom:</Method>
			<Method methodClass="Core.SequenceableCollection class">emitEncodingMarkerOn:</Method>
			<Method methodClass="Core.SessionManager">initializeFromSessionManager:</Method>
			<Method methodClass="Core.Set">find:</Method>
			<Method methodClass="OS.StdioFileStream">isBinary</Method>
			<Method methodClass="OS.StdioFileStream class">read:</Method>
			<Method methodClass="Core.String">expandMacrosWith:with:with:</Method>
			<Method methodClass="Core.String">sameAs:</Method>
			<Method methodClass="Core.String">subStrings</Method>
			<Method methodClass="Core.String">truncateTo:</Method>
			<Method methodClass="External.Structure class">register</Method>
			<Method methodClass="Core.Utf16String">skipEncodingMarkerFrom:</Method>
			<Method methodClass="Core.UtfEncodedString">emitEncodingMarkerOn:</Method>
			<Method methodClass="Core.UtfEncodedString">skipEncodingMarkerFrom:</Method>
			<Method methodClass="Kernel.VMLibrary">selectorOfSpecialSend:</Method>
			<Method methodClass="Kernel.VMLibrary">selectorOfSpecialSendEx:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.AbstractSTBInFiler">readMap</Method>
			<Method methodClass="Core.Behavior">compile:environment:</Method>
			<Method methodClass="Core.Behavior">compiledMethodAt:</Method>
			<Method methodClass="Core.Behavior">withAllSuperclassesDo:</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">scope</Method>
			<Method methodClass="Kernel.BlockClosure">cull:cull:</Method>
			<Method methodClass="Core.ByteArray">_sameAsString:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">dispatchNext</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">interpreter:</Method>
			<Method methodClass="Core.Class class">allMethodsDo:</Method>
			<Method methodClass="Core.ClassDescription">allMethodsDo:</Method>
			<Method methodClass="Core.ClassDescription">changeIndex</Method>
			<Method methodClass="Core.ClassDescription">includesCategory:</Method>
			<Method methodClass="Core.ClassDescription">protocols</Method>
			<Method methodClass="Core.ClassDescription">removeSelector:fromCategory:</Method>
			<Method methodClass="Core.Collection">asSet</Method>
			<Method methodClass="Core.Collection">errorEmptyCollection</Method>
			<Method methodClass="Kernel.CompiledCode">byteCodeDispatcherClass</Method>
			<Method methodClass="Kernel.CompileFailedMethod class">buildSourceForSelector:class:</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:for:</Method>
			<Method methodClass="Core.Dictionary">asSet</Method>
			<Method methodClass="Core.Error class">mbIconId</Method>
			<Method methodClass="Core.Error class">notYetImplemented</Method>
			<Method methodClass="Kernel.EventsCollection">removeActionsForEvent:</Method>
			<Method methodClass="Core.Exception class">mbIconId</Method>
			<Method methodClass="Core.File class">for:do:</Method>
			<Method methodClass="Core.File class">isRelativePath:</Method>
			<Method methodClass="Core.File class">makePath:</Method>
			<Method methodClass="Core.File class">splitPath:</Method>
			<Method methodClass="Core.FileLocator">relativePathIfSubPath:</Method>
			<Method methodClass="Kernel.FullBindingReference">scope</Method>
			<Method methodClass="Core.MessageSendAbstract">cull:cull:</Method>
			<Method methodClass="Kernel.Namespace class">asSet</Method>
			<Method methodClass="Kernel.Namespace class">declareVariable:</Method>
			<Method methodClass="Core.Notification class">mbIconId</Method>
			<Method methodClass="Kernel.NullEventsCollection">removeActionsForEvent:</Method>
			<Method methodClass="Core.Object">changed:</Method>
			<Method methodClass="Core.Object">removePropertyAt:ifAbsent:</Method>
			<Method methodClass="Kernel.PropertyManager">propertyOf:at:ifAbsent:</Method>
			<Method methodClass="Kernel.PropertyManager">propertyOf:at:put:</Method>
			<Method methodClass="Kernel.RelativeBindingReference">scope</Method>
			<Method methodClass="UI.ResourceIdentifier">resource</Method>
			<Method methodClass="UI.ResourceIdentifier class">allResourceIdentifiersDo:</Method>
			<Method methodClass="Core.SequenceableCollection">_sameAsString:</Method>
			<Method methodClass="Core.SequenceableCollection">allButLast</Method>
			<Method methodClass="Core.SessionManager">basicStdioStreams</Method>
			<Method methodClass="Core.SessionManager">startupArgs</Method>
			<Method methodClass="Core.Set">addIfAbsent:</Method>
			<Method methodClass="Core.Set">asSet</Method>
			<Method methodClass="Core.Set">find:ifAbsent:</Method>
			<Method methodClass="Core.SharedSet">find:ifAbsent:</Method>
			<Method methodClass="Smalltalk class">declareVariable:</Method>
			<Method methodClass="OS.StdioFileStream">isText</Method>
			<Method methodClass="OS.StdioFileStream class">read:text:</Method>
			<Method methodClass="OS.StdioTextFileStream">isText</Method>
			<Method methodClass="Core.String">_sameAsString:</Method>
			<Method methodClass="External.Structure class">registerClass:forGUID:</Method>
			<Method methodClass="OS.UserLibrary">messageBeep:</Method>
			<Method methodClass="Core.Utf16String">bom</Method>
			<Method methodClass="Core.Utf8String">bom</Method>
			<Method methodClass="Core.Warning class">mbIconId</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="External.Address">approxSize</Method>
			<Method methodClass="Core.Behavior">basicCompile:environment:</Method>
			<Method methodClass="Kernel.ByteCodeDispatcher">fetch</Method>
			<Method methodClass="Core.ClassDescription">methodsCatalogue</Method>
			<Method methodClass="Core.ClassDescription">methodsCatalogue:</Method>
			<Method methodClass="Core.ClassDescription">resourceIdentifiersDo:</Method>
			<Method methodClass="Core.Collection">approxSize</Method>
			<Method methodClass="Kernel.CompilationResult">fireSystemUpdateEvent</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:for:environment:</Method>
			<Method methodClass="Core.Dictionary">keyAtValue:ifAbsent:</Method>
			<Method methodClass="Core.File class">for:in:do:</Method>
			<Method methodClass="Core.FileLocator">relativeToBase:</Method>
			<Method methodClass="Core.LinkedList">approxSize</Method>
			<Method methodClass="Core.LookupTable">keyAtValue:ifAbsent:</Method>
			<Method methodClass="Core.MethodCategory">asMethodCategory</Method>
			<Method methodClass="Kernel.Namespace class">keyAtValue:ifAbsent:</Method>
			<Method methodClass="Core.Object">changed:with:</Method>
			<Method methodClass="Core.Object">propertyManager</Method>
			<Method methodClass="Kernel.PropertyManager">removePropertyOf:at:ifAbsent:</Method>
			<Method methodClass="Core.SequenceableCollection">allButLast:</Method>
			<Method methodClass="Core.SequenceableCollection">approxSize</Method>
			<Method methodClass="Core.SequenceableCollection">keyAtValue:ifAbsent:</Method>
			<Method methodClass="Core.Set">approxSize</Method>
			<Method methodClass="Core.SharedLookupTable">keyAtValue:ifAbsent:</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathIsRelative:</Method>
			<Method methodClass="OS.StdioFileStream class">read:type:</Method>
			<Method methodClass="Core.Stream">crtab</Method>
			<Method methodClass="Core.String">asMethodCategory</Method>
			<Method methodClass="Core.String">lastCodeUnit</Method>
			<Method methodClass="Core.Symbol">isInfix</Method>
			<Method methodClass="Core.UtfEncodedString">allButLast:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Behavior">annotationsUpdated:</Method>
			<Method methodClass="Core.Behavior">basicCompile:flags:environment:</Method>
			<Method methodClass="Core.Behavior">defaultCompilationFlags</Method>
			<Method methodClass="Core.Behavior">selectorsDo:</Method>
			<Method methodClass="Core.Class">metaclass</Method>
			<Method methodClass="Kernel.CompilationResult">isNew</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:for:environment:evaluationPools:logged:</Method>
			<Method methodClass="Core.File class">relativePathOf:to:</Method>
			<Method methodClass="Core.FileLocator">basePath</Method>
			<Method methodClass="Kernel.InstallRelativeFileLocator">basePath</Method>
			<Method methodClass="OS.KernelLibrary">findClose:</Method>
			<Method methodClass="OS.KernelLibrary">findFirstFile:lpFindFileData:</Method>
			<Method methodClass="OS.KernelLibrary">findNextFile:lpFindFileData:</Method>
			<Method methodClass="Core.Metaclass">metaclass</Method>
			<Method methodClass="Core.Object">dependents</Method>
			<Method methodClass="Core.Object">update:with:from:</Method>
			<Method methodClass="OS.StdioFileStream class">open:mode:check:type:</Method>
			<Method methodClass="Core.WeakArray">nonCorpsesDo:</Method>
			<Method methodClass="OS.WIN32_FIND_DATAW">directory:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Behavior">addSelector:withMethod:</Method>
			<Method methodClass="Core.Behavior">compilerClass</Method>
			<Method methodClass="Kernel.CompilationResult">oldMethod:</Method>
			<Method methodClass="Kernel.CompiledCode">compilerClass</Method>
			<Method methodClass="Kernel.CompiledCode">storeSourceString:</Method>
			<Method methodClass="Kernel.CompiledMethod">storeSourceString:</Method>
			<Method methodClass="Kernel.Compiler class">compile:in:environment:flags:</Method>
			<Method methodClass="Kernel.Compiler class">defaultFlags</Method>
			<Method methodClass="Kernel.Compiler class">errorClass</Method>
			<Method methodClass="Kernel.Compiler class">evaluate:for:environment:evaluationPools:logged:ifFail:</Method>
			<Method methodClass="Core.Exception">pass</Method>
			<Method methodClass="Core.File class">sniffEncoding:</Method>
			<Method methodClass="OS.KernelLibrary">getFileAttributes:</Method>
			<Method methodClass="Kernel.MethodCompileFailed">error:environment:</Method>
			<Method methodClass="Kernel.MethodCompileFailed class">error:environment:</Method>
			<Method methodClass="Core.Object">getDependents</Method>
			<Method methodClass="Core.Object">update:with:</Method>
			<Method methodClass="Core.SessionManager">installationDirectory</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathRelativePathTo:pszFrom:dwAttrFrom:pszTo:dwAttrTo:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.ClassDescription">sourceManager</Method>
			<Method methodClass="Kernel.Compiler class">compileForEvaluation:in:environment:evaluationPools:flags:</Method>
			<Method methodClass="Kernel.CompilerLibrary">compile:source:length:in:environment:flags:notifying:</Method>
			<Method methodClass="Core.Object">update:</Method>
			<Method methodClass="Core.SessionManager">imageBase</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.CompilationResult">method:rawTextMap:rawTempsMap:</Method>
			<Method methodClass="Kernel.CompilationResult class">method:rawTextMap:rawTempsMap:</Method>
			<Method methodClass="Kernel.CompiledCode">methodClass:</Method>
			<Method methodClass="Kernel.CompilerLibrary">compileForEvaluation:source:length:in:environment:evaluationPools:flags:notifying:</Method>
			<Method methodClass="Core.File class">splitPathFrom:</Method>
			<Method methodClass="Core.SequenceableCollection">third</Method>
			<Method methodClass="Core.UtfEncodedString">third</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS.CRTLibrary">strcat_s:bufferSize:strSource:</Method>
		</StripMethods>
		<StripMethods reason="abstract unreachable">
			<Method methodClass="Kernel.AbstractSTBInFiler">basicNext</Method>
			<Method methodClass="Kernel.AbstractSTBInFiler">readInteger</Method>
			<Method methodClass="Kernel.AbstractSTBInFiler">readSizeBlock</Method>
			<Method methodClass="Kernel.AbstractSTBInFiler">readVersion</Method>
			<Method methodClass="Core.ArithmeticValue">-</Method>
			<Method methodClass="Core.ArithmeticValue">equalToInteger:</Method>
			<Method methodClass="Core.ArithmeticValue">isZero</Method>
			<Method methodClass="Core.ArithmeticValue">negated</Method>
			<Method methodClass="Core.ArithmeticValue">truncated</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_allReferencedClasses</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_deploymentContext</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_onNotification:</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_purgeStubbornClass:</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_removeRedundantMethods</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_rootClasses</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_shouldPreserveMethod:</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">_shouldRemoveResources</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">emptyMethodDictionariesOfStubbornClasses</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">retainInstVarNames</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">stripClassInfo</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">stripRedundantClasses</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">stripRedundantMethods</Method>
			<Method methodClass="Smalltalk.BasicImageStripper">stripRedundantResources</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">asString</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">displayOn:</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">isMeta</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper">meta</Method>
			<Method methodClass="Core.ClassDescription">fullName</Method>
			<Method methodClass="Core.Integer">-</Method>
			<Method methodClass="Core.Integer">*</Method>
			<Method methodClass="Core.Integer">/</Method>
			<Method methodClass="Core.Integer">+</Method>
			<Method methodClass="Core.Integer">&lt;</Method>
			<Method methodClass="Core.Integer">byteAt:</Method>
			<Method methodClass="External.IntegerBytes">asUIntPtr</Method>
			<Method methodClass="Core.Locale">primary</Method>
			<Method methodClass="Core.MessageSequenceAbstract">value</Method>
			<Method methodClass="Core.SearchPolicy">name</Method>
			<Method methodClass="Core.SequencedGrowableCollection">addLast:</Method>
			<Method methodClass="Core.SequencedStream">reset</Method>
			<Method methodClass="Core.SessionManager">allocConsole</Method>
			<Method methodClass="Core.SessionManager">isEmbedded</Method>
			<Method methodClass="Core.SessionManager">main</Method>
			<Method methodClass="Core.SessionManager">onCloseConsole</Method>
			<Method methodClass="Core.SessionManager">openStdErr</Method>
			<Method methodClass="Core.SessionManager">openStdIn</Method>
			<Method methodClass="Core.SessionManager">openStdOut</Method>
			<Method methodClass="Core.SessionManager">quit:</Method>
			<Method methodClass="Core.SessionManager">registerConsoleCtrlHandler</Method>
			<Method methodClass="Core.SessionManager">traceStream</Method>
			<Method methodClass="Core.SessionManager">unhandledException:</Method>
			<Method methodClass="Core.SortAlgorithm">compare:with:</Method>
			<Method methodClass="Kernel.STBFiler">registerAll:</Method>
			<Method methodClass="Core.Stream">contentsSpecies</Method>
			<Method methodClass="Core.Stream">locale</Method>
			<Method methodClass="Core.Stream">skip:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BindingReferenceWrapper">newWrapping:</Method>
			<Method methodClass="Kernel.BlockClosure">postToInputQueue</Method>
			<Method methodClass="External.Callback class">receiver:selector:descriptor:</Method>
			<Method methodClass="Kernel.DefaultSortAlgorithm">sortBlock</Method>
			<Method methodClass="Core.Exception">okToContinue</Method>
			<Method methodClass="External.FunctionDescriptor class">fromString:environment:</Method>
			<Method methodClass="Smalltalk.ImageStripper">stripRedundantResources</Method>
			<Method methodClass="OS.KernelLibrary">setConsoleCP:</Method>
			<Method methodClass="OS.KernelLibrary">setConsoleOutputCP:</Method>
			<Method methodClass="OS.KernelLibrary">setConsoleTitle:</Method>
			<Method methodClass="Core.OrderedCollection">add:afterIndex:</Method>
			<Method methodClass="Core.Process">debugStream</Method>
			<Method methodClass="Core.SessionManager">isDLL</Method>
			<Method methodClass="Core.SessionManager">isEmbedding</Method>
			<Method methodClass="Core.SessionManager">onConsoleCtrl:</Method>
			<Method methodClass="Core.SessionManager">openFd:mode:</Method>
			<Method methodClass="Core.SessionManager class">isDLL</Method>
			<Method methodClass="Core.SortedCollection">sortBlock</Method>
			<Method methodClass="OS.StdioFileStream class">openFd:mode:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.ConsoleSessionManager">onCloseConsole</Method>
			<Method methodClass="Core.Exception">showMessage:style:</Method>
			<Method methodClass="External.FunctionDescriptor class">parseDescriptor:environment:</Method>
			<Method methodClass="OS.KernelLibrary">getStdHandle:</Method>
			<Method methodClass="OS.StdioFileStream">attach:toFd:mode:</Method>
			<Method methodClass="OS.StdioFileStream class">attach:toFd:mode:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS.CRTLibrary">_dup:</Method>
			<Method methodClass="Core.Delay">cancel</Method>
			<Method methodClass="Core.Exception">abort</Method>
			<Method methodClass="Core.Exception">ignore</Method>
			<Method methodClass="Core.Exception">retry</Method>
			<Method methodClass="Kernel.ExceptionHandlerAbstract">retry</Method>
			<Method methodClass="External.FunctionDescriptor class">parseArgDesc:environment:</Method>
			<Method methodClass="External.FunctionDescriptor class">parseCallingConvention:</Method>
			<Method methodClass="Core.Pair class">first:second:</Method>
			<Method methodClass="OS.StdioFileStream class">attachMode:</Method>
			<Method methodClass="OS.UserLibrary">messageBox:text:caption:style:icon:instance:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.AnsiString">first:</Method>
			<Method methodClass="Core.AnsiString class">with:with:</Method>
			<Method methodClass="Core.Array class">with:with:</Method>
			<Method methodClass="Core.ArrayedCollection class">with:with:</Method>
			<Method methodClass="Core.Collection class">with:with:</Method>
			<Method methodClass="External.FunctionDescriptor class">conventionFromName:</Method>
			<Method methodClass="External.FunctionDescriptor class">parseDoubleIndirection:typeName:environment:</Method>
			<Method methodClass="External.FunctionDescriptor class">parseSingleIndirection:environment:</Method>
			<Method methodClass="External.FunctionDescriptor class">parseValueType:environment:</Method>
			<Method methodClass="External.FunctionDescriptor class">referenceTypeFor:</Method>
			<Method methodClass="External.FunctionDescriptor class">typeFromName:ifAbsent:</Method>
			<Method methodClass="Kernel.InputState">startIdleTimer</Method>
			<Method methodClass="Kernel.InputState">stopIdleTimer</Method>
			<Method methodClass="Core.Integer">asResourceId</Method>
			<Method methodClass="OS.MSGBOXPARAMSW">caption:</Method>
			<Method methodClass="OS.MSGBOXPARAMSW">dwStyle:</Method>
			<Method methodClass="OS.MSGBOXPARAMSW">hInstance:</Method>
			<Method methodClass="OS.MSGBOXPARAMSW">hwndOwner:</Method>
			<Method methodClass="OS.MSGBOXPARAMSW">lpszIcon:</Method>
			<Method methodClass="OS.MSGBOXPARAMSW">text:</Method>
			<Method methodClass="Core.Pair">first:</Method>
			<Method methodClass="Core.Pair">second:</Method>
			<Method methodClass="Kernel.ProcessorScheduler">forkMainIfMain</Method>
			<Method methodClass="Core.SequenceableCollection">first:</Method>
			<Method methodClass="Core.SequencedStream">nextWord</Method>
			<Method methodClass="OS.StdioBinaryFileStream class">encodingMode</Method>
			<Method methodClass="OS.StdioTextFileStream class">encodingMode</Method>
			<Method methodClass="Core.String">asResourceId</Method>
			<Method methodClass="Core.String class">with:with:</Method>
			<Method methodClass="OS.UserLibrary">enableWindow:bEnable:</Method>
			<Method methodClass="OS.UserLibrary">getActiveWindow</Method>
			<Method methodClass="OS.UserLibrary">isWindowEnabled:</Method>
			<Method methodClass="OS.UserLibrary">messageBoxIndirect:</Method>
			<Method methodClass="OS.UserLibrary">overlappedMsgBoxIndirect:</Method>
			<Method methodClass="Core.UtfEncodedString">first:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BlockClosure">critical</Method>
			<Method methodClass="External.FunctionDescriptor class">parsePointerToStruct:environment:</Method>
			<Method methodClass="External.FunctionDescriptor class">parseStructArg:environment:</Method>
			<Method methodClass="OS.MSGBOXPARAMSW">lpszCaption:</Method>
			<Method methodClass="OS.MSGBOXPARAMSW">lpszText:</Method>
			<Method methodClass="OS.UserLibrary">setTimer:nIDEvent:uElapse:lpTimerFunc:</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="2">
		<StripClasses reason="unreferenced">
			<RemoveClass>Kernel.ByteCodeDispatcher</RemoveClass>
			<RemoveClass>Core.MethodCategory</RemoveClass>
			<RemoveClass>Core.Category</RemoveClass>
			<RemoveClass>Kernel.ChunkReader</RemoveClass>
			<RemoveClass>Kernel.CompilationResult</RemoveClass>
			<RemoveClass>Kernel.Compiler</RemoveClass>
			<!-- Unregistering VM ref #notificationCallback: -->
			<!-- Unregistering VM ref #allInstVarNames -->
			<!-- Unregistering VM ref #evaluate:for:evaluationPools: -->
			<!-- Unregistering VM ref #bindingFor: -->
			<!-- Unregistering VM ref #fullBindingFor:environment: -->
			<!-- Unregistering VM ref #asNumber -->
			<!-- Unregistering VM ref #understandsArithmetic -->
			<!-- Unregistering VM ref #negative -->
			<!-- Unregistering VM ref #pathString:scope:flags: -->
			<!-- Unregistering VM ref #namespace: -->
			<!-- Unregistering VM ref #setScope: -->
			<!-- Unregistering VM ref BindingReference -->
			<!-- Unregistering VM ref Smalltalk -->
			<RemoveClass>Core.Pair</RemoveClass>
			<RemoveClass>Kernel.PropertyManager</RemoveClass>
			<!-- Discarding preserved resource messages: #() -->
			<RemoveClass>UI.ResourceIdentifier</RemoveClass>
			<RemoveClass>Kernel.STBClassConversion</RemoveClass>
			<RemoveClass>Kernel.STLClassCollector</RemoveClass>
			<RemoveClass>Kernel.STLInFiler</RemoveClass>
			<RemoveClass>Kernel.AbstractSTBInFiler</RemoveClass>
			<RemoveClass>Kernel.STBFiler</RemoveClass>
			<RemoveClass>Kernel.STBMetaclassProxy</RemoveClass>
			<RemoveClass>Kernel.STBClassProxy</RemoveClass>
			<RemoveClass>Kernel.STBIdentityDictionaryProxy</RemoveClass>
			<RemoveClass>Kernel.STBCollectionProxy</RemoveClass>
			<RemoveClass>Kernel.STBProxy</RemoveClass>
			<RemoveClass>External.MessageCallback</RemoveClass>
			<!-- Uninstalling VM callback entry point -->
			<RemoveClass>Kernel.CompileFailedMethod</RemoveClass>
			<RemoveClass>Kernel.STBError</RemoveClass>
			<RemoveClass>Kernel.CompilerErrorNotification</RemoveClass>
			<RemoveClass>Kernel.CompilerInfoNotification</RemoveClass>
			<RemoveClass>Kernel.CompilerWarningNotification</RemoveClass>
			<RemoveClass>Kernel.CompilerNotification</RemoveClass>
			<RemoveClass>Kernel.MethodCompileFailed</RemoveClass>
			<RemoveClass>Kernel.ClassLocator</RemoveClass>
			<RemoveClass>UI</RemoveClass>
			<RemoveClass>OS.MSGBOXPARAMSW</RemoveClass>
			<RemoveClass>OS.WIN32_FIND_DATAW</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Association">key:</Method>
			<Method methodClass="Core.Behavior">allInstVarNames</Method>
			<Method methodClass="Core.Behavior">isBehavior</Method>
			<Method methodClass="Core.Behavior">isVariable</Method>
			<Method methodClass="Kernel.BindingReference">asQualifiedReference</Method>
			<Method methodClass="Kernel.BindingReference class">stbConvertFrom:</Method>
			<Method methodClass="Kernel.BindingReference class">stbVersion</Method>
			<Method methodClass="Kernel.BlockClosure class">stbVersion</Method>
			<Method methodClass="Core.ByteArray class">stbReadFrom:format:</Method>
			<Method methodClass="External.Callback class">callback:withArgumentsAt:</Method>
			<Method methodClass="Core.Class">removeImport:</Method>
			<Method methodClass="Core.Class">stbConvertFrom:</Method>
			<Method methodClass="Core.Class">stbVersion</Method>
			<Method methodClass="Core.Class class">allBehaviorsDo:</Method>
			<Method methodClass="Core.ClassDescription">asQualifiedReference</Method>
			<Method methodClass="Core.ClassDescription">selectorsInCategory:</Method>
			<Method methodClass="Core.ClassDescription">stbReadFrom:format:</Method>
			<Method methodClass="Kernel.CompiledCode">selector:</Method>
			<Method methodClass="Kernel.CompiledExpression">evaluate:for:evaluationPools:</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_preservedMessages:</Method>
			<Method methodClass="Core.Dictionary">at:ifAbsentPutClean:</Method>
			<Method methodClass="External.DynamicLinkLibrary class">stbReadFrom:format:</Method>
			<Method methodClass="Kernel.EventMessageSend">selector:</Method>
			<Method methodClass="Kernel.EventsCollection">removeEventsTriggeredFor:</Method>
			<Method methodClass="Core.Exception">severityClass</Method>
			<Method methodClass="Core.Exception class">severityClass</Method>
			<Method methodClass="Core.File class">composePath:subPath:</Method>
			<Method methodClass="OS.HRESULT">errorCode</Method>
			<Method methodClass="OS.HRESULTError">source</Method>
			<Method methodClass="Kernel.ImageRelativeFileLocator class">stbReadFrom:format:</Method>
			<Method methodClass="Kernel.InstallRelativeFileLocator class">stbReadFrom:format:</Method>
			<Method methodClass="Core.Interval">stop:</Method>
			<Method methodClass="OS.InvariantLocale class">stbReadFrom:format:</Method>
			<Method methodClass="Core.Locale class">stbConvertFrom:</Method>
			<Method methodClass="Core.Locale class">stbReadFrom:format:</Method>
			<Method methodClass="Core.Locale class">stbVersion</Method>
			<Method methodClass="Core.LookupTable">at:ifAbsentPutClean:</Method>
			<Method methodClass="Core.Message">selector:</Method>
			<Method methodClass="Core.Message class">selector:</Method>
			<Method methodClass="Kernel.MetaBindingReference class">stbConvertFrom:</Method>
			<Method methodClass="Kernel.Namespace class">allBehaviorsDo:</Method>
			<Method methodClass="Core.Notification class">severityClass</Method>
			<Method methodClass="Kernel.NullEventsCollection">removeEventsTriggeredFor:</Method>
			<Method methodClass="Core.Object">isBehavior</Method>
			<Method methodClass="Core.Object">isSymbol</Method>
			<Method methodClass="Core.Object">perform:withArgumentsAt:descriptor:</Method>
			<Method methodClass="Core.Object">removeEventsTriggeredFor:</Method>
			<Method methodClass="Core.Object">stbFixup:at:</Method>
			<Method methodClass="Core.OrderedCollection">setSize:</Method>
			<Method methodClass="Core.PositionableStream">nextAvailable:</Method>
			<Method methodClass="Core.SequenceableCollection">second</Method>
			<Method methodClass="Core.SharedLookupTable">at:ifAbsentPutClean:</Method>
			<Method methodClass="Kernel.SingletonSearchPolicy class">stbReadFrom:format:</Method>
			<Method methodClass="Kernel.SmalltalkLocale class">stbReadFrom:format:</Method>
			<Method methodClass="OS.StdioFileStream">nextAvailable:</Method>
			<Method methodClass="Core.Stream">nextAvailable:</Method>
			<Method methodClass="Core.Stream">store:</Method>
			<Method methodClass="Core.String">asNumber</Method>
			<Method methodClass="Core.String">asQualifiedReference</Method>
			<Method methodClass="Core.String class">stbConvertFrom:</Method>
			<Method methodClass="Core.String class">stbVersion</Method>
			<Method methodClass="External.Structure class">stbReadFrom:format:</Method>
			<Method methodClass="Core.Symbol">isSymbol</Method>
			<Method methodClass="Core.Symbol class">stbReadFrom:format:</Method>
			<Method methodClass="Core.Utf16String class">stbConvertFrom:</Method>
			<Method methodClass="Core.UtfEncodedString">second</Method>
			<Method methodClass="Kernel.VariableBinding">asQualifiedReference</Method>
			<Method methodClass="Kernel.VariableBinding class">stbConvertFrom:</Method>
			<Method methodClass="Kernel.VariableBinding class">stbVersion</Method>
			<Method methodClass="Core.Warning class">severityClass</Method>
			<Method methodClass="Core.WeakLookupTable">haveStrongValues</Method>
			<Method methodClass="OS.WindowsLocale class">stbReadFrom:format:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Array">storeOn:</Method>
			<Method methodClass="Core.Behavior">instVarNames</Method>
			<Method methodClass="Kernel.BindingReference">storeOn:</Method>
			<Method methodClass="Kernel.BindingReference class">pathString:</Method>
			<Method methodClass="Kernel.BindingReference class">pathString:home:</Method>
			<Method methodClass="Kernel.BindingReference class">stbConvertFromVersion0:</Method>
			<Method methodClass="Kernel.BindingReference class">stbConvertFromVersion1:</Method>
			<Method methodClass="Core.ByteArray">storeOn:</Method>
			<Method methodClass="External.Callback class">fromCookie:</Method>
			<Method methodClass="Core.Class">fullyQualifiedReference</Method>
			<Method methodClass="Core.Class">imports:</Method>
			<Method methodClass="Core.ClassDescription">instVarNames</Method>
			<Method methodClass="Core.ClassDescription">storeOn:</Method>
			<Method methodClass="Core.Collection">storeOn:</Method>
			<Method methodClass="Kernel.CompiledExpression">storeSourceString:evaluationPools:</Method>
			<Method methodClass="Core.Dictionary">storeOn:</Method>
			<Method methodClass="Core.Duration">storeOn:</Method>
			<Method methodClass="Core.Duration class">fromString:</Method>
			<Method methodClass="Kernel.EventMessageSequence">removeMessagesFor:</Method>
			<Method methodClass="Core.File class">pathBuffer</Method>
			<Method methodClass="Core.GUID class">fromString:</Method>
			<Method methodClass="Core.Integer">maskClear:</Method>
			<Method methodClass="Core.Interval">storeOn:</Method>
			<Method methodClass="Core.Locale class">systemDefault</Method>
			<Method methodClass="Core.Metaclass">fullyQualifiedReference</Method>
			<Method methodClass="Core.Metaclass">imports:</Method>
			<Method methodClass="Core.Number class">fromString:</Method>
			<Method methodClass="Core.Object">assert:</Method>
			<Method methodClass="Core.Object">ifNotNil:ifNil:</Method>
			<Method methodClass="Core.Object">storeOn:</Method>
			<Method methodClass="Core.OrderedCollection">copyWithout:</Method>
			<Method methodClass="Core.PositionableStream">nextSDWORD</Method>
			<Method methodClass="Kernel.RelativeBindingReference class">stbConvertFromVersion1:</Method>
			<Method methodClass="Root class">imports:</Method>
			<Method methodClass="Core.ScaledDecimal">storeOn:</Method>
			<Method methodClass="Core.SequenceableCollection">copyWithout:</Method>
			<Method methodClass="Core.SequenceableCollection">decodeNextAvailable:from:</Method>
			<Method methodClass="OS.ShlwapiLibrary">pathCombine:lpszDir:lpszFile:</Method>
			<Method methodClass="Core.Stream">next:</Method>
			<Method methodClass="Core.String">decodeNextAvailable:from:</Method>
			<Method methodClass="Core.String">storeOn:</Method>
			<Method methodClass="Core.String class">fromString:</Method>
			<Method methodClass="Core.Symbol class">stbReadFromProxy:</Method>
			<Method methodClass="Core.UndefinedObject">ifNotNil:ifNil:</Method>
			<Method methodClass="Core.UtfEncodedString">codePointAt:</Method>
			<Method methodClass="Kernel.VariableBinding">fullyQualifiedReference</Method>
			<Method methodClass="Kernel.VariableBinding">isClassVariable:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BindingReference class">path:</Method>
			<Method methodClass="Kernel.BindingReference class">pathString:private:scope:</Method>
			<Method methodClass="Kernel.BindingReference class">pathString:scope:</Method>
			<Method methodClass="Core.Class">fullPath</Method>
			<Method methodClass="Core.Class">sourceDescriptor:</Method>
			<Method methodClass="Core.ClassDescription">isChanged:</Method>
			<Method methodClass="Core.Collection">storingClass</Method>
			<Method methodClass="Kernel.CompiledCode">sourceDescriptor:</Method>
			<Method methodClass="Core.Duration">seconds</Method>
			<Method methodClass="Core.Duration class">readFrom:</Method>
			<Method methodClass="Core.File class">maxPath</Method>
			<Method methodClass="Core.Float class">readFrom:</Method>
			<Method methodClass="Core.Fraction class">readFrom:</Method>
			<Method methodClass="Kernel.FullBindingReference class">fullPathString:</Method>
			<Method methodClass="Core.Integer class">readFrom:</Method>
			<Method methodClass="OS.KernelLibrary">getSystemDefaultLCID</Method>
			<Method methodClass="Kernel.MetaBindingReference class">pathString:private:scope:</Method>
			<Method methodClass="Kernel.MetaBindingReference class">pathString:scope:</Method>
			<Method methodClass="Core.Number">seconds</Method>
			<Method methodClass="Core.Number class">readFrom:</Method>
			<Method methodClass="OS.RPCLibrary">uuidFromString:uuid:</Method>
			<Method methodClass="Core.String class">readFrom:</Method>
			<Method methodClass="Core.Symbol class">readFrom:</Method>
			<Method methodClass="Core.UtfEncodedString">indexOfNth:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BindingReference class">path:scope:</Method>
			<Method methodClass="Kernel.BindingReference class">pathString:scope:flags:</Method>
			<Method methodClass="Core.Class">pathFrom:</Method>
			<Method methodClass="Core.Duration class">readFrom:sign:withDays:</Method>
			<Method methodClass="Core.Integer class">readFrom:initialInteger:</Method>
			<Method methodClass="Core.Number class">readFractionFrom:initialInteger:</Method>
			<Method methodClass="Core.Number class">readSmalltalkSyntaxFrom:</Method>
			<Method methodClass="Core.SequencedStream">skipSeparators</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BindingReference class">path:private:scope:</Method>
			<Method methodClass="Core.Class">isAnonymous</Method>
			<Method methodClass="Core.Duration class">errorInvalidFormat</Method>
			<Method methodClass="Core.Float class">negativeZero</Method>
			<Method methodClass="Kernel.FullBindingReference">meta</Method>
			<Method methodClass="Core.Integer class">readFrom:radix:</Method>
			<Method methodClass="Kernel.MetaBindingReference">meta</Method>
			<Method methodClass="Core.Metaclass">isAnonymous</Method>
			<Method methodClass="Core.Number class">errorInvalidFormat</Method>
			<Method methodClass="Core.Number class">readRadixIntegerFrom:initialInteger:</Method>
			<Method methodClass="Core.Number class">readSmalltalkRealFrom:initialInteger:</Method>
			<Method methodClass="Core.PositionableStream">reverseContents</Method>
			<Method methodClass="Core.SequencedStream">reverseContents</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BindingReference class">newPath:private:scope:</Method>
			<Method methodClass="Core.Float class">maxExponent</Method>
			<Method methodClass="Core.Integer class">readPositiveFrom:radix:</Method>
			<Method methodClass="Kernel.MetaBindingReference class">newPath:private:scope:</Method>
			<Method methodClass="Core.Number class">readExponentIntegerFrom:initialInteger:</Method>
			<Method methodClass="Core.Number class">readScaledDecimalFrom:mantissa:precision:</Method>
			<Method methodClass="Core.SequenceableCollection">reverse</Method>
			<Method methodClass="Core.SequencedStream">peek</Method>
			<Method methodClass="Core.SharedQueue">peek</Method>
			<Method methodClass="Core.SortedCollection">reverse</Method>
			<Method methodClass="OS.StdioAnsiFileStream">peek</Method>
			<Method methodClass="OS.StdioBinaryFileStream">peek</Method>
			<Method methodClass="OS.StdioTextFileStream">peek</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.MetaBindingReference class">instance:</Method>
			<Method methodClass="Core.Number class">errorExponentTooLarge:</Method>
			<Method methodClass="Core.Number class">readDecimalIntegerFrom:allowPlus:</Method>
			<Method methodClass="Core.OrderedCollection">reversedFrom:to:</Method>
			<Method methodClass="Core.OrderedCollection">reverseDo:</Method>
			<Method methodClass="Kernel.RelativeBindingReference class">pathString:path:private:scope:</Method>
			<Method methodClass="Core.ScaledDecimal class">maxPrecision</Method>
			<Method methodClass="Core.SequenceableCollection">reversedFrom:to:</Method>
			<Method methodClass="Core.SequenceableCollection">reverseDo:</Method>
			<Method methodClass="Core.Utf16String">reversedFrom:to:</Method>
			<Method methodClass="Core.Utf8String">reversedFrom:to:</Method>
			<Method methodClass="Core.UtfEncodedString">reverseDo:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BindingReferenceWrapper">setScope:</Method>
			<Method methodClass="Kernel.BindingReferenceWrapper class">wrapping:</Method>
			<Method methodClass="Core.Character">isSurrogate</Method>
			<Method methodClass="Kernel.FullBindingReference class">pathString:path:private:</Method>
			<Method methodClass="Core.Number class">readIntegerFrom:radix:</Method>
			<Method methodClass="Kernel.RelativeBindingReference">setScope:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BindingReferenceWrapper">reference:</Method>
			<Method methodClass="Core.Character">isUtf16Surrogate</Method>
			<Method methodClass="Kernel.FullBindingReference class">newPathString:path:private:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BindingReferenceWrapper">isPrivate:</Method>
			<Method methodClass="Kernel.CompiledCode">isPrivate:</Method>
			<Method methodClass="Kernel.FullBindingReference">isPrivate:</Method>
			<Method methodClass="Kernel.VariableBinding">isPrivate:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Integer">mask:set:</Method>
			<Method methodClass="Core.Object">whileMutableDo:</Method>
			<Method methodClass="Kernel.VariableBinding">setFlags:</Method>
		</StripMethods>
		<StripMethods reason="abstract unreachable">
			<Method methodClass="External.Callback">argumentCount</Method>
			<Method methodClass="External.Callback">argumentsSize</Method>
			<Method methodClass="External.Callback">argumentTypes</Method>
			<Method methodClass="External.Callback">asParameter</Method>
			<Method methodClass="External.Callback">callingConvention</Method>
			<Method methodClass="External.Callback">cookie:</Method>
			<Method methodClass="External.Callback">descriptor</Method>
			<Method methodClass="External.Callback">descriptor:</Method>
			<Method methodClass="External.Callback">free</Method>
			<Method methodClass="External.Callback">makeProcInstance</Method>
			<Method methodClass="External.Callback">thunk</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="External.FunctionDescriptor">argumentsSize</Method>
			<Method methodClass="External.FunctionDescriptor">calleeCleans</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="External.FunctionDescriptor class">sizeOf:type:</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="2">
		<StripClasses reason="unreferenced">
			<RemoveClass>External.Callback</RemoveClass>
			<RemoveClass>Core.Delay</RemoveClass>
			<RemoveClass>Kernel.MetaBindingReference</RemoveClass>
			<RemoveClass>Kernel.BindingReferenceWrapper</RemoveClass>
			<RemoveClass>Kernel.CompilerLibrary</RemoveClass>
			<RemoveClass>Core.InvalidFormat</RemoveClass>
			<RemoveClass>Core.Duration</RemoveClass>
			<RemoveClass>Kernel.EventMessageSend</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="Core.ArithmeticValue">rem:</Method>
			<Method methodClass="OS.KernelLibrary">queryPerformanceFrequency:</Method>
			<Method methodClass="OS.KernelLibrary">virtualAlloc:dwSize:flAllocationType:flProtect:</Method>
			<Method methodClass="OS.KernelLibrary">virtualFree:dwSize:dwFreeType:</Method>
			<Method methodClass="Core.LargeInteger class">new64</Method>
			<Method methodClass="Core.Locale">displayDuration:on:</Method>
			<Method methodClass="Core.Locale">printFractionalPart:on:places:</Method>
			<Method methodClass="OS.NTLibrary">ntQueryTimerResolution:maximum:actual:</Method>
			<Method methodClass="Core.Number">divideIntoDuration:</Method>
			<Method methodClass="Core.Semaphore">critical:atPriority:</Method>
			<Method methodClass="Core.SequencedGrowableCollection">removeFirst</Method>
			<Method methodClass="Kernel.SmalltalkLocale">displayDuration:on:</Method>
			<Method methodClass="Kernel.VMLibrary">compilerFileName</Method>
			<Method methodClass="Kernel.VMLibrary">getGenericCallback</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS.AbstractWindowsLocale">negativeSign</Method>
			<Method methodClass="Core.ArithmeticValue">roundTo:</Method>
			<Method methodClass="Core.Integer">printStringBase:nDigits:</Method>
			<Method methodClass="OS.KernelLibrary">getProcAddressDWORD:lpProcName:</Method>
			<Method methodClass="Core.Locale">printDuration:on:format:</Method>
			<Method methodClass="Core.SmallInteger">printStringBase:nDigits:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">negativeSign</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS.AbstractWindowsLocale">durationFormat</Method>
			<Method methodClass="Core.Locale">print:on:format:alphabet:formatters:</Method>
			<Method methodClass="Kernel.SmalltalkLocale">durationFormat</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.BlockClosure">value:value:value:</Method>
			<Method methodClass="Core.MessageSendAbstract">value:value:value:</Method>
		</StripMethods>
		<StripMethods reason="abstract unreachable">
			<Method methodClass="Kernel.BindingReference">valueOrNil</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="2">
		<StripClasses reason="unreferenced">
			<RemoveClass>Kernel.WeakRegistry</RemoveClass>
			<RemoveClass>Kernel.ObjectRegistry</RemoveClass>
			<RemoveClass>Core.SortedCollection</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.DefaultSortAlgorithm">compare:with:</Method>
			<Method methodClass="Kernel.EqualitySearchPolicy">compare:with:</Method>
			<Method methodClass="Kernel.IdentitySearchPolicy">compare:with:</Method>
			<Method methodClass="Kernel.NeverSearchPolicy">compare:with:</Method>
			<Method methodClass="Core.SequenceableCollection">identityIndexOf:ifAbsent:</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="2"></StripCycle>
	<CloseProgressDialog></CloseProgressDialog>
	<StripConsoleApplication>
		<!-- Unregistering VM ref #wndProc:message:wParam:lParam:cookie: -->
	</StripConsoleApplication>
	<RemainingGUIDs count="0">
	</RemainingGUIDs>
	<StripCycle id="3">
		<StripClasses reason="unreferenced">
			<RemoveClass>Kernel.ImageRelativeFileLocator</RemoveClass>
			<RemoveClass>Kernel.InstallRelativeFileLocator</RemoveClass>
			<RemoveClass>Kernel.RelativeFileLocator</RemoveClass>
			<RemoveClass>Core.FileLocator</RemoveClass>
			<RemoveClass>Smalltalk.ImageStripperProgress</RemoveClass>
			<RemoveClass>OS.ShlwapiLibrary</RemoveClass>
			<!-- Undeclaring #{OS.Shlwapi} -->
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="Smalltalk.BasicImageStripper">_destroyAndRemoveProgress</Method>
			<Method methodClass="Kernel.BindingReference">isDefined</Method>
			<Method methodClass="Smalltalk.ImageStripper">_closeExternalLibraries</Method>
			<Method methodClass="Smalltalk.ImageStripper">_removeClassGuids</Method>
			<Method methodClass="Kernel.InputState">removeWindowAt:</Method>
			<Method methodClass="Kernel.InputState">wndProc:message:wParam:lParam:cookie:</Method>
			<Method methodClass="OS.UserLibrary">defDlgProc:msg:wParam:lParam:</Method>
			<Method methodClass="OS.UserLibrary">destroyWindow:</Method>
			<Method methodClass="OS.UserLibrary">getSysColorBrush:</Method>
			<Method methodClass="OS.UserLibrary">sendMessage:msg:wParam:lParam:</Method>
			<Method methodClass="OS.UserLibrary">setCursor:</Method>
			<Method methodClass="OS.UserLibrary">setWindowText:lpString:</Method>
			<Method methodClass="Kernel.VMLibrary">unregisterObject:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.ClassDescription">allSubinstances</Method>
			<Method methodClass="Core.False">asUIntPtr</Method>
			<Method methodClass="Kernel.InputState">processDeferredActions</Method>
			<Method methodClass="Kernel.InputState">pumpMessages</Method>
			<Method methodClass="Kernel.InputState">purgeDeadWindows</Method>
			<Method methodClass="Core.Integer">asUIntPtr</Method>
			<Method methodClass="External.INTEGER">asUIntPtr</Method>
			<Method methodClass="Core.Object">asUIntPtr</Method>
			<Method methodClass="Kernel.PostedActionWindow">dispatchMessage:wParam:lParam:</Method>
			<Method methodClass="Core.SessionManager">isConsoleApplication</Method>
			<Method methodClass="Core.SessionManager class">isConsoleApplication</Method>
			<Method methodClass="Core.String">asUIntPtr</Method>
			<Method methodClass="Core.True">asUIntPtr</Method>
			<Method methodClass="External.UIntPtrBytes">asUIntPtr</Method>
			<Method methodClass="OS.UserLibrary">defWindowProc:msg:wParam:lParam:</Method>
			<Method methodClass="Kernel.VMLibrary">crashDump:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="External.Address">intPtrAtOffset:put:</Method>
			<Method methodClass="Core.ByteArray">intPtrAtOffset:put:</Method>
			<Method methodClass="Kernel.InputState">prod</Method>
			<Method methodClass="OS.KernelLibrary">raiseException:dwExceptionFlags:nNumberOfArguments:lpArguments:</Method>
			<Method methodClass="Core.LargeInteger">intPtrAtOffset:put:</Method>
			<Method methodClass="Kernel.ProcessorScheduler">isActiveMain</Method>
			<Method methodClass="Core.SessionManager">onTimer:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Kernel.InputState">enterIdle</Method>
			<Method methodClass="Kernel.InputState">msgWindow</Method>
			<Method methodClass="Kernel.PostedActionWindow">killTimer:</Method>
			<Method methodClass="Core.Process">isMain</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="OS.UserLibrary">killTimer:uIDEvent:</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="3">
		<StripClasses reason="unreferenced">
			<RemoveClass>Core.GUID</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Character class">null</Method>
			<Method methodClass="OS.RPCLibrary">rpcStringFree:</Method>
			<Method methodClass="OS.RPCLibrary">uuidCompare:uuid2:status:</Method>
			<Method methodClass="OS.RPCLibrary">uuidToString:stringUuid:</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="3">
		<StripClasses reason="unreferenced">
			<RemoveClass>OS.RPCLibrary</RemoveClass>
			<!-- Undeclaring #{OS.Rpcrt4} -->
			<RemoveClass>OS.RPCError</RemoveClass>
		</StripClasses>
	</StripCycle>
	<StripCycle id="3"></StripCycle>
	<StripCycle id="4">
		<StripClasses reason="unreferenced">
			<RemoveClass>Kernel.EventMessageSequence</RemoveClass>
			<RemoveClass>Core.MessageSequenceAbstract</RemoveClass>
			<RemoveClass>Kernel.EventsCollection</RemoveClass>
			<RemoveClass>Core.SharedIdentityDictionary</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Dictionary">removeAllKeys:</Method>
			<Method methodClass="Kernel.Namespace class">removeAllKeys:</Method>
			<Method methodClass="Core.SharedLookupTable">removeAllKeys:</Method>
			<Method methodClass="Core.WeakArray">corpsesDo:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Dictionary">removeKey:</Method>
			<Method methodClass="Kernel.Namespace class">removeKey:</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="4"></StripCycle>
	<StripCycle id="5">
		<StripClasses reason="unreferenced">
			<RemoveClass>Core.WeakSet</RemoveClass>
			<RemoveClass>Core.SharedSet</RemoveClass>
		</StripClasses>
		<StripMethods reason="unsent">
			<Method methodClass="Smalltalk.BasicImageStripper">_shrinkEventsOf:</Method>
			<Method methodClass="Core.Behavior">isNonInstantiable</Method>
			<Method methodClass="Core.Behavior">removeSelector:ifAbsent:</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_supersentMethods</Method>
			<Method methodClass="Smalltalk.DeploymentContext">_supersentMethods:</Method>
			<Method methodClass="Core.Dictionary">keys</Method>
			<Method methodClass="Kernel.Namespace class">keys</Method>
			<Method methodClass="Core.SequenceableCollection">keys</Method>
			<Method methodClass="Core.UtfEncodedString">keys</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Behavior">notifyMethodRemoved:</Method>
			<Method methodClass="Core.Dictionary">keysClass</Method>
			<Method methodClass="Core.Dictionary">keysDo:</Method>
			<Method methodClass="Core.IdentityDictionary">keysClass</Method>
			<Method methodClass="Core.LookupTable">keysDo:</Method>
			<Method methodClass="Kernel.MemoryManager">setEvents:</Method>
			<Method methodClass="Kernel.Namespace class">keysDo:</Method>
			<Method methodClass="Kernel.NullEventsCollection">asMinimumRepresentation</Method>
			<Method methodClass="Core.Object">setEvents:</Method>
			<Method methodClass="Core.SequenceableCollection">keysDo:</Method>
			<Method methodClass="Core.SessionManager">setEvents:</Method>
			<Method methodClass="Core.SharedLookupTable">keysDo:</Method>
			<Method methodClass="Smalltalk class">setEvents:</Method>
			<Method methodClass="Core.WeakIdentityDictionary">keysClass</Method>
			<Method methodClass="Core.WeakLookupTable">keysDo:</Method>
		</StripMethods>
		<StripMethods reason="unsent">
			<Method methodClass="Core.Behavior">methodRemoved:</Method>
		</StripMethods>
	</StripCycle>
	<StripCycle id="5"></StripCycle>
	<StripClassRemoval>
		<Method methodClass="Core.Class">uninitializeBeforeRemove</Method>
		<Method methodClass="External.DynamicLinkLibrary class">uninitialize</Method>
		<Method methodClass="External.DynamicLinkLibrary class">uninitializeBeforeRemove</Method>
		<Method methodClass="Kernel.FullBindingReference class">uninitialize</Method>
		<Method methodClass="External.LPVOID class">uninitialize</Method>
		<Method methodClass="Kernel.MethodAnnotations class">uninitialize</Method>
		<Method methodClass="Core.SessionManager class">uninitialize</Method>
		<Method methodClass="Kernel.SingletonSearchPolicy class">uninitialize</Method>
		<Method methodClass="External.Structure class">uninitializeBeforeRemove</Method>
	</StripClassRemoval>
	<RemoveClassMetaInfo></RemoveClassMetaInfo>
	<StripMethods reason="unsent">
		<Method methodClass="Smalltalk.BasicImageStripper">_removeClassMetaInfo</Method>
		<Method methodClass="Smalltalk.BasicImageStripper">_removeRedundantClassesAndResources:</Method>
		<Method methodClass="Core.Behavior">allSuperclasses</Method>
		<Method methodClass="Core.Behavior">includesSelector:</Method>
		<Method methodClass="Kernel.BindingReference">undeclare</Method>
		<Method methodClass="Core.Class">clearGuid</Method>
		<Method methodClass="Core.ClassDescription">allSubclasses</Method>
		<Method methodClass="Kernel.CompiledMethod">isResourceMethod</Method>
		<Method methodClass="Kernel.FullBindingReference">undeclare</Method>
		<Method methodClass="Smalltalk.ImageStripper">_notifyClassesOfCompletedStrip</Method>
		<Method methodClass="Smalltalk.ImageStripper">_shouldRemoveResources</Method>
		<Method methodClass="Kernel.MethodAnnotations">includesSelector:</Method>
		<Method methodClass="External.Structure class">unregister</Method>
	</StripMethods>
	<StripMethods reason="unsent">
		<Method methodClass="Core.Behavior">allSuperclassesDo:</Method>
		<Method methodClass="Core.Class">basicClassPool:</Method>
		<Method methodClass="Core.ClassDescription">instanceVariableString</Method>
		<Method methodClass="Core.ClassDescription">instanceVariableString:</Method>
		<Method methodClass="Core.Collection">difference:</Method>
		<Method methodClass="Smalltalk.ImageStripper">retainInstVarNames</Method>
		<Method methodClass="Smalltalk.ImageStripper">stripClassInfo</Method>
		<Method methodClass="Kernel.Namespace class">basicClassPool:</Method>
	</StripMethods>
	<SentMessages>
		<Selector>-</Selector>
		<Selector>*</Selector>
		<Selector>,</Selector>
		<Selector>/</Selector>
		<Selector>//</Selector>
		<Selector>??</Selector>
		<Selector>\\</Selector>
		<Selector>_clearfp</Selector>
		<Selector>_close:</Selector>
		<Selector>_control87:mask:</Selector>
		<Selector>_deepCopy:</Selector>
		<Selector>_deepCopyElementsInto:trail:</Selector>
		<Selector>_deepenShallowCopy:trail:</Selector>
		<Selector>_descriptionArguments</Selector>
		<Selector>_descriptionFormat</Selector>
		<Selector>_dup2:handle2:</Selector>
		<Selector>_endElement:</Selector>
		<Selector>_endTag</Selector>
		<Selector>_errno</Selector>
		<Selector>_evaluateHandler:in:</Selector>
		<Selector>_fdopen:mode:</Selector>
		<Selector>_filelengthi64:</Selector>
		<Selector>_fileno:</Selector>
		<Selector>_fseeki64:offset:origin:</Selector>
		<Selector>_ftelli64:</Selector>
		<Selector>_get_osfhandle:</Selector>
		<Selector>_ieeeRecord</Selector>
		<Selector>_indexOfAnyInString:startingAt:</Selector>
		<Selector>_isatty:</Selector>
		<Selector>_logElement:attributes:value:</Selector>
		<Selector>_logValue:</Selector>
		<Selector>_makepath_s:bufferSize:drive:dir:fname:ext:</Selector>
		<Selector>_open_osfhandle:flags:</Selector>
		<Selector>_propagate</Selector>
		<Selector>_propagateFrom:</Selector>
		<Selector>_setmode:mode:</Selector>
		<Selector>_splitpath_s:drive:driveLen:dir:dirLen:fname:fnameLen:ext:extLen:</Selector>
		<Selector>_startElement:attributes:</Selector>
		<Selector>_wfopen_s:filename:mode:</Selector>
		<Selector>|</Selector>
		<Selector>~~</Selector>
		<Selector>~=</Selector>
		<Selector>+</Selector>
		<Selector>&lt;</Selector>
		<Selector>&lt;&lt;</Selector>
		<Selector>&lt;=</Selector>
		<Selector>&lt;==&gt;</Selector>
		<Selector>&lt;=&gt;</Selector>
		<Selector>=</Selector>
		<Selector>==</Selector>
		<Selector>&gt;</Selector>
		<Selector>-&gt;</Selector>
		<Selector>&gt;=</Selector>
		<Selector>aboutToForkUI</Selector>
		<Selector>aboutToIdle</Selector>
		<Selector>abs</Selector>
		<Selector>absPrintExactlyOn:base:</Selector>
		<Selector>absPrintExactlyOn:base:decimalPlaces:showTrailingFractionalZeros:</Selector>
		<Selector>absPrintOn:base:digitCount:decimalExponents:</Selector>
		<Selector>accessFlags</Selector>
		<Selector>actionFor:</Selector>
		<Selector>activePriority</Selector>
		<Selector>activeProcess</Selector>
		<Selector>add:</Selector>
		<Selector>addAll:</Selector>
		<Selector>addAllLast:</Selector>
		<Selector>addAnsweringIndex:</Selector>
		<Selector>addBinding:</Selector>
		<Selector>addLast:</Selector>
		<Selector>addNewElement:</Selector>
		<Selector>addressFromInteger:</Selector>
		<Selector>addToFraction:</Selector>
		<Selector>addToScaledDecimal:</Selector>
		<Selector>addUnique:</Selector>
		<Selector>administerLastRites</Selector>
		<Selector>advancePosition</Selector>
		<Selector>allBindingsDo:</Selector>
		<Selector>allBindingsDo:visited:</Selector>
		<Selector>allClasses</Selector>
		<Selector>allClassesDo:</Selector>
		<Selector>allInstances</Selector>
		<Selector>allMask:</Selector>
		<Selector>allocConsole</Selector>
		<Selector>allowDuplicate</Selector>
		<Selector>allReferences:</Selector>
		<Selector>allRoots</Selector>
		<Selector>allSatisfy:</Selector>
		<Selector>allSubclassesBreadthFirstDo:</Selector>
		<Selector>allSubclassesDo:</Selector>
		<Selector>allSubclassesPreOrderDo:</Selector>
		<Selector>alreadyVisited:</Selector>
		<Selector>annotations</Selector>
		<Selector>ansiValue</Selector>
		<Selector>ansiValue:</Selector>
		<Selector>anyBitSetFrom:to:</Selector>
		<Selector>anyMask:</Selector>
		<Selector>anySatisfy:</Selector>
		<Selector>appendToStream:</Selector>
		<Selector>argAt:</Selector>
		<Selector>argc</Selector>
		<Selector>argsLen</Selector>
		<Selector>argsOffset</Selector>
		<Selector>argument:</Selector>
		<Selector>argumentCount</Selector>
		<Selector>argumentIndexFromOffset:</Selector>
		<Selector>arguments</Selector>
		<Selector>argumentsDo:</Selector>
		<Selector>argumentTypes</Selector>
		<Selector>argv</Selector>
		<Selector>asAnsiString</Selector>
		<Selector>asApproximateFraction</Selector>
		<Selector>asByteArray</Selector>
		<Selector>asciiValue:</Selector>
		<Selector>asExternalAddress</Selector>
		<Selector>asExternalHandle</Selector>
		<Selector>asFloat</Selector>
		<Selector>asFraction</Selector>
		<Selector>asInteger</Selector>
		<Selector>asLowercase</Selector>
		<Selector>asParameter</Selector>
		<Selector>asScaledDecimal:</Selector>
		<Selector>asSignedInteger</Selector>
		<Selector>associationAt:ifAbsent:</Selector>
		<Selector>associationClass</Selector>
		<Selector>associationsDo:</Selector>
		<Selector>associationsDo:separatedBy:</Selector>
		<Selector>asString</Selector>
		<Selector>asSymbol</Selector>
		<Selector>asTrueFraction</Selector>
		<Selector>asUnsignedInteger</Selector>
		<Selector>asUtf16String</Selector>
		<Selector>asUtf16StringCopy</Selector>
		<Selector>asUtf8String</Selector>
		<Selector>asUtf8StringCopy</Selector>
		<Selector>at:</Selector>
		<Selector>at:ifAbsent:</Selector>
		<Selector>at:put:</Selector>
		<Selector>atAddress:</Selector>
		<Selector>atAllPut:</Selector>
		<Selector>atEnd</Selector>
		<Selector>atoi:</Selector>
		<Selector>attachFd:stream:</Selector>
		<Selector>baseEnvironment</Selector>
		<Selector>basicAddAll:</Selector>
		<Selector>basicAddBinding:</Selector>
		<Selector>basicAllRoots</Selector>
		<Selector>basicAt:</Selector>
		<Selector>basicAt:put:</Selector>
		<Selector>basicBeginsWith:</Selector>
		<Selector>basicBP</Selector>
		<Selector>basicBP:</Selector>
		<Selector>basicByteSize</Selector>
		<Selector>basicClass</Selector>
		<Selector>basicContentsSpecies</Selector>
		<Selector>basicEncoding</Selector>
		<Selector>basicEnvironment</Selector>
		<Selector>basicFree</Selector>
		<Selector>basicIdentityHash</Selector>
		<Selector>basicIdentityIndexOf:from:to:</Selector>
		<Selector>basicIndexOfSubCollection:startingAt:</Selector>
		<Selector>basicIP:</Selector>
		<Selector>basicLcid</Selector>
		<Selector>basicNew</Selector>
		<Selector>basicNew:</Selector>
		<Selector>basicNewFromFraction:scale:</Selector>
		<Selector>basicNext</Selector>
		<Selector>basicNext:</Selector>
		<Selector>basicNext:into:startingAt:</Selector>
		<Selector>basicNext:putAll:startingAt:</Selector>
		<Selector>basicNextAvailable</Selector>
		<Selector>basicNextAvailable:</Selector>
		<Selector>basicNextIdentityIndexOf:from:to:</Selector>
		<Selector>basicNextPut:</Selector>
		<Selector>basicOpen:</Selector>
		<Selector>basicPeek</Selector>
		<Selector>basicPrimaryStartup</Selector>
		<Selector>basicPrint:</Selector>
		<Selector>basicPrintOn:</Selector>
		<Selector>basicPrintString</Selector>
		<Selector>basicRemoveBinding:</Selector>
		<Selector>basicReplaceElementsOf:from:to:startingAt:</Selector>
		<Selector>basicResize:</Selector>
		<Selector>basicSecondaryStartup</Selector>
		<Selector>basicSender</Selector>
		<Selector>basicSender:</Selector>
		<Selector>basicShutdown</Selector>
		<Selector>basicSize</Selector>
		<Selector>basicSP:</Selector>
		<Selector>basicSuspendedFrame</Selector>
		<Selector>basicTertiaryStartup</Selector>
		<Selector>basicUIntPtrAtOffset:</Selector>
		<Selector>basicUIntPtrAtOffset:put:</Selector>
		<Selector>basicUnqualifiedName</Selector>
		<Selector>basicUpTo:</Selector>
		<Selector>basicValues</Selector>
		<Selector>basicYourAddress</Selector>
		<Selector>become:</Selector>
		<Selector>becomeA:</Selector>
		<Selector>beFinalizable</Selector>
		<Selector>beginsWith:</Selector>
		<Selector>beginUpdateResource:bDeleteExistingResources:</Selector>
		<Selector>beNullPointer</Selector>
		<Selector>beStrong</Selector>
		<Selector>between:and:</Selector>
		<Selector>beUnfinalizable</Selector>
		<Selector>beWeak</Selector>
		<Selector>bind:</Selector>
		<Selector>binding</Selector>
		<Selector>bindingFor:</Selector>
		<Selector>bindingOrNil</Selector>
		<Selector>bindingsChanged</Selector>
		<Selector>bindingScope</Selector>
		<Selector>bindingsDo:</Selector>
		<Selector>bitAnd:</Selector>
		<Selector>bitInvert</Selector>
		<Selector>bitOr:</Selector>
		<Selector>bitRepresentation</Selector>
		<Selector>bitShift:</Selector>
		<Selector>bitXor:</Selector>
		<Selector>block</Selector>
		<Selector>boolean</Selector>
		<Selector>bp</Selector>
		<Selector>bp:</Selector>
		<Selector>bufferClass</Selector>
		<Selector>bufferPrototype</Selector>
		<Selector>byteAt:</Selector>
		<Selector>byteAtOffset:</Selector>
		<Selector>byteAtOffset:put:</Selector>
		<Selector>byteCharacterSet</Selector>
		<Selector>byteCodes</Selector>
		<Selector>bytes</Selector>
		<Selector>byteSize</Selector>
		<Selector>callback:evaluate:</Selector>
		<Selector>callback:perform:cookie:</Selector>
		<Selector>callback:perform:with:cookie:</Selector>
		<Selector>callback:perform:with:with:cookie:</Selector>
		<Selector>callback:perform:with:with:with:cookie:</Selector>
		<Selector>callback:perform:withArguments:cookie:</Selector>
		<Selector>callback:return:</Selector>
		<Selector>callbackDepth</Selector>
		<Selector>callingConvention</Selector>
		<Selector>callstackDo:depth:</Selector>
		<Selector>cannotReturn:</Selector>
		<Selector>canUnderstand:</Selector>
		<Selector>cause</Selector>
		<Selector>causeDescription</Selector>
		<Selector>ceiling</Selector>
		<Selector>charLower:</Selector>
		<Selector>class</Selector>
		<Selector>classForEncoding:</Selector>
		<Selector>classify:</Selector>
		<Selector>classPool</Selector>
		<Selector>classRemoved:</Selector>
		<Selector>clear</Selector>
		<Selector>clear:</Selector>
		<Selector>clearCachedBindings</Selector>
		<Selector>clearCachedClasses</Selector>
		<Selector>clearProcAddresses</Selector>
		<Selector>clearSessionState</Selector>
		<Selector>close</Selector>
		<Selector>closeAllDefaults</Selector>
		<Selector>closeConsole</Selector>
		<Selector>closeConsoleStreams</Selector>
		<Selector>closeDefault</Selector>
		<Selector>closeHandle:</Selector>
		<Selector>code</Selector>
		<Selector>codePage</Selector>
		<Selector>codePoint</Selector>
		<Selector>codePoint:</Selector>
		<Selector>codePoint:ifInvalid:</Selector>
		<Selector>codePointsDo:</Selector>
		<Selector>codeUnit</Selector>
		<Selector>coerce:</Selector>
		<Selector>coerceString:</Selector>
		<Selector>collect:</Selector>
		<Selector>collectGarbage</Selector>
		<Selector>compact</Selector>
		<Selector>compare:ignoreCase:</Selector>
		<Selector>comparisonSize</Selector>
		<Selector>compiledMethodAt:ifAbsent:</Selector>
		<Selector>comShutdown</Selector>
		<Selector>conformsToProtocol:</Selector>
		<Selector>consoleStartup</Selector>
		<Selector>consoleStreamClass</Selector>
		<Selector>constWriteSignal</Selector>
		<Selector>contents</Selector>
		<Selector>contentsSpecies</Selector>
		<Selector>convention</Selector>
		<Selector>copy</Selector>
		<Selector>copy:from:to:</Selector>
		<Selector>copyBytes:</Selector>
		<Selector>copyElementsInto:</Selector>
		<Selector>copyEmpty</Selector>
		<Selector>copyEmpty:</Selector>
		<Selector>copyFrom:</Selector>
		<Selector>copyFrom:to:</Selector>
		<Selector>copyingClass</Selector>
		<Selector>copyLike</Selector>
		<Selector>copyLikeOfSize:</Selector>
		<Selector>copyReplacing:withObject:</Selector>
		<Selector>copySize</Selector>
		<Selector>copyWith:</Selector>
		<Selector>copyWithoutIndex:</Selector>
		<Selector>countElements</Selector>
		<Selector>cr</Selector>
		<Selector>createAndRegisterInputSemaphore</Selector>
		<Selector>createAndRegisterWakeupEvent</Selector>
		<Selector>createEvent:bManualReset:bInitialState:lpName:</Selector>
		<Selector>createFile:dwDesiredAccess:dwSharedMode:lpSecurityAttributes:dwCreationDistribution:dwFlagsAndAttributes:hTemplateFile:</Selector>
		<Selector>createInputState</Selector>
		<Selector>createMutex:bInitialOwner:lpName:</Selector>
		<Selector>createPostedActionWindow</Selector>
		<Selector>createSentinel</Selector>
		<Selector>critical:</Selector>
		<Selector>crtab:</Selector>
		<Selector>crtHandle</Selector>
		<Selector>cull:</Selector>
		<Selector>current</Selector>
		<Selector>customEnvironment</Selector>
		<Selector>decimalDigitLength</Selector>
		<Selector>decimalPlaces</Selector>
		<Selector>decimalPlaces:</Selector>
		<Selector>decimalSeparator</Selector>
		<Selector>decimalSeparator:</Selector>
		<Selector>decodeAt:</Selector>
		<Selector>decodeFrom:upTo:</Selector>
		<Selector>decodeNextFrom:</Selector>
		<Selector>decodePrimitiveFailureCode:</Selector>
		<Selector>default</Selector>
		<Selector>default:extension:</Selector>
		<Selector>defaultAction</Selector>
		<Selector>defaultAction:</Selector>
		<Selector>defaultCapacity</Selector>
		<Selector>defaultLimit</Selector>
		<Selector>defaultLimitBlock</Selector>
		<Selector>defaultResumption</Selector>
		<Selector>defaultSortAlgorithm</Selector>
		<Selector>deferredActions</Selector>
		<Selector>defineTemplate</Selector>
		<Selector>denominator</Selector>
		<Selector>dequeueBereavementInto:</Selector>
		<Selector>dequeueForFinalization</Selector>
		<Selector>description</Selector>
		<Selector>description:</Selector>
		<Selector>descriptor</Selector>
		<Selector>descriptor:</Selector>
		<Selector>descriptor:literals:</Selector>
		<Selector>descriptorClass</Selector>
		<Selector>descriptorLiteral</Selector>
		<Selector>digitLength</Selector>
		<Selector>digitValue</Selector>
		<Selector>digitValue:</Selector>
		<Selector>directFunerals</Selector>
		<Selector>dispatchMessage:</Selector>
		<Selector>display:</Selector>
		<Selector>displayFloat:on:</Selector>
		<Selector>displayInteger:on:</Selector>
		<Selector>displayName</Selector>
		<Selector>displayOn:</Selector>
		<Selector>displayString</Selector>
		<Selector>displayStringLimitedTo:locale:</Selector>
		<Selector>divideByZero</Selector>
		<Selector>divideIntoFraction:</Selector>
		<Selector>divideIntoScaledDecimal:</Selector>
		<Selector>dividend</Selector>
		<Selector>dividend:</Selector>
		<Selector>do:</Selector>
		<Selector>do:separatedBy:</Selector>
		<Selector>doesNotUnderstand:</Selector>
		<Selector>dump:path:stackDepth:walkbackDepth:</Selector>
		<Selector>duplicateHandle:hSourceHandle:hTargetProcessHandle:lpTargetHandle:dwDesiredAccess:bInheritHandle:dwOptions:</Selector>
		<Selector>dwMajorVersion:</Selector>
		<Selector>dwMinorVersion:</Selector>
		<Selector>dwordAtOffset:</Selector>
		<Selector>dwordAtOffset:put:</Selector>
		<Selector>dwSize:</Selector>
		<Selector>elementsExpired:</Selector>
		<Selector>elementsExpired:of:</Selector>
		<Selector>elementSize</Selector>
		<Selector>embeddedStartup</Selector>
		<Selector>empty</Selector>
		<Selector>enableAsyncEvents:</Selector>
		<Selector>enableInterrupts</Selector>
		<Selector>encodedAt:put:</Selector>
		<Selector>encodedSizeAt:</Selector>
		<Selector>encodedSizeOf:</Selector>
		<Selector>encodeOn:next:putAll:startingAt:</Selector>
		<Selector>encodeOn:put:</Selector>
		<Selector>encoding</Selector>
		<Selector>encodingClasses</Selector>
		<Selector>encodingName:</Selector>
		<Selector>encodingType</Selector>
		<Selector>endOfStreamSignal</Selector>
		<Selector>endUpdateResource:fDiscard:</Selector>
		<Selector>englishDisplayName</Selector>
		<Selector>ensure:</Selector>
		<Selector>ensureDefined</Selector>
		<Selector>ensureIdlerRunning</Selector>
		<Selector>ensureMainRunning</Selector>
		<Selector>ensureProcessesRunning</Selector>
		<Selector>environment</Selector>
		<Selector>environment:</Selector>
		<Selector>envTempCount</Selector>
		<Selector>equalsIgnoreCase:</Selector>
		<Selector>equalToFloat:</Selector>
		<Selector>equalToFraction:</Selector>
		<Selector>equalToScaledDecimal:</Selector>
		<Selector>errno</Selector>
		<Selector>error:</Selector>
		<Selector>errorEndOfStream</Selector>
		<Selector>errorIntraCharacterIndex:</Selector>
		<Selector>errorInvalidCodePoint:</Selector>
		<Selector>errorKeyNotFound:</Selector>
		<Selector>errorNotFound:</Selector>
		<Selector>errorNotKeyed</Selector>
		<Selector>errorNotPositionable</Selector>
		<Selector>errorNotReadable</Selector>
		<Selector>errorNotWriteable</Selector>
		<Selector>errorOutOfSync</Selector>
		<Selector>errorSubscriptBounds:</Selector>
		<Selector>evaluateNextAction</Selector>
		<Selector>evaluatePendingActions</Selector>
		<Selector>even</Selector>
		<Selector>events</Selector>
		<Selector>exceptionAddress</Selector>
		<Selector>ExceptionAddress</Selector>
		<Selector>exceptionClass</Selector>
		<Selector>ExceptionCode</Selector>
		<Selector>exceptionCode</Selector>
		<Selector>exceptionEnvironment</Selector>
		<Selector>exceptionEnvironment:</Selector>
		<Selector>exceptionFlags</Selector>
		<Selector>exceptionFlags:do:</Selector>
		<Selector>exceptionMask:</Selector>
		<Selector>exceptionName</Selector>
		<Selector>exceptionRecord:</Selector>
		<Selector>excessSignals</Selector>
		<Selector>excessSignals:</Selector>
		<Selector>exit:</Selector>
		<Selector>exp</Selector>
		<Selector>exp10</Selector>
		<Selector>expandMacrosIn:</Selector>
		<Selector>expandMacrosWith:</Selector>
		<Selector>expandMacrosWith:with:</Selector>
		<Selector>expandMacrosWithArguments:</Selector>
		<Selector>expandMacrosWithArguments:locale:</Selector>
		<Selector>expandMacrosWithArguments:on:</Selector>
		<Selector>exponent</Selector>
		<Selector>extraIndex</Selector>
		<Selector>extraInstanceSpec</Selector>
		<Selector>facility</Selector>
		<Selector>facilityCode</Selector>
		<Selector>fail</Selector>
		<Selector>fclose:</Selector>
		<Selector>feof:</Selector>
		<Selector>fflush:</Selector>
		<Selector>fgetc:</Selector>
		<Selector>fgets:n:stream:</Selector>
		<Selector>fgetwc:</Selector>
		<Selector>fgetws:n:stream:</Selector>
		<Selector>fileName</Selector>
		<Selector>fileno</Selector>
		<Selector>fileSize</Selector>
		<Selector>fileStreamClass</Selector>
		<Selector>finalize</Selector>
		<Selector>finalizerMain</Selector>
		<Selector>finalizerPriority</Selector>
		<Selector>findElementOrNil:</Selector>
		<Selector>findInterned:</Selector>
		<Selector>findKeyOrNil:</Selector>
		<Selector>findString:startingAt:</Selector>
		<Selector>first</Selector>
		<Selector>firstIndex:lastIndex:</Selector>
		<Selector>fixCollisionsFrom:</Selector>
		<Selector>fixCollisionsIgnoringCorpsesFrom:</Selector>
		<Selector>flags</Selector>
		<Selector>flags:</Selector>
		<Selector>flagsFromMode:</Selector>
		<Selector>floor</Selector>
		<Selector>floorLog:</Selector>
		<Selector>flush</Selector>
		<Selector>flushBindings</Selector>
		<Selector>flushFileBuffers:</Selector>
		<Selector>forContext:priority:maxStack:</Selector>
		<Selector>forkAt:</Selector>
		<Selector>forkAt:maxStack:</Selector>
		<Selector>forkFinalizer</Selector>
		<Selector>forkIdler</Selector>
		<Selector>forkMain</Selector>
		<Selector>forkUndertaker</Selector>
		<Selector>format</Selector>
		<Selector>formatMessage:lpSource:dwMessageId:dwLanguageId:lpBuffer:nSize:arguments:</Selector>
		<Selector>formatMessage:source:flags:withArguments:</Selector>
		<Selector>formatWithArguments:</Selector>
		<Selector>forMutualExclusion</Selector>
		<Selector>forwardTo:</Selector>
		<Selector>forwardTo:with:</Selector>
		<Selector>forwardTo:withArguments:</Selector>
		<Selector>fpClass</Selector>
		<Selector>fpControl</Selector>
		<Selector>fputc:stream:</Selector>
		<Selector>fputs:stream:</Selector>
		<Selector>fputwc:stream:</Selector>
		<Selector>fputws:stream:</Selector>
		<Selector>fractionPart</Selector>
		<Selector>frameAtAddress:</Selector>
		<Selector>frameAtIndex:</Selector>
		<Selector>frameClass</Selector>
		<Selector>frameClassFor:at:</Selector>
		<Selector>frameSize</Selector>
		<Selector>fread_s:bufferSize:elementSize:count:stream:</Selector>
		<Selector>free</Selector>
		<Selector>freeConsole</Selector>
		<Selector>freeLibrary:</Selector>
		<Selector>from:keysAndValuesDo:</Selector>
		<Selector>from:to:by:</Selector>
		<Selector>from:to:keysAndValuesDo:</Selector>
		<Selector>from:to:put:</Selector>
		<Selector>fromAddress:</Selector>
		<Selector>fromAddress:length:</Selector>
		<Selector>fromByteArray:</Selector>
		<Selector>fromByteArray:length:startingAt:</Selector>
		<Selector>fromBytes:</Selector>
		<Selector>fromHandle:</Selector>
		<Selector>fromHRESULT:</Selector>
		<Selector>fromInteger:</Selector>
		<Selector>fromPrimitiveFailureCode:</Selector>
		<Selector>fromSmallInteger:</Selector>
		<Selector>fromUnsignedInteger:</Selector>
		<Selector>fullBindingFor:</Selector>
		<Selector>fullBindingFor:environment:</Selector>
		<Selector>fullName</Selector>
		<Selector>fullNameFor:</Selector>
		<Selector>fullPathOf:</Selector>
		<Selector>fwrite:size:count:stream:</Selector>
		<Selector>gcd:</Selector>
		<Selector>gcInterval</Selector>
		<Selector>generality</Selector>
		<Selector>genericInterrupt</Selector>
		<Selector>getCurrentProcess</Selector>
		<Selector>getDesktopWindow</Selector>
		<Selector>getEvents</Selector>
		<Selector>getFileSizeEx:lpFileSize:</Selector>
		<Selector>getFileType:</Selector>
		<Selector>getFullPathName:nBufferLength:lpBuffer:lpFilePart:</Selector>
		<Selector>getIntegerInfo:</Selector>
		<Selector>getLastError</Selector>
		<Selector>getLocaleInfo:lCType:lpLCData:cchData:</Selector>
		<Selector>getLocaleInfoInteger:</Selector>
		<Selector>getLocaleInfoString:</Selector>
		<Selector>getMessage:hWnd:wMsgFilterMin:wMsgFilterMax:</Selector>
		<Selector>getModuleFileName:lpFilename:nSize:</Selector>
		<Selector>getModuleHandle:</Selector>
		<Selector>getNumberFormat</Selector>
		<Selector>getNumberFormat:dwFlags:lpValue:lpFormat:lpNumberStr:cchNumber:</Selector>
		<Selector>getParent:</Selector>
		<Selector>getProcAddress:ifAbsent:</Selector>
		<Selector>getProcAddress:lpProcName:</Selector>
		<Selector>getProcessHeap</Selector>
		<Selector>getQueueStatus:</Selector>
		<Selector>getSpecialBehavior</Selector>
		<Selector>getString:</Selector>
		<Selector>getStringInfo:</Selector>
		<Selector>getThreadUILanguage</Selector>
		<Selector>grabContents</Selector>
		<Selector>greaterThanFraction:</Selector>
		<Selector>greaterThanScaledDecimal:</Selector>
		<Selector>Grouping</Selector>
		<Selector>Grouping:</Selector>
		<Selector>grouping:</Selector>
		<Selector>groupSeparator</Selector>
		<Selector>groupSeparator:</Selector>
		<Selector>grow</Selector>
		<Selector>growSize</Selector>
		<Selector>handle</Selector>
		<Selector>handle:</Selector>
		<Selector>handleFromInteger:</Selector>
		<Selector>handles:</Selector>
		<Selector>hasActiveServers</Selector>
		<Selector>hash</Selector>
		<Selector>hashBytes:count:</Selector>
		<Selector>hashIgnoreCase</Selector>
		<Selector>hashMultiply</Selector>
		<Selector>hasLeadingZero</Selector>
		<Selector>hasLeadingZero:</Selector>
		<Selector>hasMessageText</Selector>
		<Selector>hasVisibleWindows</Selector>
		<Selector>haveWeakKeys</Selector>
		<Selector>heapFree:dwFlags:lpMem:</Selector>
		<Selector>heapsort:from:to:</Selector>
		<Selector>hex</Selector>
		<Selector>hierarchyBindingFor:</Selector>
		<Selector>highBit</Selector>
		<Selector>highIOPriority</Selector>
		<Selector>hresult</Selector>
		<Selector>hresultError:</Selector>
		<Selector>hwnd</Selector>
		<Selector>id</Selector>
		<Selector>identifier</Selector>
		<Selector>identityHash</Selector>
		<Selector>identityIncludes:</Selector>
		<Selector>identityIndexOf:</Selector>
		<Selector>idle</Selector>
		<Selector>idleLoop</Selector>
		<Selector>idlePanic</Selector>
		<Selector>idler</Selector>
		<Selector>ifCurtailed:</Selector>
		<Selector>ifDefined:</Selector>
		<Selector>imageExtension</Selector>
		<Selector>imageFileName</Selector>
		<Selector>imagePath</Selector>
		<Selector>imagePath:</Selector>
		<Selector>imports</Selector>
		<Selector>inaccessibleAddress</Selector>
		<Selector>includes:</Selector>
		<Selector>includesEnvironment:</Selector>
		<Selector>includesNamespace:</Selector>
		<Selector>index</Selector>
		<Selector>indexOf:</Selector>
		<Selector>indexOf:ifAbsent:</Selector>
		<Selector>indexOfAnyOf:startingAt:</Selector>
		<Selector>indexOfLast:</Selector>
		<Selector>indexOfSP:</Selector>
		<Selector>infinity</Selector>
		<Selector>information</Selector>
		<Selector>inheritsFrom:</Selector>
		<Selector>initialIP</Selector>
		<Selector>initialize</Selector>
		<Selector>initialize:</Selector>
		<Selector>initializeAtAddress:</Selector>
		<Selector>initializeFrom:</Selector>
		<Selector>initializePointer</Selector>
		<Selector>initializeSubclasses</Selector>
		<Selector>inject:into:</Selector>
		<Selector>inputQueueMask</Selector>
		<Selector>inputSemaphore</Selector>
		<Selector>inputState</Selector>
		<Selector>inputStateClass</Selector>
		<Selector>insertionSort:from:to:</Selector>
		<Selector>instanceClass</Selector>
		<Selector>instSize</Selector>
		<Selector>instVarAt:</Selector>
		<Selector>instVarAt:put:</Selector>
		<Selector>intern:</Selector>
		<Selector>intern:cookie:</Selector>
		<Selector>internCharacter:</Selector>
		<Selector>intPtrAtOffset:</Selector>
		<Selector>invalidArgErrorClass</Selector>
		<Selector>invalidArgument:got:expected:</Selector>
		<Selector>invalidCall:fromFrame:</Selector>
		<Selector>invariant</Selector>
		<Selector>iret:list:</Selector>
		<Selector>isActive</Selector>
		<Selector>isAlive</Selector>
		<Selector>isAlive:</Selector>
		<Selector>isAscii</Selector>
		<Selector>isBitSet:</Selector>
		<Selector>isBytes</Selector>
		<Selector>isCharacter</Selector>
		<Selector>isClassVariable</Selector>
		<Selector>isClean</Selector>
		<Selector>isDead</Selector>
		<Selector>isDebuggee</Selector>
		<Selector>isDevice</Selector>
		<Selector>isDigit</Selector>
		<Selector>isDivide</Selector>
		<Selector>isEmbedded</Selector>
		<Selector>isEmpty</Selector>
		<Selector>isEnglishLetter</Selector>
		<Selector>isFinite</Selector>
		<Selector>isGraph</Selector>
		<Selector>isImmediate</Selector>
		<Selector>isImmutable</Selector>
		<Selector>isImmutable:</Selector>
		<Selector>isInCallback</Selector>
		<Selector>isIndirection</Selector>
		<Selector>isInputAvailable</Selector>
		<Selector>isInputReady:</Selector>
		<Selector>isInteger</Selector>
		<Selector>isKindOf:</Selector>
		<Selector>isLeadCodeUnit:</Selector>
		<Selector>isLiteral</Selector>
		<Selector>isLiteral:</Selector>
		<Selector>isLiteralSymbol:</Selector>
		<Selector>isMeta</Selector>
		<Selector>isNaN</Selector>
		<Selector>isNil</Selector>
		<Selector>isNtStatus</Selector>
		<Selector>isNull</Selector>
		<Selector>isOpen</Selector>
		<Selector>isPacked</Selector>
		<Selector>isPointers</Selector>
		<Selector>isPointerToStruct:</Selector>
		<Selector>isPowerOfTwo</Selector>
		<Selector>isPrivate</Selector>
		<Selector>isQualifiedName:</Selector>
		<Selector>isReadable</Selector>
		<Selector>isReading</Selector>
		<Selector>isReady</Selector>
		<Selector>isRelative</Selector>
		<Selector>isResumable</Selector>
		<Selector>isSelfEvaluating</Selector>
		<Selector>isSelfEvaluating:</Selector>
		<Selector>isSeparator</Selector>
		<Selector>isString</Selector>
		<Selector>isTextUnicode:iSize:lpiResult:</Selector>
		<Selector>isUnbound</Selector>
		<Selector>isUserBreakRequested</Selector>
		<Selector>isUserResumable</Selector>
		<Selector>isUtf8</Selector>
		<Selector>isUtf8Surrogate</Selector>
		<Selector>isValid</Selector>
		<Selector>isValidCodePoint:</Selector>
		<Selector>isVirtualFunction</Selector>
		<Selector>isVowel</Selector>
		<Selector>isWindow:</Selector>
		<Selector>isWindows8OrGreater</Selector>
		<Selector>isWindowsVersionOrGreater:wMinorVersion:wServicePackMajor:</Selector>
		<Selector>isWindowVisible:</Selector>
		<Selector>isWriteable</Selector>
		<Selector>isZero</Selector>
		<Selector>isZeroDivide</Selector>
		<Selector>join:</Selector>
		<Selector>keepAlive</Selector>
		<Selector>kernelHandle</Selector>
		<Selector>key</Selector>
		<Selector>key:value:</Selector>
		<Selector>keysAndValuesDo:</Selector>
		<Selector>keywords</Selector>
		<Selector>kill</Selector>
		<Selector>killInterrupt</Selector>
		<Selector>languageId</Selector>
		<Selector>last</Selector>
		<Selector>lastPosition</Selector>
		<Selector>lcid</Selector>
		<Selector>lcid:</Selector>
		<Selector>lcid:withOverrides:</Selector>
		<Selector>lcMapString:dwMapFlags:lpScrStr:cchSrc:lpDestStr:cchDest:</Selector>
		<Selector>LeadingZero</Selector>
		<Selector>LeadingZero:</Selector>
		<Selector>libraryClass:</Selector>
		<Selector>lineDelimiter</Selector>
		<Selector>lines</Selector>
		<Selector>literalArray:do:</Selector>
		<Selector>literalCount</Selector>
		<Selector>literalReferencesDo:</Selector>
		<Selector>literals</Selector>
		<Selector>literals:</Selector>
		<Selector>ln</Selector>
		<Selector>load:flags:</Selector>
		<Selector>loadFlags</Selector>
		<Selector>loadLibraryEx:hFile:dwFlags:</Selector>
		<Selector>localBindingFor:</Selector>
		<Selector>localCount</Selector>
		<Selector>locale</Selector>
		<Selector>locale:</Selector>
		<Selector>localeNameToLCID:dwFlags:</Selector>
		<Selector>localizedDisplayName</Selector>
		<Selector>localScope</Selector>
		<Selector>log:</Selector>
		<Selector>logError:</Selector>
		<Selector>lookup:</Selector>
		<Selector>lookupMethod:</Selector>
		<Selector>lookupWindow:</Selector>
		<Selector>loopWhile:</Selector>
		<Selector>lowBit</Selector>
		<Selector>lowIOPriority</Selector>
		<Selector>lpDecimalSep</Selector>
		<Selector>lpDecimalSep:</Selector>
		<Selector>lpThousandSep</Selector>
		<Selector>lpThousandSep:</Selector>
		<Selector>main</Selector>
		<Selector>main:</Selector>
		<Selector>mainLoop</Selector>
		<Selector>mainLoopStarted</Selector>
		<Selector>makeResumable</Selector>
		<Selector>makeRoomAtEndFor:</Selector>
		<Selector>mapString:flags:</Selector>
		<Selector>mapUppercaseFlags</Selector>
		<Selector>markAndTry</Selector>
		<Selector>maskSet:</Selector>
		<Selector>max:</Selector>
		<Selector>maxEncoding</Selector>
		<Selector>maxPrint</Selector>
		<Selector>memcmp:buf2:count:</Selector>
		<Selector>message</Selector>
		<Selector>messageText</Selector>
		<Selector>messageText:</Selector>
		<Selector>method</Selector>
		<Selector>method:</Selector>
		<Selector>methodClass</Selector>
		<Selector>methodClass:environment:identifier:</Selector>
		<Selector>methodsDo:</Selector>
		<Selector>millisecondClock</Selector>
		<Selector>min:</Selector>
		<Selector>minGCInterval</Selector>
		<Selector>moduleFileName</Selector>
		<Selector>moduleFileName:</Selector>
		<Selector>moveFrom:to:</Selector>
		<Selector>moveToEnd</Selector>
		<Selector>msgWaitForMultipleObjectsEx:pHandles:dwMilliseconds:dwWakeMask:dwFlags:</Selector>
		<Selector>multiplyByFraction:</Selector>
		<Selector>multiplyByScaledDecimal:</Selector>
		<Selector>mustBeBoolean</Selector>
		<Selector>mutex:</Selector>
		<Selector>name</Selector>
		<Selector>name:</Selector>
		<Selector>named:</Selector>
		<Selector>named:withOverrides:</Selector>
		<Selector>nameOf:type:</Selector>
		<Selector>nameOfConvention:</Selector>
		<Selector>namespace:</Selector>
		<Selector>nan</Selector>
		<Selector>needsFree</Selector>
		<Selector>negated</Selector>
		<Selector>negative</Selector>
		<Selector>negativeInfinity</Selector>
		<Selector>negativeNumberMode</Selector>
		<Selector>negativeNumberMode:</Selector>
		<Selector>NegativeOrder</Selector>
		<Selector>NegativeOrder:</Selector>
		<Selector>new</Selector>
		<Selector>new:</Selector>
		<Selector>new:max:</Selector>
		<Selector>new:withAll:</Selector>
		<Selector>newAssociation:value:</Selector>
		<Selector>newBindingContextForIdentifier:environment:</Selector>
		<Selector>newBuffer</Selector>
		<Selector>newCode:</Selector>
		<Selector>newException</Selector>
		<Selector>newFixed:</Selector>
		<Selector>newForEncoding:</Selector>
		<Selector>newFromNumber:scale:</Selector>
		<Selector>newFromOld:</Selector>
		<Selector>newFromStack:</Selector>
		<Selector>newPointer</Selector>
		<Selector>newProcess:</Selector>
		<Selector>newSelection</Selector>
		<Selector>newWithWeakValues:</Selector>
		<Selector>next</Selector>
		<Selector>next:put:</Selector>
		<Selector>next:putAll:startingAt:</Selector>
		<Selector>nextAvailable</Selector>
		<Selector>nextIdentityIndexOf:from:to:</Selector>
		<Selector>nextIndexOf:from:to:</Selector>
		<Selector>nextLine</Selector>
		<Selector>nextLink</Selector>
		<Selector>nextLink:</Selector>
		<Selector>nextNoWait</Selector>
		<Selector>nextPut:</Selector>
		<Selector>nextPutAll:</Selector>
		<Selector>nilCorpsesAndDo:</Selector>
		<Selector>noMask:</Selector>
		<Selector>nonblocking</Selector>
		<Selector>nonIntegerIndex:</Selector>
		<Selector>normalize</Selector>
		<Selector>not</Selector>
		<Selector>notEmpty</Selector>
		<Selector>notIndexable:</Selector>
		<Selector>notNil</Selector>
		<Selector>notNull</Selector>
		<Selector>noUserOverrides</Selector>
		<Selector>noVisibleWindows</Selector>
		<Selector>ntStatusCode:</Selector>
		<Selector>numArgs</Selector>
		<Selector>numberFormat</Selector>
		<Selector>numberFormat:</Selector>
		<Selector>numberGrouping</Selector>
		<Selector>numberGrouping:</Selector>
		<Selector>numberOfDigitsInBase:</Selector>
		<Selector>NumberParameters</Selector>
		<Selector>NumDigits</Selector>
		<Selector>NumDigits:</Selector>
		<Selector>numerator</Selector>
		<Selector>numerator:denominator:</Selector>
		<Selector>occurrencesOf:from:to:</Selector>
		<Selector>odd</Selector>
		<Selector>ofSize:</Selector>
		<Selector>ok</Selector>
		<Selector>on:</Selector>
		<Selector>on:do:</Selector>
		<Selector>on:limit:</Selector>
		<Selector>on:limit:limitBlock:</Selector>
		<Selector>on:resumable:</Selector>
		<Selector>on:text:</Selector>
		<Selector>on:type:</Selector>
		<Selector>one</Selector>
		<Selector>onExit</Selector>
		<Selector>onProcess:index:</Selector>
		<Selector>onQuit:</Selector>
		<Selector>onStartup</Selector>
		<Selector>onStartup2</Selector>
		<Selector>onUnhandledError:</Selector>
		<Selector>onUnhandledNotification:</Selector>
		<Selector>onUnhandledWarning:</Selector>
		<Selector>onUserBreak</Selector>
		<Selector>open</Selector>
		<Selector>open:</Selector>
		<Selector>open:flags:share:</Selector>
		<Selector>open:mode:</Selector>
		<Selector>open:mode:check:</Selector>
		<Selector>open:mode:check:share:</Selector>
		<Selector>openConsole</Selector>
		<Selector>openConsoleStreams</Selector>
		<Selector>openDefault</Selector>
		<Selector>openFlags</Selector>
		<Selector>openLibraries</Selector>
		<Selector>openStdErr</Selector>
		<Selector>openStdIn</Selector>
		<Selector>openStdOut</Selector>
		<Selector>operand1</Selector>
		<Selector>operation</Selector>
		<Selector>operationCodes</Selector>
		<Selector>operationName</Selector>
		<Selector>osErrorMessage</Selector>
		<Selector>outer</Selector>
		<Selector>outputDebugString:</Selector>
		<Selector>over:limit:limitBlock:</Selector>
		<Selector>overlappedSleepEx:bAlertable:</Selector>
		<Selector>parentName</Selector>
		<Selector>parseCmdLineFlags</Selector>
		<Selector>path</Selector>
		<Selector>pathologist</Selector>
		<Selector>pathologist:</Selector>
		<Selector>pathString</Selector>
		<Selector>peekFor:</Selector>
		<Selector>peekMessage:hWnd:uMsgFilterMin:uMsgFilterMax:wRemoveMsg:</Selector>
		<Selector>perform:</Selector>
		<Selector>perform:with:</Selector>
		<Selector>perform:with:with:</Selector>
		<Selector>perform:with:with:with:</Selector>
		<Selector>perform:withArguments:</Selector>
		<Selector>pointerClass</Selector>
		<Selector>pop</Selector>
		<Selector>position</Selector>
		<Selector>position:</Selector>
		<Selector>positionAfterNext:</Selector>
		<Selector>positive</Selector>
		<Selector>postCopy</Selector>
		<Selector>postQuit:</Selector>
		<Selector>postQuitMessage:</Selector>
		<Selector>postResize:</Selector>
		<Selector>preResize:</Selector>
		<Selector>preStart</Selector>
		<Selector>preTranslateMessage:</Selector>
		<Selector>primAllInstances</Selector>
		<Selector>primAllSubinstances</Selector>
		<Selector>primary</Selector>
		<Selector>primaryStartup</Selector>
		<Selector>primCollectGarbage:</Selector>
		<Selector>primCompact</Selector>
		<Selector>primesUpTo:</Selector>
		<Selector>primitiveFailed:</Selector>
		<Selector>primitiveIndex</Selector>
		<Selector>primQuit:</Selector>
		<Selector>primReturn:callback:</Selector>
		<Selector>primSampleInterval:</Selector>
		<Selector>primSetSignals:</Selector>
		<Selector>primTerminate</Selector>
		<Selector>primUnwindCallback:</Selector>
		<Selector>primUnwindInterrupt</Selector>
		<Selector>print:</Selector>
		<Selector>printDescriptionOn:</Selector>
		<Selector>printEscapedOn:</Selector>
		<Selector>printFlags:on:</Selector>
		<Selector>printFloat:format:lcid:</Selector>
		<Selector>printFloat:on:format:</Selector>
		<Selector>printFullNameOn:</Selector>
		<Selector>printOn:</Selector>
		<Selector>printOn:base:</Selector>
		<Selector>printOn:base:decimalPlaces:</Selector>
		<Selector>printOn:base:nDigits:</Selector>
		<Selector>printOn:base:showRadix:</Selector>
		<Selector>printOn:do:</Selector>
		<Selector>printStackOn:depth:</Selector>
		<Selector>printString</Selector>
		<Selector>printStringLimitedTo:</Selector>
		<Selector>printStringRadix:</Selector>
		<Selector>printTraceOn:</Selector>
		<Selector>printTraceOn:depth:</Selector>
		<Selector>priority</Selector>
		<Selector>priority:</Selector>
		<Selector>privateAt:put:</Selector>
		<Selector>process</Selector>
		<Selector>process:index:</Selector>
		<Selector>pumpMessage:</Selector>
		<Selector>queryEndSession</Selector>
		<Selector>queueDeferredAction:</Selector>
		<Selector>queueInterrupt:</Selector>
		<Selector>queueInterrupt:with:</Selector>
		<Selector>quicksortRecursionLimit:</Selector>
		<Selector>quit</Selector>
		<Selector>quit:</Selector>
		<Selector>quo:</Selector>
		<Selector>qwordAtOffset:</Selector>
		<Selector>raisedTo:</Selector>
		<Selector>raisedToInteger:</Selector>
		<Selector>raisingFrame</Selector>
		<Selector>rationalisedNumerator:denominator:</Selector>
		<Selector>read:count:</Selector>
		<Selector>readFile:lpBuffer:nNumberOfBytesToRead:lpNumberOfBytesRead:lpOverlapped:</Selector>
		<Selector>readStream</Selector>
		<Selector>receiver</Selector>
		<Selector>receiver:</Selector>
		<Selector>receiver:message:</Selector>
		<Selector>receiver:selector:</Selector>
		<Selector>receiver:selector:arguments:</Selector>
		<Selector>reciprocal</Selector>
		<Selector>reciprocalLogBase2</Selector>
		<Selector>registerAsDispatcher</Selector>
		<Selector>registerConsoleCtrlHandler</Selector>
		<Selector>registerObjects</Selector>
		<Selector>registerRunning</Selector>
		<Selector>registryAt:</Selector>
		<Selector>registryAt:put:</Selector>
		<Selector>registryAtIndex:put:</Selector>
		<Selector>rehash</Selector>
		<Selector>reject:</Selector>
		<Selector>remove:ifAbsent:</Selector>
		<Selector>removeAtIndex:</Selector>
		<Selector>removeBindingFor:</Selector>
		<Selector>removeExtension:</Selector>
		<Selector>removeFirstIfAbsent:</Selector>
		<Selector>removeFromSuper</Selector>
		<Selector>removeIndex:</Selector>
		<Selector>removeKey:ifAbsent:</Selector>
		<Selector>removeSubclass:</Selector>
		<Selector>replaceBytesOf:from:to:startingAt:</Selector>
		<Selector>replaceElementsOf:from:to:startingAt:</Selector>
		<Selector>replaceFrom:to:with:startingAt:</Selector>
		<Selector>replaceFrom:to:withObject:</Selector>
		<Selector>replaceIdentity:with:</Selector>
		<Selector>reset</Selector>
		<Selector>resetFloatingPoint</Selector>
		<Selector>resetGCStats</Selector>
		<Selector>resize:</Selector>
		<Selector>resolveBindingPath:environment:</Selector>
		<Selector>resolveImportedBinding:</Selector>
		<Selector>resolveImportedEnvironmentBinding:</Selector>
		<Selector>resolveLocallyImportedBinding:</Selector>
		<Selector>resolvePathString:environment:</Selector>
		<Selector>resolvePublicBinding:</Selector>
		<Selector>resolveUnqualifiedName:environment:</Selector>
		<Selector>respondsTo:</Selector>
		<Selector>resumableDescription:</Selector>
		<Selector>resume</Selector>
		<Selector>resume:</Selector>
		<Selector>retry:coercing:</Selector>
		<Selector>retType</Selector>
		<Selector>return</Selector>
		<Selector>return:</Selector>
		<Selector>returnType</Selector>
		<Selector>returnValue:toFrame:</Selector>
		<Selector>rounded</Selector>
		<Selector>roundUpTo:</Selector>
		<Selector>saveSessionState</Selector>
		<Selector>scale</Selector>
		<Selector>sdwordAtOffset:</Selector>
		<Selector>sdwordAtOffset:put:</Selector>
		<Selector>secondaryStartup</Selector>
		<Selector>securityAttributes</Selector>
		<Selector>seek:offset:</Selector>
		<Selector>seek:sense:</Selector>
		<Selector>select:</Selector>
		<Selector>selector</Selector>
		<Selector>selector:arguments:</Selector>
		<Selector>selectors:</Selector>
		<Selector>sender</Selector>
		<Selector>sentinelName</Selector>
		<Selector>set</Selector>
		<Selector>setBinding:</Selector>
		<Selector>setConsoleCtrlHandler:add:</Selector>
		<Selector>setDefault:</Selector>
		<Selector>setFile:resumable:</Selector>
		<Selector>setFilePointerEx:liDistanceToMove:lpNewFilePointer:dwMoveMethod:</Selector>
		<Selector>setFpControl:mask:</Selector>
		<Selector>setGeneration:</Selector>
		<Selector>setHandle:flags:</Selector>
		<Selector>setHandler:</Selector>
		<Selector>setLastError:</Selector>
		<Selector>setLaunchBlock:</Selector>
		<Selector>setlocale:locale:</Selector>
		<Selector>setPath:</Selector>
		<Selector>setPathString:</Selector>
		<Selector>setProcess:index:</Selector>
		<Selector>setSamplingInterval:</Selector>
		<Selector>setSelector:</Selector>
		<Selector>setSelector:arguments:</Selector>
		<Selector>setSpecialBehavior:</Selector>
		<Selector>setStream:limit:limitBlock:</Selector>
		<Selector>setStream:name:flags:</Selector>
		<Selector>setToEnd</Selector>
		<Selector>setValue:</Selector>
		<Selector>severity:facility:code:</Selector>
		<Selector>shallowCopy</Selector>
		<Selector>sharedVariableName</Selector>
		<Selector>shareFlags:</Selector>
		<Selector>shortName</Selector>
		<Selector>shortNameFor:in:</Selector>
		<Selector>shutdown</Selector>
		<Selector>sift:from:between:and:</Selector>
		<Selector>sign</Selector>
		<Selector>signal</Selector>
		<Selector>signal:</Selector>
		<Selector>signal:with:</Selector>
		<Selector>signal:withFailureCode:</Selector>
		<Selector>signalFailureCode:</Selector>
		<Selector>signalFrame</Selector>
		<Selector>signalOn:resumable:</Selector>
		<Selector>signalOsError:</Selector>
		<Selector>signalType</Selector>
		<Selector>signalType:</Selector>
		<Selector>signalWith:</Selector>
		<Selector>signBit</Selector>
		<Selector>significandAsInteger</Selector>
		<Selector>size</Selector>
		<Selector>sizeFor:</Selector>
		<Selector>skip:</Selector>
		<Selector>skipTo:</Selector>
		<Selector>smalltalk</Selector>
		<Selector>smalltalkWriteStream</Selector>
		<Selector>smalltalkWriteStream:</Selector>
		<Selector>sniffEncoding</Selector>
		<Selector>sort</Selector>
		<Selector>sort:from:to:</Selector>
		<Selector>sort:from:to:limit:</Selector>
		<Selector>sortUsing:</Selector>
		<Selector>sourceDescriptor</Selector>
		<Selector>sp:</Selector>
		<Selector>space</Selector>
		<Selector>spec:</Selector>
		<Selector>species</Selector>
		<Selector>split:</Selector>
		<Selector>splitStemFrom:</Selector>
		<Selector>spOfIndex:</Selector>
		<Selector>sqwordAtOffset:</Selector>
		<Selector>stackTempCount</Selector>
		<Selector>start</Selector>
		<Selector>startUI</Selector>
		<Selector>state</Selector>
		<Selector>status:facility:</Selector>
		<Selector>statusCode</Selector>
		<Selector>stderr</Selector>
		<Selector>stdin</Selector>
		<Selector>stdioStreams</Selector>
		<Selector>stdout</Selector>
		<Selector>step</Selector>
		<Selector>stop</Selector>
		<Selector>strcspn:start:</Selector>
		<Selector>strcspn:strCharSet:</Selector>
		<Selector>strerror</Selector>
		<Selector>strerror_s:bufferSize:errnum:</Selector>
		<Selector>strlen</Selector>
		<Selector>strlen:</Selector>
		<Selector>subclasses</Selector>
		<Selector>subclassesDo:</Selector>
		<Selector>subtractFromFraction:</Selector>
		<Selector>subtractFromScaledDecimal:</Selector>
		<Selector>superclass</Selector>
		<Selector>suspendedFrame</Selector>
		<Selector>suspendedFrame:</Selector>
		<Selector>suspendingList</Selector>
		<Selector>swordAtOffset:put:</Selector>
		<Selector>swParam</Selector>
		<Selector>synchronizeLocale</Selector>
		<Selector>systemBackgroundPriority</Selector>
		<Selector>systemBasePriority</Selector>
		<Selector>systemError</Selector>
		<Selector>systemError:</Selector>
		<Selector>systemProcessOwner</Selector>
		<Selector>tab</Selector>
		<Selector>tab:</Selector>
		<Selector>tag</Selector>
		<Selector>tag:</Selector>
		<Selector>tagFromExceptionCode:</Selector>
		<Selector>targetVariable</Selector>
		<Selector>terminate</Selector>
		<Selector>terminateActive</Selector>
		<Selector>terminateInterrupt</Selector>
		<Selector>tertiaryStartup</Selector>
		<Selector>thousandSeparator</Selector>
		<Selector>thousandSeparator:</Selector>
		<Selector>timesTwoPower:</Selector>
		<Selector>timingPriority</Selector>
		<Selector>to:</Selector>
		<Selector>to:by:</Selector>
		<Selector>topFrame</Selector>
		<Selector>toTrace</Selector>
		<Selector>toTrace:</Selector>
		<Selector>traceStream</Selector>
		<Selector>translateMessage:</Selector>
		<Selector>translationMode</Selector>
		<Selector>trigger:</Selector>
		<Selector>trigger:with:</Selector>
		<Selector>triggerEvent:</Selector>
		<Selector>triggerEvent:with:</Selector>
		<Selector>trimBlanks</Selector>
		<Selector>trimNulls</Selector>
		<Selector>truncated</Selector>
		<Selector>try:</Selector>
		<Selector>type:</Selector>
		<Selector>typeHasArgument:</Selector>
		<Selector>uiDefault</Selector>
		<Selector>uiIdle</Selector>
		<Selector>uintPtrAtOffset:</Selector>
		<Selector>uintPtrAtOffset:put:</Selector>
		<Selector>uncheckedAdd:</Selector>
		<Selector>uncheckedAt:put:</Selector>
		<Selector>uncheckedFrom:to:keysAndValuesDo:</Selector>
		<Selector>understandsArithmetic</Selector>
		<Selector>undertakerMain</Selector>
		<Selector>ungetc:stream:</Selector>
		<Selector>ungetwc:stream:</Selector>
		<Selector>unhandledException:</Selector>
		<Selector>unqualifiedName</Selector>
		<Selector>unregisterConsoleCtrlHandler</Selector>
		<Selector>unsignedValue:</Selector>
		<Selector>unwindCallback:</Selector>
		<Selector>unwindCallbacks</Selector>
		<Selector>updatePrimitiveFailed:atOffset:</Selector>
		<Selector>upTo:</Selector>
		<Selector>upToEnd</Selector>
		<Selector>userBreakInterrupt</Selector>
		<Selector>userDefault</Selector>
		<Selector>userDefault:</Selector>
		<Selector>userInterruptSignal</Selector>
		<Selector>userSchedulingPriority</Selector>
		<Selector>utf16StringFromAddress:</Selector>
		<Selector>utf16Value:</Selector>
		<Selector>utf16Value:ifInvalid:</Selector>
		<Selector>validOffset:failureCode:</Selector>
		<Selector>value</Selector>
		<Selector>value:</Selector>
		<Selector>value:value:</Selector>
		<Selector>value:withArguments:</Selector>
		<Selector>valueAtAddress:</Selector>
		<Selector>valueOfBinding:</Selector>
		<Selector>valueOnUnwind:</Selector>
		<Selector>valueOrNil</Selector>
		<Selector>valuesClass</Selector>
		<Selector>valueWithArguments:</Selector>
		<Selector>variableAdded:</Selector>
		<Selector>variableRemoved:</Selector>
		<Selector>verifyVersionInfo:dwTypeMask:dwlConditionMask:</Selector>
		<Selector>verSetConditionMask:typeMask:condition:</Selector>
		<Selector>virtualQuery:lpBuffer:dwLength:</Selector>
		<Selector>visit:do:</Selector>
		<Selector>visitedBlock</Selector>
		<Selector>visitImport:from:</Selector>
		<Selector>vmi:list:no:with:</Selector>
		<Selector>wait</Selector>
		<Selector>wait:</Selector>
		<Selector>wait:ret:</Selector>
		<Selector>waitForInput:</Selector>
		<Selector>wcscspn:strCharSet:</Selector>
		<Selector>wcslen:</Selector>
		<Selector>wideCharToMultiByte:dwFlags:lpWideCharStr:cchWideChar:lpMultiByteStr:cchMultiByte:lpDefaultChar:lpUsedDefaultChar:</Selector>
		<Selector>win32Error:</Selector>
		<Selector>windowAt:put:</Selector>
		<Selector>windows</Selector>
		<Selector>wineGetVersion</Selector>
		<Selector>with:</Selector>
		<Selector>withAllSubclassesDo:</Selector>
		<Selector>wordAtOffset:</Selector>
		<Selector>wordAtOffset:put:</Selector>
		<Selector>write:count:</Selector>
		<Selector>writeFile:lpBuffer:nNumberOfBytesToWrite:lpNumberOfBytesWritten:lpOverlapped:</Selector>
		<Selector>writeStream</Selector>
		<Selector>writeStream:</Selector>
		<Selector>wServicePackMajor:</Selector>
		<Selector>yield</Selector>
		<Selector>yourAddress</Selector>
		<Selector>zero</Selector>
	</SentMessages>
	<UnimplementedMessages>
		<Selector>namespace:</Selector>
	</UnimplementedMessages>
	<!-- Attempting to remove Smalltalk.ImageStripper -->
	<!-- Attempting to remove Smalltalk.BasicImageStripper -->
	<Manifest>
		<ImageStatistics>
			<ObjectCount>9765</ObjectCount>
			<ClassCount>170</ClassCount>
			<MethodCount>2869</MethodCount>
			<SymbolCount>1910</SymbolCount>
		</ImageStatistics>
		<Classes count="170">
			<Class name="OS._FPIEEE_RECORD" count="0" memoryUsage="0">
				<Methods count="9">
					<Method>cause</Method>
					<Method>causeDescription</Method>
					<Method>flags</Method>
					<Method>isDivide</Method>
					<Method>isZeroDivide</Method>
					<Method>operand1</Method>
					<Method>operation</Method>
					<Method>operationName</Method>
					<Method>precision</Method>
				</Methods>
				<ClassMethods count="5">
					<Method>byteSize</Method>
					<Method>exceptionFlags</Method>
					<Method>exceptionFlags:do:</Method>
					<Method>operationCodes</Method>
					<Method>printFlags:on:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS._FPIEEE_VALUE" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>flags</Method>
					<Method>format</Method>
					<Method>isValid</Method>
					<Method>value</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>byteSize</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.AbstractWindowsLocale" count="0" memoryUsage="0">
				<Methods count="25">
					<Method>asParameter</Method>
					<Method>code</Method>
					<Method>decimalPlaces</Method>
					<Method>decimalSeparator</Method>
					<Method>displayName</Method>
					<Method>displayOn:</Method>
					<Method>englishDisplayName</Method>
					<Method>getIntegerInfo:</Method>
					<Method>getLocaleInfoInteger:</Method>
					<Method>getLocaleInfoString:</Method>
					<Method>getStringInfo:</Method>
					<Method>hasLeadingZero</Method>
					<Method>infinity</Method>
					<Method>initialize</Method>
					<Method>localizedDisplayName</Method>
					<Method>mapUppercaseFlags</Method>
					<Method>name</Method>
					<Method>nan</Method>
					<Method>negativeInfinity</Method>
					<Method>negativeNumberMode</Method>
					<Method>numberGrouping</Method>
					<Method>parentName</Method>
					<Method>primary</Method>
					<Method>tag</Method>
					<Method>thousandSeparator</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>lcid:</Method>
					<Method>lcid:withOverrides:</Method>
					<Method>reset</Method>
				</ClassMethods>
			</Class>
			<Class name="External.Address" count="2" memoryUsage="48">
				<Methods count="24">
					<Method>asExternalAddress</Method>
					<Method>asInteger</Method>
					<Method>at:</Method>
					<Method>at:put:</Method>
					<Method>byteAtOffset:</Method>
					<Method>byteAtOffset:put:</Method>
					<Method>copyFrom:to:</Method>
					<Method>displayOn:</Method>
					<Method>dwordAtOffset:</Method>
					<Method>dwordAtOffset:put:</Method>
					<Method>intPtrAtOffset:</Method>
					<Method>replaceBytesOf:from:to:startingAt:</Method>
					<Method>resize:</Method>
					<Method>sdwordAtOffset:</Method>
					<Method>sdwordAtOffset:put:</Method>
					<Method>swordAtOffset:</Method>
					<Method>swordAtOffset:put:</Method>
					<Method>uintPtrAtOffset:</Method>
					<Method>uintPtrAtOffset:put:</Method>
					<Method>value</Method>
					<Method>value:</Method>
					<Method>wordAtOffset:</Method>
					<Method>wordAtOffset:put:</Method>
					<Method>yourAddress</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>fromAddress:</Method>
					<Method>fromBytes:</Method>
					<Method>fromInteger:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.AdvApiLibrary" count="1" memoryUsage="24">
				<Methods count="2">
					<Method>invalidCall:</Method>
					<Method>isTextUnicode:iSize:lpiResult:</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>fileName</Method>
					<Method>sharedVariableName</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.AnsiString" count="70" memoryUsage="2568">
				<Methods count="9">
					<Method>_beginsString:</Method>
					<Method>asAnsiString</Method>
					<Method>codePointsDo:</Method>
					<Method>decodeAt:</Method>
					<Method>decodeNextFrom:</Method>
					<Method>encodedSizeAt:</Method>
					<Method>encodeOn:put:</Method>
					<Method>nextIndexOfCharacter:from:to:</Method>
					<Method>trimNulls</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>coerceString:</Method>
					<Method>with:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.ArithmeticError" count="0" memoryUsage="0">
				<Methods count="1">
					<Method>isResumable</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.ArithmeticValue" count="0" memoryUsage="0">
				<Methods count="40">
					<Method>//</Method>
					<Method>\\</Method>
					<Method>=</Method>
					<Method>abs</Method>
					<Method>addToFloat:</Method>
					<Method>addToFraction:</Method>
					<Method>addToInteger:</Method>
					<Method>addToScaledDecimal:</Method>
					<Method>ceiling</Method>
					<Method>divideIntoFloat:</Method>
					<Method>divideIntoFraction:</Method>
					<Method>divideIntoInteger:</Method>
					<Method>divideIntoScaledDecimal:</Method>
					<Method>equalToFloat:</Method>
					<Method>equalToFraction:</Method>
					<Method>equalToScaledDecimal:</Method>
					<Method>floor</Method>
					<Method>greaterThanFloat:</Method>
					<Method>greaterThanFraction:</Method>
					<Method>greaterThanInteger:</Method>
					<Method>greaterThanScaledDecimal:</Method>
					<Method>multiplyByFloat:</Method>
					<Method>multiplyByFraction:</Method>
					<Method>multiplyByInteger:</Method>
					<Method>multiplyByScaledDecimal:</Method>
					<Method>negative</Method>
					<Method>positive</Method>
					<Method>quo:</Method>
					<Method>quotientFromInteger:</Method>
					<Method>raisedToInteger:</Method>
					<Method>reciprocal</Method>
					<Method>retry:coercing:</Method>
					<Method>rounded</Method>
					<Method>roundUpTo:</Method>
					<Method>sign</Method>
					<Method>subtractFromFloat:</Method>
					<Method>subtractFromFraction:</Method>
					<Method>subtractFromInteger:</Method>
					<Method>subtractFromScaledDecimal:</Method>
					<Method>understandsArithmetic</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Array" count="650" memoryUsage="55376">
				<Methods count="11">
					<Method>addAnsweringIndex:</Method>
					<Method>asArray</Method>
					<Method>displayOn:</Method>
					<Method>isLiteral</Method>
					<Method>isLiteral:</Method>
					<Method>isSelfEvaluating</Method>
					<Method>isSelfEvaluating:</Method>
					<Method>printOn:</Method>
					<Method>printOn:do:</Method>
					<Method>replaceElementsOf:from:to:startingAt:</Method>
					<Method>replaceFrom:to:with:startingAt:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>empty</Method>
					<Method>newFromStack:</Method>
					<Method>with:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.ArrayedCollection" count="0" memoryUsage="0">
				<Methods count="21">
					<Method>allSatisfy:</Method>
					<Method>anySatisfy:</Method>
					<Method>at:</Method>
					<Method>at:ifAbsent:</Method>
					<Method>at:put:</Method>
					<Method>copyFrom:to:</Method>
					<Method>decodeAt:</Method>
					<Method>decodeNextFrom:</Method>
					<Method>do:</Method>
					<Method>do:separatedBy:</Method>
					<Method>identityIncludes:</Method>
					<Method>includes:</Method>
					<Method>inject:into:</Method>
					<Method>lookup:</Method>
					<Method>nextIdentityIndexOf:from:to:</Method>
					<Method>nextIndexOf:from:to:</Method>
					<Method>replaceIdentity:with:</Method>
					<Method>resize:</Method>
					<Method>size</Method>
					<Method>sort</Method>
					<Method>sortUsing:</Method>
				</Methods>
				<ClassMethods count="4">
					<Method>new</Method>
					<Method>new:withAll:</Method>
					<Method>with:</Method>
					<Method>withAll:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Association" count="0" memoryUsage="0">
				<Methods count="14">
					<Method>&lt;</Method>
					<Method>&lt;=</Method>
					<Method>=</Method>
					<Method>displayOn:</Method>
					<Method>hash</Method>
					<Method>isSelfEvaluating</Method>
					<Method>isSelfEvaluating:</Method>
					<Method>key</Method>
					<Method>key:value:</Method>
					<Method>printOn:</Method>
					<Method>printString</Method>
					<Method>setValue:</Method>
					<Method>value</Method>
					<Method>value:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>key:value:</Method>
				</ClassMethods>
			</Class>
			<Class name="Smalltalk.BasicImageStripper" count="0" memoryUsage="0" unbound="true">
				<Methods count="16">
					<Method>_allMethodsInClasses:do:</Method>
					<Method>_basicDeleteMethod:</Method>
					<Method>_collectGarbage:</Method>
					<Method>_deleteMethods:</Method>
					<Method>_detachClass:</Method>
					<Method>_endElement:</Method>
					<Method>_endTag</Method>
					<Method>_finishedWithAll:</Method>
					<Method>_logComment:</Method>
					<Method>_logElement:attributes:value:</Method>
					<Method>_logMethod:</Method>
					<Method>_notify:</Method>
					<Method>_removeMethods:reason:force:</Method>
					<Method>_removeRedundantMethodsOnceFrom:</Method>
					<Method>_speciallySentMessages</Method>
					<Method>_startElement:attributes:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Behavior" count="0" memoryUsage="0">
				<Methods count="33">
					<Method>basicNew</Method>
					<Method>basicNew:</Method>
					<Method>bindingFor:</Method>
					<Method>canUnderstand:</Method>
					<Method>compiledMethodAt:ifAbsent:</Method>
					<Method>elementSize</Method>
					<Method>environment</Method>
					<Method>errorNonInstantiable</Method>
					<Method>errorNotPinnable</Method>
					<Method>extraInstanceSpec</Method>
					<Method>flushMethodCache</Method>
					<Method>hierarchyBindingFor:</Method>
					<Method>includesBehavior:</Method>
					<Method>inheritsFrom:</Method>
					<Method>instanceSpec</Method>
					<Method>instSize</Method>
					<Method>isBytes</Method>
					<Method>isIndirection</Method>
					<Method>isMeta</Method>
					<Method>isPointers</Method>
					<Method>lookupMethod:</Method>
					<Method>methodDictionary</Method>
					<Method>methodDictionary:</Method>
					<Method>methodsDo:</Method>
					<Method>new</Method>
					<Method>new:</Method>
					<Method>new:max:</Method>
					<Method>newFixed:</Method>
					<Method>primAllInstances</Method>
					<Method>primAllSubinstances</Method>
					<Method>removeFromSuper</Method>
					<Method>shallowCopy</Method>
					<Method>superclass</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.BindingContext" count="0" memoryUsage="0">
				<Methods count="6">
					<Method>environment</Method>
					<Method>identifier</Method>
					<Method>includesNamespace:</Method>
					<Method>methodClass</Method>
					<Method>setMethodClass:environment:identifier:</Method>
					<Method>visitImport:from:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>methodClass:environment:identifier:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.BindingReference" count="0" memoryUsage="0">
				<Methods count="13">
					<Method>&lt;=</Method>
					<Method>asSymbol</Method>
					<Method>basicUnqualifiedName</Method>
					<Method>binding</Method>
					<Method>environment</Method>
					<Method>ifDefined:</Method>
					<Method>isLiteral</Method>
					<Method>isMeta</Method>
					<Method>printOn:</Method>
					<Method>shortName</Method>
					<Method>unqualifiedName</Method>
					<Method>value</Method>
					<Method>valueOfBinding:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>clearCachedBindings</Method>
					<Method>flushBindings</Method>
					<Method>isQualifiedName:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.BlockClosure" count="90" memoryUsage="3648">
				<Methods count="33">
					<Method>=</Method>
					<Method>argumentCount</Method>
					<Method>cull:</Method>
					<Method>ensure:</Method>
					<Method>envTempCount</Method>
					<Method>forkAt:</Method>
					<Method>forkAt:maxStack:</Method>
					<Method>frameClass</Method>
					<Method>ifCurtailed:</Method>
					<Method>initialIP</Method>
					<Method>isClean</Method>
					<Method>localCount</Method>
					<Method>method</Method>
					<Method>method:</Method>
					<Method>newProcess:</Method>
					<Method>numArgs</Method>
					<Method>on:do:</Method>
					<Method>outer</Method>
					<Method>receiver</Method>
					<Method>receiver:</Method>
					<Method>repeat</Method>
					<Method>replaceElementsOf:from:to:startingAt:</Method>
					<Method>stackTempCount</Method>
					<Method>value</Method>
					<Method>value:</Method>
					<Method>value:value:</Method>
					<Method>valueFailed:argumentCount:</Method>
					<Method>valueOnUnwind:</Method>
					<Method>valueWithArguments:</Method>
					<Method>whileFalse</Method>
					<Method>whileFalse:</Method>
					<Method>whileTrue</Method>
					<Method>whileTrue:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.BlockFrame" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>argumentCount</Method>
					<Method>block</Method>
					<Method>displayOn:</Method>
					<Method>method:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Boolean" count="0" memoryUsage="0">
				<Methods count="3">
					<Method>|</Method>
					<Method>isLiteral</Method>
					<Method>shallowCopy</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.BoundsError" count="0" memoryUsage="0">
				<Methods count="3">
					<Method>_descriptionFormat</Method>
					<Method>receiver</Method>
					<Method>receiver:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.ByteArray" count="1563" memoryUsage="63656">
				<Methods count="41">
					<Method>=</Method>
					<Method>asAnsiString</Method>
					<Method>asByteArray</Method>
					<Method>asString</Method>
					<Method>basicUIntPtrAtOffset:</Method>
					<Method>basicUIntPtrAtOffset:put:</Method>
					<Method>byteAt:</Method>
					<Method>byteAtOffset:</Method>
					<Method>byteAtOffset:put:</Method>
					<Method>byteSize</Method>
					<Method>copy:from:to:</Method>
					<Method>doubleAtOffset:</Method>
					<Method>dwordAtOffset:</Method>
					<Method>dwordAtOffset:put:</Method>
					<Method>floatAtOffset:</Method>
					<Method>hash</Method>
					<Method>includes:</Method>
					<Method>intPtrAtOffset:</Method>
					<Method>isLiteral</Method>
					<Method>isNull</Method>
					<Method>longDoubleAtOffset:</Method>
					<Method>notNull</Method>
					<Method>printOn:</Method>
					<Method>qwordAtOffset:</Method>
					<Method>replaceBytesOf:from:to:startingAt:</Method>
					<Method>replaceFrom:to:with:startingAt:</Method>
					<Method>retryDwordAtOffset:put:failureCode:</Method>
					<Method>retrySWordAtOffset:put:failureCode:</Method>
					<Method>retryUIntPtrAtOffset:put:failureCode:</Method>
					<Method>retryWordAtOffset:put:failureCode:</Method>
					<Method>sdwordAtOffset:</Method>
					<Method>sdwordAtOffset:put:</Method>
					<Method>sqwordAtOffset:</Method>
					<Method>swordAtOffset:</Method>
					<Method>swordAtOffset:put:</Method>
					<Method>uintPtrAtOffset:</Method>
					<Method>uintPtrAtOffset:put:</Method>
					<Method>updatePrimitiveFailed:atOffset:</Method>
					<Method>validOffset:failureCode:</Method>
					<Method>wordAtOffset:</Method>
					<Method>wordAtOffset:put:</Method>
				</Methods>
				<ClassMethods count="4">
					<Method>elementSize</Method>
					<Method>empty</Method>
					<Method>encoding</Method>
					<Method>fromAddress:length:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.CannotReturnError" count="0" memoryUsage="0">
				<Methods count="1">
					<Method>description</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Character" count="258" memoryUsage="6192">
				<Methods count="40">
					<Method>_beginsString:</Method>
					<Method>&lt;</Method>
					<Method>=</Method>
					<Method>&gt;</Method>
					<Method>ansiValue</Method>
					<Method>asAnsiString</Method>
					<Method>asciiValue</Method>
					<Method>asInteger</Method>
					<Method>asLowercase</Method>
					<Method>asString</Method>
					<Method>asSymbol</Method>
					<Method>asUtf16String</Method>
					<Method>asUtf8String</Method>
					<Method>basicEncoding</Method>
					<Method>basicShallowCopy</Method>
					<Method>classify:</Method>
					<Method>code</Method>
					<Method>codePoint</Method>
					<Method>codeUnit</Method>
					<Method>digitValue</Method>
					<Method>displayOn:</Method>
					<Method>encoding</Method>
					<Method>hash</Method>
					<Method>isAscii</Method>
					<Method>isCharacter</Method>
					<Method>isDigit</Method>
					<Method>isEnglishLetter</Method>
					<Method>isGraph</Method>
					<Method>isLiteral</Method>
					<Method>isSeparator</Method>
					<Method>isUtf8</Method>
					<Method>isUtf8Surrogate</Method>
					<Method>isVowel</Method>
					<Method>join:</Method>
					<Method>printEscapedOn:</Method>
					<Method>printOn:</Method>
					<Method>setCode:</Method>
					<Method>shallowCopy</Method>
					<Method>split:</Method>
					<Method>to:</Method>
				</Methods>
				<ClassMethods count="15">
					<Method>ansiValue:</Method>
					<Method>asciiValue:</Method>
					<Method>byteCharacterSet</Method>
					<Method>codePoint:</Method>
					<Method>codePoint:ifInvalid:</Method>
					<Method>cr</Method>
					<Method>digitValue:</Method>
					<Method>isValidCodePoint:</Method>
					<Method>newCode:</Method>
					<Method>onStartup</Method>
					<Method>space</Method>
					<Method>tab</Method>
					<Method>utf16Value:</Method>
					<Method>utf16Value:ifInvalid:</Method>
					<Method>value:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Class" count="170" memoryUsage="13712">
				<Methods count="44">
					<Method>addBinding:</Method>
					<Method>allBindingsDo:</Method>
					<Method>allBindingsDo:visited:</Method>
					<Method>allClasses</Method>
					<Method>allClassesDo:</Method>
					<Method>basicAddBinding:</Method>
					<Method>basicEnvironment</Method>
					<Method>basicRemoveBinding:</Method>
					<Method>binding</Method>
					<Method>bindingFor:</Method>
					<Method>bindingOrNil</Method>
					<Method>bindingsDo:</Method>
					<Method>classPool</Method>
					<Method>environment</Method>
					<Method>environment:</Method>
					<Method>fullBindingFor:environment:</Method>
					<Method>fullName</Method>
					<Method>fullNameFor:</Method>
					<Method>imports</Method>
					<Method>includesEnvironment:</Method>
					<Method>includesNamespace:</Method>
					<Method>instanceClass</Method>
					<Method>isSelfEvaluating</Method>
					<Method>localBindingFor:</Method>
					<Method>name</Method>
					<Method>newBindingContextForIdentifier:environment:</Method>
					<Method>printFullNameOn:</Method>
					<Method>printOn:</Method>
					<Method>printString</Method>
					<Method>removeBindingFor:</Method>
					<Method>removeFromSuper</Method>
					<Method>removeSubclass:</Method>
					<Method>resolveBindingPath:environment:</Method>
					<Method>resolveImportedBinding:</Method>
					<Method>resolveImportedEnvironmentBinding:</Method>
					<Method>resolveLocallyImportedBinding:</Method>
					<Method>resolvePathString:environment:</Method>
					<Method>resolvePublicBinding:</Method>
					<Method>resolveUnqualifiedName:environment:</Method>
					<Method>shortName</Method>
					<Method>sourceDescriptor</Method>
					<Method>subclasses</Method>
					<Method>subclassesDo:</Method>
					<Method>unqualifiedName</Method>
				</Methods>
				<ClassMethods count="4">
					<Method>allClasses</Method>
					<Method>allClassesDo:</Method>
					<Method>allRoots</Method>
					<Method>basicAllRoots</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.ClassDescription" count="0" memoryUsage="0">
				<Methods count="18">
					<Method>&lt;=</Method>
					<Method>allInstances</Method>
					<Method>allSubclassesBreadthFirstDo:</Method>
					<Method>allSubclassesDo:</Method>
					<Method>allSubclassesPreOrderDo:</Method>
					<Method>baseEnvironment</Method>
					<Method>bindingsChanged</Method>
					<Method>bindingsDo:</Method>
					<Method>conformsToProtocol:</Method>
					<Method>displayOn:</Method>
					<Method>fullBindingFor:</Method>
					<Method>hierarchyBindingFor:</Method>
					<Method>localScope</Method>
					<Method>name</Method>
					<Method>subclasses</Method>
					<Method>variableAdded:</Method>
					<Method>variableRemoved:</Method>
					<Method>withAllSubclassesDo:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Collection" count="0" memoryUsage="0">
				<Methods count="30">
					<Method>_beginsString:</Method>
					<Method>_indexOfAnyInString:startingAt:</Method>
					<Method>addAll:</Method>
					<Method>allSatisfy:</Method>
					<Method>anySatisfy:</Method>
					<Method>appendToStream:</Method>
					<Method>asArray</Method>
					<Method>asByteArray</Method>
					<Method>collect:</Method>
					<Method>copyEmpty</Method>
					<Method>copyEmpty:</Method>
					<Method>copyingClass</Method>
					<Method>copyLike</Method>
					<Method>copySize</Method>
					<Method>countElements</Method>
					<Method>do:separatedBy:</Method>
					<Method>errorNotKeyed</Method>
					<Method>growSize</Method>
					<Method>identityIncludes:</Method>
					<Method>includes:</Method>
					<Method>inject:into:</Method>
					<Method>isEmpty</Method>
					<Method>newSelection</Method>
					<Method>notEmpty</Method>
					<Method>printOn:</Method>
					<Method>rehash</Method>
					<Method>reject:</Method>
					<Method>select:</Method>
					<Method>size</Method>
					<Method>split:</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>with:</Method>
					<Method>withAll:</Method>
				</ClassMethods>
			</Class>
			<Class name="Smalltalk.CommandLineHelloWorld" count="1" memoryUsage="88">
				<Methods count="1">
					<Method>main</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.CompiledCode" count="0" memoryUsage="0">
				<Methods count="27">
					<Method>=</Method>
					<Method>allSymbolLiteralsDo:</Method>
					<Method>annotations</Method>
					<Method>argumentCount</Method>
					<Method>byteCodes</Method>
					<Method>clear</Method>
					<Method>customEnvironment</Method>
					<Method>environment</Method>
					<Method>extraIndex</Method>
					<Method>fullBindingFor:</Method>
					<Method>hash</Method>
					<Method>isPacked</Method>
					<Method>isPrivate</Method>
					<Method>isUnbound</Method>
					<Method>literalArray:do:</Method>
					<Method>literalCount</Method>
					<Method>literalReferencesDo:</Method>
					<Method>literals</Method>
					<Method>localCount</Method>
					<Method>localScope</Method>
					<Method>methodClass</Method>
					<Method>primitiveIndex</Method>
					<Method>replaceElementsOf:from:to:startingAt:</Method>
					<Method>selector</Method>
					<Method>sourceDescriptor</Method>
					<Method>stackTempCount</Method>
					<Method>value:withArguments:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.CompiledExpression" count="2" memoryUsage="80">
				<Methods count="2">
					<Method>value</Method>
					<Method>value:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.CompiledMethod" count="2753" memoryUsage="135000">
				<Methods count="5">
					<Method>&lt;=</Method>
					<Method>displayOn:</Method>
					<Method>isSelfEvaluating</Method>
					<Method>isUnbound</Method>
					<Method>printOn:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.ConsoleSessionManager" count="0" memoryUsage="0">
				<Methods count="13">
					<Method>allocConsole</Method>
					<Method>attachFd:stream:</Method>
					<Method>basicTertiaryStartup</Method>
					<Method>isEmbedded</Method>
					<Method>logError:</Method>
					<Method>openStdErr</Method>
					<Method>openStdIn</Method>
					<Method>openStdOut</Method>
					<Method>quit:</Method>
					<Method>registerConsoleCtrlHandler</Method>
					<Method>startUI</Method>
					<Method>traceStream</Method>
					<Method>unhandledException:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.Context" count="16" memoryUsage="432">
				<Methods count="4">
					<Method>block</Method>
					<Method>frameClass</Method>
					<Method>outer</Method>
					<Method>printOn:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core" count="0" memoryUsage="0">
				<Methods count="0">
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.CRTError" count="0" memoryUsage="0">
				<Methods count="6">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>errno</Method>
					<Method>initialize</Method>
					<Method>messageText</Method>
					<Method>strerror</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.CRTLibrary" count="1" memoryUsage="24">
				<Methods count="45">
					<Method>_clearfp</Method>
					<Method>_close:</Method>
					<Method>_control87:mask:</Method>
					<Method>_dup2:handle2:</Method>
					<Method>_errno</Method>
					<Method>_fdopen:mode:</Method>
					<Method>_filelengthi64:</Method>
					<Method>_fileno:</Method>
					<Method>_fseeki64:offset:origin:</Method>
					<Method>_ftelli64:</Method>
					<Method>_get_osfhandle:</Method>
					<Method>_isatty:</Method>
					<Method>_makepath_s:bufferSize:drive:dir:fname:ext:</Method>
					<Method>_open_osfhandle:flags:</Method>
					<Method>_setmode:mode:</Method>
					<Method>_splitpath_s:drive:driveLen:dir:dirLen:fname:fnameLen:ext:extLen:</Method>
					<Method>_wfopen_s:filename:mode:</Method>
					<Method>atoi:</Method>
					<Method>close</Method>
					<Method>errno</Method>
					<Method>fclose:</Method>
					<Method>feof:</Method>
					<Method>fflush:</Method>
					<Method>fgetc:</Method>
					<Method>fgets:n:stream:</Method>
					<Method>fgetwc:</Method>
					<Method>fgetws:n:stream:</Method>
					<Method>fputc:stream:</Method>
					<Method>fputs:stream:</Method>
					<Method>fputwc:stream:</Method>
					<Method>fputws:stream:</Method>
					<Method>fread_s:bufferSize:elementSize:count:stream:</Method>
					<Method>fwrite:size:count:stream:</Method>
					<Method>initialize</Method>
					<Method>invalidCall:</Method>
					<Method>memcmp:buf2:count:</Method>
					<Method>setlocale:locale:</Method>
					<Method>strcspn:strCharSet:</Method>
					<Method>strerror_s:bufferSize:errnum:</Method>
					<Method>strlen:</Method>
					<Method>synchronizeLocale</Method>
					<Method>ungetc:stream:</Method>
					<Method>ungetwc:stream:</Method>
					<Method>wcscspn:strCharSet:</Method>
					<Method>wcslen:</Method>
				</Methods>
				<ClassMethods count="4">
					<Method>fileName</Method>
					<Method>nonblocking</Method>
					<Method>open</Method>
					<Method>sharedVariableName</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.CRTLibraryNonBlocking" count="1" memoryUsage="24">
				<Methods count="6">
					<Method>_errno</Method>
					<Method>fgetc:</Method>
					<Method>fgets:n:stream:</Method>
					<Method>fgetwc:</Method>
					<Method>fgetws:n:stream:</Method>
					<Method>fread_s:bufferSize:elementSize:count:stream:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>sharedVariableName</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.DeadObject" count="1" memoryUsage="16">
				<Methods count="0">
				</Methods>
				<ClassMethods count="1">
					<Method>current</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.DeafObject" count="1" memoryUsage="16">
				<Methods count="4">
					<Method>=</Method>
					<Method>asParameter</Method>
					<Method>doesNotUnderstand:</Method>
					<Method>mustBeBoolean</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>current</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.DefaultSortAlgorithm" count="1" memoryUsage="16">
				<Methods count="4">
					<Method>insertionSort:from:to:</Method>
					<Method>sift:from:between:and:</Method>
					<Method>sort:from:to:</Method>
					<Method>sort:from:to:limit:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>current</Method>
				</ClassMethods>
			</Class>
			<Class name="Smalltalk.DeploymentContext" count="1" memoryUsage="64" unbound="true">
				<Methods count="15">
					<Method>_aspectSetters</Method>
					<Method>_aspectSetters:</Method>
					<Method>_closeLog</Method>
					<Method>_endElement:</Method>
					<Method>_endTag</Method>
					<Method>_finishedWithStripping</Method>
					<Method>_logComment:</Method>
					<Method>_logElement:attributes:value:</Method>
					<Method>_logStrippingError:</Method>
					<Method>_logValue:</Method>
					<Method>_notify:</Method>
					<Method>_preservedMessages</Method>
					<Method>_runFlags</Method>
					<Method>_startElement:attributes:</Method>
					<Method>developmentClasses</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Dictionary" count="7" memoryUsage="1328">
				<Methods count="29">
					<Method>_deepCopyElementsInto:trail:</Method>
					<Method>=</Method>
					<Method>add:</Method>
					<Method>addNewElement:</Method>
					<Method>associationAt:ifAbsent:</Method>
					<Method>associationClass</Method>
					<Method>associationsDo:</Method>
					<Method>associationsDo:separatedBy:</Method>
					<Method>at:</Method>
					<Method>at:ifAbsent:</Method>
					<Method>at:put:</Method>
					<Method>bindingFor:</Method>
					<Method>bindingsDo:</Method>
					<Method>collect:</Method>
					<Method>copyElementsInto:</Method>
					<Method>do:</Method>
					<Method>errorKeyNotFound:</Method>
					<Method>findElementOrNil:</Method>
					<Method>findKeyOrNil:</Method>
					<Method>identityIncludes:</Method>
					<Method>includes:</Method>
					<Method>includesKey:</Method>
					<Method>keysAndValuesDo:</Method>
					<Method>lookup:</Method>
					<Method>newAssociation:value:</Method>
					<Method>postCopy</Method>
					<Method>printOn:</Method>
					<Method>removeKey:ifAbsent:</Method>
					<Method>select:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="External.DynamicLinkLibrary" count="0" memoryUsage="0">
				<Methods count="23">
					<Method>=</Method>
					<Method>asParameter</Method>
					<Method>basicFree</Method>
					<Method>basicOpen:</Method>
					<Method>close</Method>
					<Method>fileName</Method>
					<Method>free</Method>
					<Method>getProcAddress:ifAbsent:</Method>
					<Method>handle</Method>
					<Method>handle:</Method>
					<Method>hash</Method>
					<Method>invalidArgErrorClass</Method>
					<Method>invalidCall:</Method>
					<Method>invalidCall:fromFrame:</Method>
					<Method>isOpen</Method>
					<Method>isSelfEvaluating</Method>
					<Method>loadFlags</Method>
					<Method>moduleFileName</Method>
					<Method>open</Method>
					<Method>open:</Method>
					<Method>printOn:</Method>
					<Method>systemError</Method>
					<Method>systemError:</Method>
				</Methods>
				<ClassMethods count="18">
					<Method>clear</Method>
					<Method>clearProcAddresses</Method>
					<Method>closeAllDefaults</Method>
					<Method>closeDefault</Method>
					<Method>default</Method>
					<Method>fileName</Method>
					<Method>fromHandle:</Method>
					<Method>initializeSubclasses</Method>
					<Method>load:flags:</Method>
					<Method>moduleFileName:</Method>
					<Method>onExit</Method>
					<Method>onStartup</Method>
					<Method>onStartup2</Method>
					<Method>open</Method>
					<Method>open:</Method>
					<Method>openDefault</Method>
					<Method>setDefault:</Method>
					<Method>sharedVariableName</Method>
				</ClassMethods>
			</Class>
			<Class name="External.DynamicLinkLibraryStub" count="0" memoryUsage="0">
				<Methods count="2">
					<Method>doesNotUnderstand:</Method>
					<Method>libraryClass:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>libraryClass:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.EqualitySearchPolicy" count="1" memoryUsage="16">
				<Methods count="1">
					<Method>name</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Error" count="0" memoryUsage="0">
				<Methods count="2">
					<Method>defaultAction</Method>
					<Method>isUserResumable</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>nonIntegerIndex:</Method>
					<Method>notIndexable:</Method>
					<Method>performFailed:of:for:withArgs:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Exception" count="0" memoryUsage="0">
				<Methods count="33">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>_evaluateHandler:in:</Method>
					<Method>_propagate</Method>
					<Method>_propagateFrom:</Method>
					<Method>description</Method>
					<Method>displayOn:</Method>
					<Method>exit:</Method>
					<Method>hresult</Method>
					<Method>isResumable</Method>
					<Method>isUserResumable</Method>
					<Method>messageText</Method>
					<Method>messageText:</Method>
					<Method>outer</Method>
					<Method>postCopy</Method>
					<Method>printOn:</Method>
					<Method>printTraceOn:</Method>
					<Method>printTraceOn:depth:</Method>
					<Method>raisingFrame</Method>
					<Method>resume</Method>
					<Method>resume:</Method>
					<Method>return</Method>
					<Method>return:</Method>
					<Method>signal</Method>
					<Method>signal:</Method>
					<Method>signal:with:</Method>
					<Method>signalFrame</Method>
					<Method>signalType</Method>
					<Method>signalWith:</Method>
					<Method>tag</Method>
					<Method>tag:</Method>
					<Method>toTrace</Method>
					<Method>toTrace:</Method>
				</Methods>
				<ClassMethods count="8">
					<Method>,</Method>
					<Method>handles:</Method>
					<Method>messageText:</Method>
					<Method>new</Method>
					<Method>signal</Method>
					<Method>signal:</Method>
					<Method>signal:with:</Method>
					<Method>signalWith:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.EXCEPTION_RECORD" count="0" memoryUsage="0">
				<Methods count="5">
					<Method>ExceptionAddress</Method>
					<Method>ExceptionCode</Method>
					<Method>information</Method>
					<Method>moduleFileName</Method>
					<Method>NumberParameters</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>byteSize</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.ExceptionHandler" count="6" memoryUsage="240">
				<Methods count="3">
					<Method>actionFor:</Method>
					<Method>setHandler:</Method>
					<Method>setSelector:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>on:do:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.ExceptionHandlerAbstract" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>markAndTry</Method>
					<Method>outer</Method>
					<Method>return:</Method>
					<Method>try:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.ExceptionSet" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>,</Method>
					<Method>handles:</Method>
					<Method>initialize</Method>
					<Method>selectors:</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>new</Method>
					<Method>selectors:</Method>
				</ClassMethods>
			</Class>
			<Class name="External" count="0" memoryUsage="0">
				<Methods count="0">
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="External.ExternalMethod" count="116" memoryUsage="5560">
				<Methods count="8">
					<Method>argsLen</Method>
					<Method>argumentTypes</Method>
					<Method>clear</Method>
					<Method>descriptor</Method>
					<Method>descriptorClass</Method>
					<Method>descriptorLiteral</Method>
					<Method>isVirtualFunction</Method>
					<Method>returnType</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.False" count="1" memoryUsage="16">
				<Methods count="9">
					<Method>and:</Method>
					<Method>asParameter</Method>
					<Method>ifFalse:</Method>
					<Method>ifFalse:ifTrue:</Method>
					<Method>ifTrue:</Method>
					<Method>ifTrue:ifFalse:</Method>
					<Method>not</Method>
					<Method>or:</Method>
					<Method>printOn:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.File" count="0" memoryUsage="0">
				<Methods count="31">
					<Method>accessFlags</Method>
					<Method>asParameter</Method>
					<Method>atEnd</Method>
					<Method>basicFree</Method>
					<Method>close</Method>
					<Method>flags:</Method>
					<Method>flush</Method>
					<Method>free</Method>
					<Method>handle</Method>
					<Method>isReadable</Method>
					<Method>isWriteable</Method>
					<Method>name</Method>
					<Method>open</Method>
					<Method>open:flags:share:</Method>
					<Method>open:mode:check:share:</Method>
					<Method>openFlags</Method>
					<Method>position</Method>
					<Method>position:</Method>
					<Method>printOn:</Method>
					<Method>read:count:</Method>
					<Method>reset</Method>
					<Method>securityAttributes</Method>
					<Method>seek:sense:</Method>
					<Method>setHandle:flags:</Method>
					<Method>setToEnd</Method>
					<Method>shareFlags:</Method>
					<Method>signalOsError:</Method>
					<Method>size</Method>
					<Method>sniffEncoding</Method>
					<Method>spec:</Method>
					<Method>write:count:</Method>
				</Methods>
				<ClassMethods count="11">
					<Method>default:extension:</Method>
					<Method>fromHandle:</Method>
					<Method>fullPathOf:</Method>
					<Method>new</Method>
					<Method>open:</Method>
					<Method>open:mode:</Method>
					<Method>open:mode:check:</Method>
					<Method>open:mode:check:share:</Method>
					<Method>path:extension:</Method>
					<Method>removeExtension:</Method>
					<Method>splitStemFrom:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.FileException" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>isResumable</Method>
					<Method>setFile:resumable:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>on:</Method>
					<Method>on:resumable:</Method>
					<Method>signalOn:resumable:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Float" count="28" memoryUsage="672">
				<Methods count="65">
					<Method>-</Method>
					<Method>*</Method>
					<Method>/</Method>
					<Method>+</Method>
					<Method>&lt;</Method>
					<Method>&lt;=</Method>
					<Method>=</Method>
					<Method>&gt;</Method>
					<Method>&gt;=</Method>
					<Method>abs</Method>
					<Method>absPrintExactlyOn:base:</Method>
					<Method>absPrintExactlyOn:base:decimalPlaces:showTrailingFractionalZeros:</Method>
					<Method>absPrintOn:base:digitCount:decimalExponents:</Method>
					<Method>addToFloat:</Method>
					<Method>addToFraction:</Method>
					<Method>addToInteger:</Method>
					<Method>asApproximateFraction</Method>
					<Method>asFloat</Method>
					<Method>asFraction</Method>
					<Method>asTrueFraction</Method>
					<Method>bitRepresentation</Method>
					<Method>byteSize</Method>
					<Method>ceiling</Method>
					<Method>coerce:</Method>
					<Method>displayOn:</Method>
					<Method>divideIntoFloat:</Method>
					<Method>divideIntoFraction:</Method>
					<Method>divideIntoInteger:</Method>
					<Method>equalToFraction:</Method>
					<Method>equalToInteger:</Method>
					<Method>exp</Method>
					<Method>exponent</Method>
					<Method>floor</Method>
					<Method>floorLog:</Method>
					<Method>fpClass</Method>
					<Method>fractionPart</Method>
					<Method>generality</Method>
					<Method>greaterThanFraction:</Method>
					<Method>greaterThanInteger:</Method>
					<Method>hash</Method>
					<Method>isFinite</Method>
					<Method>isFloat</Method>
					<Method>isLiteral</Method>
					<Method>isNaN</Method>
					<Method>isZero</Method>
					<Method>ln</Method>
					<Method>multiplyByFloat:</Method>
					<Method>multiplyByFraction:</Method>
					<Method>multiplyByInteger:</Method>
					<Method>negated</Method>
					<Method>negative</Method>
					<Method>printOn:</Method>
					<Method>printOn:base:</Method>
					<Method>printOn:base:decimalPlaces:</Method>
					<Method>qwordAtOffset:</Method>
					<Method>raisedTo:</Method>
					<Method>reciprocalLogBase2</Method>
					<Method>rounded</Method>
					<Method>sign</Method>
					<Method>significandAsInteger</Method>
					<Method>subtractFromFloat:</Method>
					<Method>subtractFromFraction:</Method>
					<Method>subtractFromInteger:</Method>
					<Method>timesTwoPower:</Method>
					<Method>truncated</Method>
				</Methods>
				<ClassMethods count="10">
					<Method>exceptionMask:</Method>
					<Method>infinity</Method>
					<Method>nan</Method>
					<Method>negativeInfinity</Method>
					<Method>new</Method>
					<Method>one</Method>
					<Method>onStartup</Method>
					<Method>precision</Method>
					<Method>reset</Method>
					<Method>zero</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.FloatingPointException" count="0" memoryUsage="0">
				<Methods count="3">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>_ieeeRecord</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Fraction" count="0" memoryUsage="0">
				<Methods count="43">
					<Method>-</Method>
					<Method>*</Method>
					<Method>/</Method>
					<Method>//</Method>
					<Method>+</Method>
					<Method>&lt;</Method>
					<Method>=</Method>
					<Method>addToFloat:</Method>
					<Method>addToFraction:</Method>
					<Method>addToInteger:</Method>
					<Method>asFloat</Method>
					<Method>asFraction</Method>
					<Method>coerce:</Method>
					<Method>denominator</Method>
					<Method>displayOn:</Method>
					<Method>divideIntoFloat:</Method>
					<Method>divideIntoFraction:</Method>
					<Method>divideIntoInteger:</Method>
					<Method>equalToFloat:</Method>
					<Method>equalToFraction:</Method>
					<Method>equalToInteger:</Method>
					<Method>equalToScaledDecimal:</Method>
					<Method>generality</Method>
					<Method>greaterThanFloat:</Method>
					<Method>greaterThanFraction:</Method>
					<Method>greaterThanInteger:</Method>
					<Method>hash</Method>
					<Method>isLiteral</Method>
					<Method>isSelfEvaluating</Method>
					<Method>isZero</Method>
					<Method>multiplyByFloat:</Method>
					<Method>multiplyByFraction:</Method>
					<Method>multiplyByInteger:</Method>
					<Method>negated</Method>
					<Method>negative</Method>
					<Method>numerator</Method>
					<Method>numerator:denominator:</Method>
					<Method>printOn:</Method>
					<Method>reciprocal</Method>
					<Method>subtractFromFloat:</Method>
					<Method>subtractFromFraction:</Method>
					<Method>subtractFromInteger:</Method>
					<Method>truncated</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>numerator:denominator:</Method>
					<Method>rationalisedNumerator:denominator:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.FullBindingReference" count="48" memoryUsage="1920">
				<Methods count="16">
					<Method>=</Method>
					<Method>asString</Method>
					<Method>bind:</Method>
					<Method>bindingOrNil</Method>
					<Method>bindingScope</Method>
					<Method>displayOn:</Method>
					<Method>hash</Method>
					<Method>isPrivate</Method>
					<Method>isRelative</Method>
					<Method>path</Method>
					<Method>pathString</Method>
					<Method>setBinding:</Method>
					<Method>setGeneration:</Method>
					<Method>setPath:</Method>
					<Method>setPathString:</Method>
					<Method>valueOrNil</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="External.FunctionDescriptor" count="0" memoryUsage="0">
				<Methods count="14">
					<Method>argumentCount</Method>
					<Method>argumentIndexFromOffset:</Method>
					<Method>argumentsDo:</Method>
					<Method>argumentTypes</Method>
					<Method>callingConvention</Method>
					<Method>convention</Method>
					<Method>descriptor:</Method>
					<Method>literals:</Method>
					<Method>name</Method>
					<Method>name:</Method>
					<Method>printDescriptionOn:</Method>
					<Method>printOn:</Method>
					<Method>retType</Method>
					<Method>returnType</Method>
				</Methods>
				<ClassMethods count="5">
					<Method>descriptor:literals:</Method>
					<Method>isPointerToStruct:</Method>
					<Method>nameOf:type:</Method>
					<Method>nameOfConvention:</Method>
					<Method>typeHasArgument:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.GPFault" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>inaccessibleAddress</Method>
					<Method>isReading</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="External.Handle" count="9" memoryUsage="216">
				<Methods count="2">
					<Method>asExternalHandle</Method>
					<Method>handle</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.HRESULT" count="1" memoryUsage="24">
				<Methods count="11">
					<Method>asSignedInteger</Method>
					<Method>asUnsignedInteger</Method>
					<Method>displayOn:</Method>
					<Method>facility</Method>
					<Method>facilityCode</Method>
					<Method>isNtStatus</Method>
					<Method>printOn:</Method>
					<Method>statusCode</Method>
					<Method>unsignedValue:</Method>
					<Method>value</Method>
					<Method>value:</Method>
				</Methods>
				<ClassMethods count="10">
					<Method>byteSize</Method>
					<Method>decodePrimitiveFailureCode:</Method>
					<Method>fail</Method>
					<Method>fromPrimitiveFailureCode:</Method>
					<Method>fromUnsignedInteger:</Method>
					<Method>ntStatusCode:</Method>
					<Method>ok</Method>
					<Method>severity:facility:code:</Method>
					<Method>status:facility:</Method>
					<Method>win32Error:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.HRESULTError" count="0" memoryUsage="0">
				<Methods count="7">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>hasMessageText</Method>
					<Method>hresult</Method>
					<Method>messageText</Method>
					<Method>osErrorMessage</Method>
					<Method>statusCode</Method>
				</Methods>
				<ClassMethods count="5">
					<Method>fromHRESULT:</Method>
					<Method>fromInteger:</Method>
					<Method>signal:with:</Method>
					<Method>signal:withFailureCode:</Method>
					<Method>signalFailureCode:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.IdentityDictionary" count="8" memoryUsage="2544">
				<Methods count="2">
					<Method>findKeyOrNil:</Method>
					<Method>species</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.IdentitySearchPolicy" count="1" memoryUsage="16">
				<Methods count="1">
					<Method>name</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.IdentitySet" count="66" memoryUsage="2296">
				<Methods count="2">
					<Method>findElementOrNil:</Method>
					<Method>identityIncludes:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Smalltalk.ImageStripper" count="1" memoryUsage="104" unbound="true">
				<Methods count="23">
					<Method>_buildApplication</Method>
					<Method>_deploymentContext</Method>
					<Method>_finalActions</Method>
					<Method>_finishedWithAll:</Method>
					<Method>_finishedWithStripping</Method>
					<Method>_getClassInstanceStats</Method>
					<Method>_logComment:</Method>
					<Method>_logImageStats</Method>
					<Method>_logManifest</Method>
					<Method>_logRemainingClasses</Method>
					<Method>_logRemainingSharedVariables</Method>
					<Method>_logSentMessages:</Method>
					<Method>_onError:</Method>
					<Method>_onNotification:</Method>
					<Method>_removeMyClass</Method>
					<Method>_removeRedundantMethods</Method>
					<Method>_saveExecutable:keepImage:</Method>
					<Method>_shouldPreserveMethod:</Method>
					<Method>_shrinkSymbolTable</Method>
					<Method>_snapshotImage:</Method>
					<Method>developmentClasses</Method>
					<Method>ignoreViewReferences</Method>
					<Method>stripRedundantMethods</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.InputState" count="1" memoryUsage="56">
				<Methods count="39">
					<Method>aboutToForkUI</Method>
					<Method>aboutToIdle</Method>
					<Method>consoleStartup</Method>
					<Method>createAndRegisterInputSemaphore</Method>
					<Method>createAndRegisterWakeupEvent</Method>
					<Method>createPostedActionWindow</Method>
					<Method>deferredActions</Method>
					<Method>ensureIdlerRunning</Method>
					<Method>ensureMainRunning</Method>
					<Method>forkIdler</Method>
					<Method>forkMain</Method>
					<Method>hasVisibleWindows</Method>
					<Method>idle</Method>
					<Method>idleLoop</Method>
					<Method>idlePanic</Method>
					<Method>idler</Method>
					<Method>initializeFrom:</Method>
					<Method>inputSemaphore</Method>
					<Method>isInputAvailable</Method>
					<Method>isInputReady:</Method>
					<Method>keepAlive</Method>
					<Method>lookupWindow:</Method>
					<Method>loopWhile:</Method>
					<Method>main</Method>
					<Method>main:</Method>
					<Method>mainLoop</Method>
					<Method>onExit</Method>
					<Method>postQuit:</Method>
					<Method>preTranslateMessage:</Method>
					<Method>primSampleInterval:</Method>
					<Method>pumpMessage:</Method>
					<Method>queueDeferredAction:</Method>
					<Method>registerAsDispatcher</Method>
					<Method>setSamplingInterval:</Method>
					<Method>uiIdle</Method>
					<Method>userInterruptSignal</Method>
					<Method>waitForInput:</Method>
					<Method>windowAt:put:</Method>
					<Method>windows</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>newFromOld:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Integer" count="0" memoryUsage="0">
				<Methods count="63">
					<Method>//</Method>
					<Method>|</Method>
					<Method>&lt;&lt;</Method>
					<Method>addToFloat:</Method>
					<Method>addToFraction:</Method>
					<Method>allMask:</Method>
					<Method>anyBitSetFrom:to:</Method>
					<Method>anyMask:</Method>
					<Method>asExternalAddress</Method>
					<Method>asExternalHandle</Method>
					<Method>asFraction</Method>
					<Method>asInteger</Method>
					<Method>asScaledDecimal:</Method>
					<Method>bitInvert</Method>
					<Method>bitShift:</Method>
					<Method>ceiling</Method>
					<Method>coerce:</Method>
					<Method>decimalDigitLength</Method>
					<Method>digitAt:</Method>
					<Method>digitLength</Method>
					<Method>displayOn:</Method>
					<Method>displayString</Method>
					<Method>divideIntoFloat:</Method>
					<Method>divideIntoFraction:</Method>
					<Method>divideIntoInteger:</Method>
					<Method>equalToFloat:</Method>
					<Method>equalToFraction:</Method>
					<Method>equalToInteger:</Method>
					<Method>equalToScaledDecimal:</Method>
					<Method>even</Method>
					<Method>exp10</Method>
					<Method>floor</Method>
					<Method>fractionPart</Method>
					<Method>gcd:</Method>
					<Method>greaterThanFloat:</Method>
					<Method>greaterThanFraction:</Method>
					<Method>hashMultiply</Method>
					<Method>hex</Method>
					<Method>highBit</Method>
					<Method>isBitSet:</Method>
					<Method>isInteger</Method>
					<Method>isNull</Method>
					<Method>isPowerOfTwo</Method>
					<Method>isSDWORD</Method>
					<Method>lowBit</Method>
					<Method>maskSet:</Method>
					<Method>multiplyByFloat:</Method>
					<Method>multiplyByFraction:</Method>
					<Method>negated</Method>
					<Method>negative</Method>
					<Method>noMask:</Method>
					<Method>normalize</Method>
					<Method>notNull</Method>
					<Method>numberOfDigitsInBase:</Method>
					<Method>printOn:</Method>
					<Method>printOn:base:showRadix:</Method>
					<Method>printStringRadix:</Method>
					<Method>rounded</Method>
					<Method>subtractFromFloat:</Method>
					<Method>subtractFromFraction:</Method>
					<Method>timesRepeat:</Method>
					<Method>truncated</Method>
					<Method>yourAddress</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>primesUpTo:</Method>
				</ClassMethods>
			</Class>
			<Class name="External.INTEGER" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>asInteger</Method>
					<Method>asString</Method>
					<Method>hash</Method>
					<Method>isNull</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>defineTemplate</Method>
					<Method>fromInteger:</Method>
				</ClassMethods>
			</Class>
			<Class name="External.IntegerBytes" count="0" memoryUsage="0">
				<Methods count="9">
					<Method>=</Method>
					<Method>byteSize</Method>
					<Method>clear</Method>
					<Method>copyingClass</Method>
					<Method>displayOn:</Method>
					<Method>hash</Method>
					<Method>isNull</Method>
					<Method>printOn:</Method>
					<Method>value</Method>
				</Methods>
				<ClassMethods count="4">
					<Method>atAddress:</Method>
					<Method>fromAddress:</Method>
					<Method>fromInteger:</Method>
					<Method>new</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Interval" count="2" memoryUsage="64">
				<Methods count="22">
					<Method>-</Method>
					<Method>+</Method>
					<Method>=</Method>
					<Method>at:</Method>
					<Method>collect:</Method>
					<Method>copyingClass</Method>
					<Method>displayOn:</Method>
					<Method>first</Method>
					<Method>hash</Method>
					<Method>includes:</Method>
					<Method>inject:into:</Method>
					<Method>isEmpty</Method>
					<Method>isSelfEvaluating</Method>
					<Method>last</Method>
					<Method>printOn:</Method>
					<Method>setFrom:to:by:</Method>
					<Method>size</Method>
					<Method>species</Method>
					<Method>start</Method>
					<Method>step</Method>
					<Method>stop</Method>
					<Method>uncheckedFrom:to:keysAndValuesDo:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>from:to:by:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.InvalidArgumentError" count="0" memoryUsage="0">
				<Methods count="1">
					<Method>_descriptionFormat</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="External.InvalidExternalCall" count="0" memoryUsage="0">
				<Methods count="5">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>argument:</Method>
					<Method>hresult</Method>
					<Method>type:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>invalidArgument:got:expected:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.InvariantLocale" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>basicLcid</Method>
					<Method>name</Method>
					<Method>primary</Method>
					<Method>printOn:</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>current</Method>
					<Method>reset</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel" count="0" memoryUsage="0">
				<Methods count="0">
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.KernelLibrary" count="1" memoryUsage="24">
				<Methods count="50">
					<Method>allocConsole</Method>
					<Method>beginUpdateResource:bDeleteExistingResources:</Method>
					<Method>close</Method>
					<Method>closeHandle:</Method>
					<Method>compareString:dwCmpFlags:lpString1:cchCount1:lpString2:cchCount2:</Method>
					<Method>compareStringOrdinal:cchCount1:lpString2:cchCount2:bIgnoreCase:</Method>
					<Method>createEvent:bManualReset:bInitialState:lpName:</Method>
					<Method>createFile:dwDesiredAccess:dwSharedMode:lpSecurityAttributes:dwCreationDistribution:dwFlagsAndAttributes:hTemplateFile:</Method>
					<Method>createMutex:bInitialOwner:lpName:</Method>
					<Method>deleteFile:</Method>
					<Method>duplicateHandle:hSourceHandle:hTargetProcessHandle:lpTargetHandle:dwDesiredAccess:bInheritHandle:dwOptions:</Method>
					<Method>endUpdateResource:fDiscard:</Method>
					<Method>flushFileBuffers:</Method>
					<Method>formatMessage:lpSource:dwMessageId:dwLanguageId:lpBuffer:nSize:arguments:</Method>
					<Method>formatMessage:source:flags:withArguments:</Method>
					<Method>freeConsole</Method>
					<Method>freeLibrary:</Method>
					<Method>getCurrentProcess</Method>
					<Method>getFileSizeEx:lpFileSize:</Method>
					<Method>getFileType:</Method>
					<Method>getFullPathName:nBufferLength:lpBuffer:lpFilePart:</Method>
					<Method>getLastError</Method>
					<Method>getLocaleInfo:lCType:lpLCData:cchData:</Method>
					<Method>getModuleFileName:lpFilename:nSize:</Method>
					<Method>getModuleHandle:</Method>
					<Method>getNumberFormat:dwFlags:lpValue:lpFormat:lpNumberStr:cchNumber:</Method>
					<Method>getProcAddress:lpProcName:</Method>
					<Method>getProcessHeap</Method>
					<Method>getStringType:lpSrcStr:cchSrc:lpCharType:</Method>
					<Method>getThreadUILanguage</Method>
					<Method>heapFree:dwFlags:lpMem:</Method>
					<Method>inputQueueMask</Method>
					<Method>isWindows8OrGreater</Method>
					<Method>isWindowsVersionOrGreater:wMinorVersion:wServicePackMajor:</Method>
					<Method>lcMapString:dwMapFlags:lpScrStr:cchSrc:lpDestStr:cchDest:</Method>
					<Method>loadLibraryEx:hFile:dwFlags:</Method>
					<Method>localeNameToLCID:dwFlags:</Method>
					<Method>outputDebugString:</Method>
					<Method>overlappedSleepEx:bAlertable:</Method>
					<Method>readFile:lpBuffer:nNumberOfBytesToRead:lpNumberOfBytesRead:lpOverlapped:</Method>
					<Method>setConsoleCtrlHandler:add:</Method>
					<Method>setFilePointerEx:liDistanceToMove:lpNewFilePointer:dwMoveMethod:</Method>
					<Method>setLastError:</Method>
					<Method>updateResource:lpType:lpName:wLanguage:lpData:cbData:</Method>
					<Method>updateResourcesOf:do:</Method>
					<Method>verifyVersionInfo:dwTypeMask:dwlConditionMask:</Method>
					<Method>verSetConditionMask:typeMask:condition:</Method>
					<Method>virtualQuery:lpBuffer:dwLength:</Method>
					<Method>wideCharToMultiByte:dwFlags:lpWideCharStr:cchWideChar:lpMultiByteStr:cchMultiByte:lpDefaultChar:lpUsedDefaultChar:</Method>
					<Method>writeFile:lpBuffer:nNumberOfBytesToWrite:lpNumberOfBytesWritten:lpOverlapped:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>fileName</Method>
					<Method>open</Method>
					<Method>sharedVariableName</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.LargeInteger" count="77" memoryUsage="1856">
				<Methods count="43">
					<Method>-</Method>
					<Method>*</Method>
					<Method>/</Method>
					<Method>//</Method>
					<Method>\\</Method>
					<Method>+</Method>
					<Method>&lt;</Method>
					<Method>&lt;=</Method>
					<Method>=</Method>
					<Method>&gt;</Method>
					<Method>&gt;=</Method>
					<Method>addToInteger:</Method>
					<Method>asByteArray</Method>
					<Method>asFloat</Method>
					<Method>bitAnd:</Method>
					<Method>bitInvert</Method>
					<Method>bitOr:</Method>
					<Method>bitShift:</Method>
					<Method>bitXor:</Method>
					<Method>byteAt:</Method>
					<Method>byteSize</Method>
					<Method>digitAt:</Method>
					<Method>digitLength</Method>
					<Method>dwordAtOffset:</Method>
					<Method>dwordAtOffset:put:</Method>
					<Method>gcd:</Method>
					<Method>generality</Method>
					<Method>greaterThanInteger:</Method>
					<Method>hash</Method>
					<Method>highBit</Method>
					<Method>isZero</Method>
					<Method>multiplyByInteger:</Method>
					<Method>negated</Method>
					<Method>normalize</Method>
					<Method>printOn:base:</Method>
					<Method>printOn:base:nDigits:</Method>
					<Method>quo:</Method>
					<Method>quotientFromInteger:</Method>
					<Method>reciprocal</Method>
					<Method>replaceBytesOf:from:to:startingAt:</Method>
					<Method>sdwordAtOffset:</Method>
					<Method>signBit</Method>
					<Method>subtractFromInteger:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>fromBytes:</Method>
					<Method>fromSmallInteger:</Method>
					<Method>new:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.LimitedWriteStream" count="0" memoryUsage="0">
				<Methods count="20">
					<Method>alreadyVisited:</Method>
					<Method>atEnd</Method>
					<Method>contents</Method>
					<Method>contentsSpecies</Method>
					<Method>encodedSizeOf:</Method>
					<Method>isWriteable</Method>
					<Method>locale</Method>
					<Method>locale:</Method>
					<Method>moveToEnd</Method>
					<Method>next:put:</Method>
					<Method>nextPut:</Method>
					<Method>nextPutAll:</Method>
					<Method>peekFor:</Method>
					<Method>position</Method>
					<Method>position:</Method>
					<Method>reset</Method>
					<Method>setStream:limit:limitBlock:</Method>
					<Method>setToEnd</Method>
					<Method>visit:do:</Method>
					<Method>visitedBlock</Method>
				</Methods>
				<ClassMethods count="7">
					<Method>defaultLimit</Method>
					<Method>defaultLimitBlock</Method>
					<Method>on:</Method>
					<Method>on:limit:</Method>
					<Method>on:limit:limitBlock:</Method>
					<Method>over:limit:limitBlock:</Method>
					<Method>with:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Link" count="0" memoryUsage="0">
				<Methods count="2">
					<Method>nextLink</Method>
					<Method>nextLink:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>nextLink:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.LinkedList" count="10" memoryUsage="240">
				<Methods count="7">
					<Method>addLast:</Method>
					<Method>at:</Method>
					<Method>do:</Method>
					<Method>isEmpty</Method>
					<Method>remove:ifAbsent:</Method>
					<Method>removeAtIndex:</Method>
					<Method>removeFirstIfAbsent:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Locale" count="0" memoryUsage="0">
				<Methods count="16">
					<Method>=</Method>
					<Method>displayFloat:on:</Method>
					<Method>displayInteger:on:</Method>
					<Method>getNumberFormat</Method>
					<Method>hash</Method>
					<Method>isSelfEvaluating</Method>
					<Method>languageId</Method>
					<Method>lcid</Method>
					<Method>mapString:flags:</Method>
					<Method>mapUppercaseFlags</Method>
					<Method>noUserOverrides</Method>
					<Method>numberFormat</Method>
					<Method>numberFormat:</Method>
					<Method>printFloat:format:lcid:</Method>
					<Method>printFloat:on:format:</Method>
					<Method>uppercaseString:</Method>
				</Methods>
				<ClassMethods count="11">
					<Method>default</Method>
					<Method>invariant</Method>
					<Method>lcid:</Method>
					<Method>named:</Method>
					<Method>named:withOverrides:</Method>
					<Method>onStartup</Method>
					<Method>reset</Method>
					<Method>smalltalk</Method>
					<Method>uiDefault</Method>
					<Method>userDefault</Method>
					<Method>userDefault:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.LookupTable" count="4" memoryUsage="296">
				<Methods count="25">
					<Method>add:</Method>
					<Method>allSatisfy:</Method>
					<Method>anySatisfy:</Method>
					<Method>associationAt:ifAbsent:</Method>
					<Method>associationsDo:</Method>
					<Method>at:ifAbsent:</Method>
					<Method>at:put:</Method>
					<Method>basicValues</Method>
					<Method>copyElementsInto:</Method>
					<Method>do:</Method>
					<Method>findElementOrNil:</Method>
					<Method>findKeyOrNil:</Method>
					<Method>identityIncludes:</Method>
					<Method>initialize</Method>
					<Method>isImmutable:</Method>
					<Method>keysAndValuesDo:</Method>
					<Method>lookup:</Method>
					<Method>moveFrom:to:</Method>
					<Method>postCopy</Method>
					<Method>removeKey:ifAbsent:</Method>
					<Method>select:</Method>
					<Method>species</Method>
					<Method>uncheckedAdd:</Method>
					<Method>uncheckedAt:put:</Method>
					<Method>valuesClass</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="External.LPVOID" count="0" memoryUsage="0">
				<Methods count="3">
					<Method>asExternalAddress</Method>
					<Method>value</Method>
					<Method>value:</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>byteSize</Method>
					<Method>new</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Magnitude" count="0" memoryUsage="0">
				<Methods count="9">
					<Method>&lt;=</Method>
					<Method>&lt;=&gt;</Method>
					<Method>&gt;</Method>
					<Method>&gt;=</Method>
					<Method>between:and:</Method>
					<Method>isNaN</Method>
					<Method>max:</Method>
					<Method>min:</Method>
					<Method>printString</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.MemoryManager" count="1" memoryUsage="72">
				<Methods count="28">
					<Method>aboutToIdle</Method>
					<Method>administerLastRites</Method>
					<Method>bereavedOverflow:</Method>
					<Method>collectGarbage</Method>
					<Method>compact</Method>
					<Method>dequeueBereavementInto:</Method>
					<Method>dequeueForFinalization</Method>
					<Method>directFunerals</Method>
					<Method>ensureProcessesRunning</Method>
					<Method>finalizerMain</Method>
					<Method>finalizerPriority</Method>
					<Method>forkFinalizer</Method>
					<Method>forkUndertaker</Method>
					<Method>gcInterval</Method>
					<Method>getEvents</Method>
					<Method>hospiceOverflow:</Method>
					<Method>millisecondClock</Method>
					<Method>minGCInterval</Method>
					<Method>objectCount</Method>
					<Method>onPreSaveImage</Method>
					<Method>onStartup</Method>
					<Method>otOverflow:</Method>
					<Method>primCollectGarbage:</Method>
					<Method>primCompact</Method>
					<Method>primInstanceStats:</Method>
					<Method>registerObjects</Method>
					<Method>resetGCStats</Method>
					<Method>undertakerMain</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>current</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Message" count="0" memoryUsage="0">
				<Methods count="17">
					<Method>=</Method>
					<Method>argumentCount</Method>
					<Method>arguments</Method>
					<Method>asSymbol</Method>
					<Method>forwardTo:</Method>
					<Method>forwardTo:with:</Method>
					<Method>forwardTo:withArguments:</Method>
					<Method>hash</Method>
					<Method>isSelfEvaluating</Method>
					<Method>messages</Method>
					<Method>numArgs</Method>
					<Method>printOn:</Method>
					<Method>selector</Method>
					<Method>setSelector:arguments:</Method>
					<Method>value:</Method>
					<Method>value:value:</Method>
					<Method>valueWithArguments:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>selector:arguments:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.MessageNotUnderstood" count="0" memoryUsage="0">
				<Methods count="7">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>isResumable</Method>
					<Method>message</Method>
					<Method>receiver</Method>
					<Method>receiver:</Method>
					<Method>selector</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>receiver:message:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.MessageSend" count="0" memoryUsage="0">
				<Methods count="5">
					<Method>forwardTo:withArguments:</Method>
					<Method>isSelfEvaluating</Method>
					<Method>printOn:</Method>
					<Method>receiver</Method>
					<Method>receiver:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>empty</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.MessageSendAbstract" count="0" memoryUsage="0">
				<Methods count="9">
					<Method>=</Method>
					<Method>cull:</Method>
					<Method>forwardTo:</Method>
					<Method>hash</Method>
					<Method>printOn:</Method>
					<Method>value</Method>
					<Method>value:</Method>
					<Method>value:value:</Method>
					<Method>valueWithArguments:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>receiver:selector:</Method>
					<Method>receiver:selector:arguments:</Method>
					<Method>selector:arguments:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Metaclass" count="170" memoryUsage="8160">
				<Methods count="18">
					<Method>basicEnvironment</Method>
					<Method>bindingFor:</Method>
					<Method>classPool</Method>
					<Method>environment</Method>
					<Method>fullBindingFor:environment:</Method>
					<Method>fullName</Method>
					<Method>imports</Method>
					<Method>instanceClass</Method>
					<Method>isMeta</Method>
					<Method>localBindingFor:</Method>
					<Method>name</Method>
					<Method>new</Method>
					<Method>printFullNameOn:</Method>
					<Method>printOn:</Method>
					<Method>removeFromSuper</Method>
					<Method>shortName</Method>
					<Method>subclassesDo:</Method>
					<Method>unqualifiedName</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.MethodAnnotations" count="2" memoryUsage="48">
				<Methods count="11">
					<Method>=</Method>
					<Method>at:</Method>
					<Method>basicNextIdentityIndexOf:from:to:</Method>
					<Method>copyingClass</Method>
					<Method>displayOn:</Method>
					<Method>do:</Method>
					<Method>environment</Method>
					<Method>first</Method>
					<Method>printOn:</Method>
					<Method>size</Method>
					<Method>uncheckedFrom:to:keysAndValuesDo:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.MethodDictionary" count="298" memoryUsage="28472">
				<Methods count="3">
					<Method>findKeyOrNil:</Method>
					<Method>privateAt:put:</Method>
					<Method>removeKey:ifAbsent:</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>defaultCapacity</Method>
					<Method>sizeFor:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.MourningWeakArray" count="1" memoryUsage="32">
				<Methods count="4">
					<Method>elementsExpired:</Method>
					<Method>initialize</Method>
					<Method>pathologist</Method>
					<Method>pathologist:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>elementsExpired:of:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.MSG" count="1" memoryUsage="24">
				<Methods count="3">
					<Method>hwnd</Method>
					<Method>message</Method>
					<Method>swParam</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>byteSize</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Mutex" count="1" memoryUsage="24">
				<Methods count="4">
					<Method>critical:</Method>
					<Method>initialize</Method>
					<Method>printOn:</Method>
					<Method>signal</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>new</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.Namespace" count="0" memoryUsage="0">
				<Methods count="0">
				</Methods>
				<ClassMethods count="29">
					<Method>add:</Method>
					<Method>addAll:</Method>
					<Method>addNewElement:</Method>
					<Method>allSatisfy:</Method>
					<Method>anySatisfy:</Method>
					<Method>asArray</Method>
					<Method>associationAt:ifAbsent:</Method>
					<Method>associationsDo:</Method>
					<Method>at:</Method>
					<Method>at:ifAbsent:</Method>
					<Method>at:put:</Method>
					<Method>baseEnvironment</Method>
					<Method>collect:</Method>
					<Method>do:</Method>
					<Method>do:separatedBy:</Method>
					<Method>errorNonInstantiable</Method>
					<Method>hierarchyBindingFor:</Method>
					<Method>includes:</Method>
					<Method>includesKey:</Method>
					<Method>inject:into:</Method>
					<Method>isEmpty</Method>
					<Method>keysAndValuesDo:</Method>
					<Method>lookup:</Method>
					<Method>notEmpty</Method>
					<Method>rehash</Method>
					<Method>reject:</Method>
					<Method>removeKey:ifAbsent:</Method>
					<Method>select:</Method>
					<Method>size</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.NeverSearchPolicy" count="1" memoryUsage="16">
				<Methods count="1">
					<Method>name</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.NotFoundError" count="0" memoryUsage="0">
				<Methods count="3">
					<Method>_descriptionFormat</Method>
					<Method>receiver</Method>
					<Method>receiver:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Notification" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>defaultAction</Method>
					<Method>hresult</Method>
					<Method>initialize</Method>
					<Method>isResumable</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.NTLibrary" count="1" memoryUsage="24">
				<Methods count="2">
					<Method>initialize</Method>
					<Method>wineGetVersion</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>fileName</Method>
					<Method>sharedVariableName</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.NullEventsCollection" count="1" memoryUsage="16">
				<Methods count="3">
					<Method>shrink</Method>
					<Method>triggerEvent:</Method>
					<Method>triggerEvent:with:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>current</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Number" count="0" memoryUsage="0">
				<Methods count="21">
					<Method>asInteger</Method>
					<Method>asScaledDecimal:</Method>
					<Method>asTrueFraction</Method>
					<Method>copy</Method>
					<Method>denominator</Method>
					<Method>divideByZero</Method>
					<Method>even</Method>
					<Method>exp</Method>
					<Method>floorLog:</Method>
					<Method>fractionPart</Method>
					<Method>isFloat</Method>
					<Method>isLiteral</Method>
					<Method>ln</Method>
					<Method>log:</Method>
					<Method>numerator</Method>
					<Method>odd</Method>
					<Method>raisedTo:</Method>
					<Method>to:</Method>
					<Method>to:by:</Method>
					<Method>to:by:do:</Method>
					<Method>to:do:</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>one</Method>
					<Method>zero</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.NUMBERFMTW" count="0" memoryUsage="0">
				<Methods count="27">
					<Method>decimalPlaces</Method>
					<Method>decimalPlaces:</Method>
					<Method>decimalSeparator</Method>
					<Method>decimalSeparator:</Method>
					<Method>Grouping</Method>
					<Method>Grouping:</Method>
					<Method>grouping:</Method>
					<Method>groupSeparator</Method>
					<Method>groupSeparator:</Method>
					<Method>hasLeadingZero</Method>
					<Method>hasLeadingZero:</Method>
					<Method>LeadingZero</Method>
					<Method>LeadingZero:</Method>
					<Method>lpDecimalSep</Method>
					<Method>lpDecimalSep:</Method>
					<Method>lpThousandSep</Method>
					<Method>lpThousandSep:</Method>
					<Method>negativeNumberMode</Method>
					<Method>negativeNumberMode:</Method>
					<Method>NegativeOrder</Method>
					<Method>NegativeOrder:</Method>
					<Method>numberGrouping</Method>
					<Method>numberGrouping:</Method>
					<Method>NumDigits</Method>
					<Method>NumDigits:</Method>
					<Method>thousandSeparator</Method>
					<Method>thousandSeparator:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>byteSize</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Object" count="3" memoryUsage="48">
				<Methods count="94">
					<Method>??</Method>
					<Method>_deepCopy:</Method>
					<Method>_deepenShallowCopy:trail:</Method>
					<Method>_primitiveError:at:</Method>
					<Method>_primitiveError:at:put:</Method>
					<Method>~~</Method>
					<Method>~=</Method>
					<Method>=</Method>
					<Method>==</Method>
					<Method>-&gt;</Method>
					<Method>allReferences</Method>
					<Method>allReferences:</Method>
					<Method>appendToStream:</Method>
					<Method>asParameter</Method>
					<Method>at:</Method>
					<Method>at:put:</Method>
					<Method>basicAt:</Method>
					<Method>basicAt:put:</Method>
					<Method>basicClass</Method>
					<Method>basicIdentityHash</Method>
					<Method>basicIdentityIndexOf:from:to:</Method>
					<Method>basicPrintOn:</Method>
					<Method>basicPrintString</Method>
					<Method>basicResize:</Method>
					<Method>basicShallowCopy</Method>
					<Method>basicSize</Method>
					<Method>basicYourAddress</Method>
					<Method>become:</Method>
					<Method>becomeA:</Method>
					<Method>beFinalizable</Method>
					<Method>beStrong</Method>
					<Method>beUnfinalizable</Method>
					<Method>beWeak</Method>
					<Method>byteSize</Method>
					<Method>class</Method>
					<Method>copy</Method>
					<Method>displayOn:</Method>
					<Method>displayString</Method>
					<Method>displayStringLimitedTo:locale:</Method>
					<Method>doesNotUnderstand:</Method>
					<Method>error:</Method>
					<Method>errorCantHold:</Method>
					<Method>errorNotFound:</Method>
					<Method>errorSubscriptBounds:</Method>
					<Method>events</Method>
					<Method>expandMacrosIn:</Method>
					<Method>finalize</Method>
					<Method>free</Method>
					<Method>getEvents</Method>
					<Method>getSpecialBehavior</Method>
					<Method>hash</Method>
					<Method>identityHash</Method>
					<Method>ifNil:</Method>
					<Method>ifNil:ifNotNil:</Method>
					<Method>ifNotNil:</Method>
					<Method>initialize</Method>
					<Method>instVarAt:</Method>
					<Method>instVarAt:put:</Method>
					<Method>isCharacter</Method>
					<Method>isImmediate</Method>
					<Method>isImmutable</Method>
					<Method>isImmutable:</Method>
					<Method>isInteger</Method>
					<Method>isKindOf:</Method>
					<Method>isLiteral</Method>
					<Method>isLiteral:</Method>
					<Method>isNil</Method>
					<Method>isSelfEvaluating</Method>
					<Method>isSelfEvaluating:</Method>
					<Method>isString</Method>
					<Method>mustBeBoolean</Method>
					<Method>notNil</Method>
					<Method>perform:</Method>
					<Method>perform:with:</Method>
					<Method>perform:with:with:</Method>
					<Method>perform:with:with:with:</Method>
					<Method>perform:withArguments:</Method>
					<Method>postCopy</Method>
					<Method>primitiveFailed:</Method>
					<Method>printOn:</Method>
					<Method>printString</Method>
					<Method>printStringLimitedTo:</Method>
					<Method>resize:</Method>
					<Method>respondsTo:</Method>
					<Method>setSpecialBehavior:</Method>
					<Method>shallowCopy</Method>
					<Method>size</Method>
					<Method>species</Method>
					<Method>trigger:</Method>
					<Method>trigger:with:</Method>
					<Method>understandsArithmetic</Method>
					<Method>value</Method>
					<Method>yourAddress</Method>
					<Method>yourself</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.OrderedCollection" count="3" memoryUsage="176">
				<Methods count="33">
					<Method>addAllLast:</Method>
					<Method>addAnsweringIndex:</Method>
					<Method>addLast:</Method>
					<Method>allSatisfy:</Method>
					<Method>anySatisfy:</Method>
					<Method>at:</Method>
					<Method>at:ifAbsent:</Method>
					<Method>at:put:</Method>
					<Method>basicAddAll:</Method>
					<Method>basicReplaceElementsOf:from:to:startingAt:</Method>
					<Method>copyWith:</Method>
					<Method>copyWithoutIndex:</Method>
					<Method>do:</Method>
					<Method>do:separatedBy:</Method>
					<Method>first</Method>
					<Method>firstIndex:lastIndex:</Method>
					<Method>includes:</Method>
					<Method>initialize</Method>
					<Method>inject:into:</Method>
					<Method>isEmpty</Method>
					<Method>last</Method>
					<Method>lookup:</Method>
					<Method>makeRoomAtEndFor:</Method>
					<Method>nextIdentityIndexOf:from:to:</Method>
					<Method>nextIndexOf:from:to:</Method>
					<Method>removeAtIndex:</Method>
					<Method>replaceElementsOf:from:to:startingAt:</Method>
					<Method>replaceFrom:to:with:startingAt:</Method>
					<Method>resize:</Method>
					<Method>select:</Method>
					<Method>size</Method>
					<Method>sortUsing:</Method>
					<Method>uncheckedFrom:to:keysAndValuesDo:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>new</Method>
					<Method>new:</Method>
					<Method>ofSize:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS" count="0" memoryUsage="0">
				<Methods count="0">
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.OSVERSIONINFOEXW" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>dwMajorVersion:</Method>
					<Method>dwMinorVersion:</Method>
					<Method>dwSize:</Method>
					<Method>wServicePackMajor:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>byteSize</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.OutOfMemoryError" count="0" memoryUsage="0">
				<Methods count="1">
					<Method>initialize</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="External.PermanentLibrary" count="0" memoryUsage="0">
				<Methods count="2">
					<Method>close</Method>
					<Method>isSelfEvaluating</Method>
				</Methods>
				<ClassMethods count="5">
					<Method>clear</Method>
					<Method>closeDefault</Method>
					<Method>default</Method>
					<Method>onStartup</Method>
					<Method>onStartup2</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.PositionableStream" count="0" memoryUsage="0">
				<Methods count="21">
					<Method>advancePosition</Method>
					<Method>atEnd</Method>
					<Method>basicNext:</Method>
					<Method>basicNextAvailable</Method>
					<Method>basicNextAvailable:</Method>
					<Method>basicUpTo:</Method>
					<Method>contents</Method>
					<Method>contentsSpecies</Method>
					<Method>encodedSizeOf:</Method>
					<Method>lastPosition</Method>
					<Method>locale</Method>
					<Method>locale:</Method>
					<Method>on:</Method>
					<Method>position</Method>
					<Method>position:</Method>
					<Method>positionAfterNext:</Method>
					<Method>reset</Method>
					<Method>setToEnd</Method>
					<Method>size</Method>
					<Method>upTo:</Method>
					<Method>upToEnd</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>on:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.PostedActionWindow" count="1" memoryUsage="24">
				<Methods count="6">
					<Method>asParameter</Method>
					<Method>evaluateNextAction</Method>
					<Method>evaluatePendingActions</Method>
					<Method>handle:</Method>
					<Method>onStartup</Method>
					<Method>preTranslateMessage:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Process" count="4" memoryUsage="2424">
				<Methods count="46">
					<Method>at:ifAbsent:</Method>
					<Method>at:put:</Method>
					<Method>basicAt:put:</Method>
					<Method>basicSuspendedFrame</Method>
					<Method>callbackDepth</Method>
					<Method>errno</Method>
					<Method>exceptionEnvironment</Method>
					<Method>exceptionEnvironment:</Method>
					<Method>finalize</Method>
					<Method>fpControl</Method>
					<Method>frameAtAddress:</Method>
					<Method>frameAtIndex:</Method>
					<Method>frameClass</Method>
					<Method>id</Method>
					<Method>indexOfSP:</Method>
					<Method>interruptWith:</Method>
					<Method>isActive</Method>
					<Method>isAlive</Method>
					<Method>isAlive:</Method>
					<Method>isDead</Method>
					<Method>isDebuggee</Method>
					<Method>isInCallback</Method>
					<Method>isReady</Method>
					<Method>kill</Method>
					<Method>name</Method>
					<Method>name:</Method>
					<Method>primTerminate</Method>
					<Method>printOn:</Method>
					<Method>priority</Method>
					<Method>priority:</Method>
					<Method>queueInterrupt:</Method>
					<Method>queueInterrupt:with:</Method>
					<Method>resetFloatingPoint</Method>
					<Method>resume</Method>
					<Method>resume:</Method>
					<Method>setFpControl:mask:</Method>
					<Method>setLaunchBlock:</Method>
					<Method>shutdown</Method>
					<Method>size</Method>
					<Method>spOfIndex:</Method>
					<Method>state</Method>
					<Method>suspendedFrame</Method>
					<Method>suspendedFrame:</Method>
					<Method>suspendingList</Method>
					<Method>terminate</Method>
					<Method>topFrame</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>forContext:priority:maxStack:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.ProcessorScheduler" count="1" memoryUsage="40">
				<Methods count="54">
					<Method>activePriority</Method>
					<Method>activeProcess</Method>
					<Method>bereavedOverflow:</Method>
					<Method>callback:evaluate:</Method>
					<Method>callback:perform:cookie:</Method>
					<Method>callback:perform:with:cookie:</Method>
					<Method>callback:perform:with:with:cookie:</Method>
					<Method>callback:perform:with:with:with:cookie:</Method>
					<Method>callback:perform:withArguments:cookie:</Method>
					<Method>callback:return:</Method>
					<Method>cannotReturn:</Method>
					<Method>constWrite:</Method>
					<Method>constWriteSignal</Method>
					<Method>crtFault:</Method>
					<Method>enableAsyncEvents:</Method>
					<Method>enableInterrupts</Method>
					<Method>forkMain</Method>
					<Method>fpException:</Method>
					<Method>fpStackFault:</Method>
					<Method>genericInterrupt</Method>
					<Method>gpFault:</Method>
					<Method>highIOPriority</Method>
					<Method>hospiceOverflow:</Method>
					<Method>idlePanic:</Method>
					<Method>interruptWith:</Method>
					<Method>iret:list:</Method>
					<Method>kill:</Method>
					<Method>killInterrupt</Method>
					<Method>lowIOPriority</Method>
					<Method>noMemory:</Method>
					<Method>onStartup:</Method>
					<Method>otOverflow:</Method>
					<Method>primReturn:callback:</Method>
					<Method>primUnwindCallback:</Method>
					<Method>primUnwindInterrupt</Method>
					<Method>returnValue:toFrame:</Method>
					<Method>stackOverflow:</Method>
					<Method>systemBackgroundPriority</Method>
					<Method>systemBasePriority</Method>
					<Method>systemProcessOwner</Method>
					<Method>terminate:</Method>
					<Method>terminateActive</Method>
					<Method>terminateInterrupt</Method>
					<Method>timingPriority</Method>
					<Method>unusedInterrupt:</Method>
					<Method>unwindCallback:</Method>
					<Method>unwindCallbacks</Method>
					<Method>userBreak:</Method>
					<Method>userBreakInterrupt</Method>
					<Method>userSchedulingPriority</Method>
					<Method>vmi:list:no:with:</Method>
					<Method>win32Fault:</Method>
					<Method>yield</Method>
					<Method>zeroDivide:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>initializeInterruptSelectors</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.ProcessTermination" count="0" memoryUsage="0">
				<Methods count="2">
					<Method>_descriptionFormat</Method>
					<Method>defaultAction</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.ProtoObject" count="0" memoryUsage="0">
				<Methods count="15">
					<Method>~~</Method>
					<Method>==</Method>
					<Method>allReferences</Method>
					<Method>basicClass</Method>
					<Method>basicIdentityHash</Method>
					<Method>basicPrintOn:</Method>
					<Method>basicPrintString</Method>
					<Method>basicSize</Method>
					<Method>become:</Method>
					<Method>doesNotUnderstand:</Method>
					<Method>error:</Method>
					<Method>identityHash</Method>
					<Method>instVarAt:</Method>
					<Method>isKindOf:</Method>
					<Method>primitiveFailed:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.RaisedSignal" count="0" memoryUsage="0">
				<Methods count="6">
					<Method>_descriptionFormat</Method>
					<Method>defaultAction</Method>
					<Method>isResumable</Method>
					<Method>messageText</Method>
					<Method>signalType</Method>
					<Method>signalType:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.ReadStream" count="1" memoryUsage="32">
				<Methods count="7">
					<Method>basicNext</Method>
					<Method>basicNext:into:startingAt:</Method>
					<Method>basicNextAvailable</Method>
					<Method>isReadable</Method>
					<Method>next</Method>
					<Method>nextAvailable</Method>
					<Method>readStream</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.RelativeBindingReference" count="10" memoryUsage="400">
				<Methods count="6">
					<Method>=</Method>
					<Method>asString</Method>
					<Method>bindingScope</Method>
					<Method>displayOn:</Method>
					<Method>hash</Method>
					<Method>isRelative</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Root" count="0" memoryUsage="0">
				<Methods count="0">
				</Methods>
				<ClassMethods count="3">
					<Method>bindingFor:</Method>
					<Method>environment</Method>
					<Method>fullNameFor:</Method>
				</ClassMethods>
			</Class>
			<Class name="External.SCALAR" count="0" memoryUsage="0">
				<Methods count="2">
					<Method>=</Method>
					<Method>displayOn:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>byteSize</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.ScaledDecimal" count="0" memoryUsage="0">
				<Methods count="34">
					<Method>-</Method>
					<Method>*</Method>
					<Method>/</Method>
					<Method>//</Method>
					<Method>+</Method>
					<Method>&lt;</Method>
					<Method>=</Method>
					<Method>addToScaledDecimal:</Method>
					<Method>asFloat</Method>
					<Method>asFraction</Method>
					<Method>asScaledDecimal:</Method>
					<Method>coerce:</Method>
					<Method>denominator</Method>
					<Method>displayOn:</Method>
					<Method>divideIntoScaledDecimal:</Method>
					<Method>equalToInteger:</Method>
					<Method>equalToScaledDecimal:</Method>
					<Method>fractionPart</Method>
					<Method>generality</Method>
					<Method>greaterThanScaledDecimal:</Method>
					<Method>hash</Method>
					<Method>isLiteral</Method>
					<Method>isZero</Method>
					<Method>multiplyByScaledDecimal:</Method>
					<Method>negated</Method>
					<Method>numerator</Method>
					<Method>printOn:</Method>
					<Method>raisedToInteger:</Method>
					<Method>reciprocal</Method>
					<Method>scale</Method>
					<Method>setFraction:scale:</Method>
					<Method>subtractFromInteger:</Method>
					<Method>subtractFromScaledDecimal:</Method>
					<Method>truncated</Method>
				</Methods>
				<ClassMethods count="4">
					<Method>basicNewFromFraction:scale:</Method>
					<Method>newFromNumber:scale:</Method>
					<Method>one</Method>
					<Method>zero</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.SearchPolicy" count="0" memoryUsage="0">
				<Methods count="2">
					<Method>isSelfEvaluating</Method>
					<Method>printOn:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.Semaphore" count="12" memoryUsage="384">
				<Methods count="14">
					<Method>=</Method>
					<Method>critical:</Method>
					<Method>excessSignals</Method>
					<Method>excessSignals:</Method>
					<Method>hash</Method>
					<Method>initialize</Method>
					<Method>primSetSignals:</Method>
					<Method>printOn:</Method>
					<Method>reset</Method>
					<Method>set</Method>
					<Method>signal</Method>
					<Method>wait</Method>
					<Method>wait:</Method>
					<Method>wait:ret:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>boolean</Method>
					<Method>forMutualExclusion</Method>
					<Method>new</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.SequenceableCollection" count="0" memoryUsage="0">
				<Methods count="54">
					<Method>,</Method>
					<Method>=</Method>
					<Method>appendToStream:</Method>
					<Method>asArray</Method>
					<Method>asString</Method>
					<Method>at:ifAbsent:</Method>
					<Method>atAllPut:</Method>
					<Method>basicBeginsWith:</Method>
					<Method>basicIndexOfSubCollection:startingAt:</Method>
					<Method>beginsWith:</Method>
					<Method>collect:</Method>
					<Method>copyFrom:</Method>
					<Method>copyFrom:to:</Method>
					<Method>copyLikeOfSize:</Method>
					<Method>copyReplacing:withObject:</Method>
					<Method>copyWith:</Method>
					<Method>copyWithoutIndex:</Method>
					<Method>decodeAt:</Method>
					<Method>decodeFrom:upTo:</Method>
					<Method>decodeNextFrom:</Method>
					<Method>do:</Method>
					<Method>encodedAt:put:</Method>
					<Method>encodedSizeOf:</Method>
					<Method>encodeOn:next:putAll:startingAt:</Method>
					<Method>encodeOn:put:</Method>
					<Method>encoding</Method>
					<Method>expandMacrosIn:</Method>
					<Method>first</Method>
					<Method>from:keysAndValuesDo:</Method>
					<Method>from:to:keysAndValuesDo:</Method>
					<Method>from:to:put:</Method>
					<Method>grow</Method>
					<Method>hash</Method>
					<Method>identityIndexOf:</Method>
					<Method>includesKey:</Method>
					<Method>indexOf:</Method>
					<Method>indexOf:ifAbsent:</Method>
					<Method>indexOfAnyOf:startingAt:</Method>
					<Method>keysAndValuesDo:</Method>
					<Method>last</Method>
					<Method>lookup:</Method>
					<Method>maxEncoding</Method>
					<Method>nextIdentityIndexOf:from:to:</Method>
					<Method>nextIndexOf:from:to:</Method>
					<Method>readStream</Method>
					<Method>replaceBytesOf:from:to:startingAt:</Method>
					<Method>replaceElementsOf:from:to:startingAt:</Method>
					<Method>replaceFrom:to:with:startingAt:</Method>
					<Method>replaceFrom:to:withObject:</Method>
					<Method>resize:</Method>
					<Method>select:</Method>
					<Method>uncheckedFrom:to:keysAndValuesDo:</Method>
					<Method>upTo:</Method>
					<Method>writeStream</Method>
				</Methods>
				<ClassMethods count="5">
					<Method>defaultSortAlgorithm</Method>
					<Method>encoding</Method>
					<Method>ofSize:</Method>
					<Method>writeStream</Method>
					<Method>writeStream:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.SequencedGrowableCollection" count="0" memoryUsage="0">
				<Methods count="5">
					<Method>add:</Method>
					<Method>addAll:</Method>
					<Method>addAllLast:</Method>
					<Method>remove:ifAbsent:</Method>
					<Method>removeFirstIfAbsent:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.SequencedStream" count="0" memoryUsage="0">
				<Methods count="8">
					<Method>copyFrom:to:</Method>
					<Method>flush</Method>
					<Method>isEmpty</Method>
					<Method>nextLine</Method>
					<Method>notEmpty</Method>
					<Method>peekFor:</Method>
					<Method>pop</Method>
					<Method>skip:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.SessionManager" count="0" memoryUsage="0">
				<Methods count="65">
					<Method>allowDuplicate</Method>
					<Method>applicationName</Method>
					<Method>argc</Method>
					<Method>argv</Method>
					<Method>basicPrimaryStartup</Method>
					<Method>basicSecondaryStartup</Method>
					<Method>basicShutdown</Method>
					<Method>clearSessionState</Method>
					<Method>closeConsole</Method>
					<Method>closeConsoleStreams</Method>
					<Method>comShutdown</Method>
					<Method>consoleStreamClass</Method>
					<Method>createInputState</Method>
					<Method>createSentinel</Method>
					<Method>embeddedStartup</Method>
					<Method>exit</Method>
					<Method>exit:</Method>
					<Method>fileStreamClass</Method>
					<Method>forkMain</Method>
					<Method>free</Method>
					<Method>freeConsole</Method>
					<Method>getEvents</Method>
					<Method>hasActiveServers</Method>
					<Method>imageExtension</Method>
					<Method>imageFileName</Method>
					<Method>imagePath</Method>
					<Method>imagePath:</Method>
					<Method>initialize</Method>
					<Method>inputState</Method>
					<Method>inputStateClass</Method>
					<Method>keepAlive</Method>
					<Method>logError:</Method>
					<Method>mainLoopStarted</Method>
					<Method>noVisibleWindows</Method>
					<Method>onExit</Method>
					<Method>onPostSaveImage</Method>
					<Method>onPreSaveImage</Method>
					<Method>onQuit:</Method>
					<Method>onStartup:</Method>
					<Method>onUnhandledError:</Method>
					<Method>onUnhandledNotification:</Method>
					<Method>onUnhandledWarning:</Method>
					<Method>onUserBreak</Method>
					<Method>openConsole</Method>
					<Method>openConsoleStreams</Method>
					<Method>openLibraries</Method>
					<Method>outer</Method>
					<Method>parseCmdLineFlags</Method>
					<Method>preStart</Method>
					<Method>primaryStartup</Method>
					<Method>primQuit:</Method>
					<Method>primSnapshot:backup:type:maxObjects:</Method>
					<Method>queryEndSession</Method>
					<Method>quit</Method>
					<Method>registerRunning</Method>
					<Method>saveSessionState</Method>
					<Method>secondaryStartup</Method>
					<Method>sentinelName</Method>
					<Method>shutdown</Method>
					<Method>stderr</Method>
					<Method>stdin</Method>
					<Method>stdioStreams</Method>
					<Method>stdout</Method>
					<Method>tertiaryStartup</Method>
					<Method>unregisterConsoleCtrlHandler</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>current</Method>
					<Method>imageExtension</Method>
					<Method>inputState</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Set" count="2" memoryUsage="64">
				<Methods count="27">
					<Method>-</Method>
					<Method>_deepCopy:</Method>
					<Method>_deepCopyElementsInto:trail:</Method>
					<Method>=</Method>
					<Method>add:</Method>
					<Method>addNewElement:</Method>
					<Method>at:</Method>
					<Method>at:put:</Method>
					<Method>copyElementsInto:</Method>
					<Method>do:</Method>
					<Method>findElementOrNil:</Method>
					<Method>fixCollisionsFrom:</Method>
					<Method>grow</Method>
					<Method>identityIncludes:</Method>
					<Method>includes:</Method>
					<Method>initialize</Method>
					<Method>moveFrom:to:</Method>
					<Method>postResize:</Method>
					<Method>preResize:</Method>
					<Method>privateAt:put:</Method>
					<Method>rehash</Method>
					<Method>remove:ifAbsent:</Method>
					<Method>removeIndex:</Method>
					<Method>resize:</Method>
					<Method>shrink</Method>
					<Method>size</Method>
					<Method>uncheckedAdd:</Method>
				</Methods>
				<ClassMethods count="4">
					<Method>defaultCapacity</Method>
					<Method>new</Method>
					<Method>new:</Method>
					<Method>sizeFor:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.SharedLookupTable" count="0" memoryUsage="0">
				<Methods count="19">
					<Method>allSatisfy:</Method>
					<Method>anySatisfy:</Method>
					<Method>asArray</Method>
					<Method>asByteArray</Method>
					<Method>at:ifAbsent:</Method>
					<Method>at:put:</Method>
					<Method>do:</Method>
					<Method>identityIncludes:</Method>
					<Method>includesKey:</Method>
					<Method>initialize</Method>
					<Method>keysAndValuesDo:</Method>
					<Method>lookup:</Method>
					<Method>mutex:</Method>
					<Method>postCopy</Method>
					<Method>preResize:</Method>
					<Method>printOn:</Method>
					<Method>removeKey:ifAbsent:</Method>
					<Method>resize:</Method>
					<Method>shrink</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.SharedQueue" count="2" memoryUsage="64">
				<Methods count="6">
					<Method>errorOutOfSync</Method>
					<Method>initialize:</Method>
					<Method>next</Method>
					<Method>nextNoWait</Method>
					<Method>nextPut:</Method>
					<Method>size</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>new</Method>
					<Method>new:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Signal" count="3" memoryUsage="72">
				<Methods count="16">
					<Method>,</Method>
					<Method>defaultAction:</Method>
					<Method>defaultResumption</Method>
					<Method>description</Method>
					<Method>description:</Method>
					<Method>exceptionClass</Method>
					<Method>handles:</Method>
					<Method>initialize</Method>
					<Method>isResumable</Method>
					<Method>makeResumable</Method>
					<Method>newException</Method>
					<Method>printOn:</Method>
					<Method>signal</Method>
					<Method>signal:</Method>
					<Method>signal:with:</Method>
					<Method>signalWith:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>description:</Method>
					<Method>new</Method>
					<Method>resumableDescription:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.SingletonSearchPolicy" count="0" memoryUsage="0">
				<Methods count="0">
				</Methods>
				<ClassMethods count="1">
					<Method>current</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.SmallInteger" count="0" memoryUsage="0">
				<Methods count="45">
					<Method>-</Method>
					<Method>*</Method>
					<Method>/</Method>
					<Method>//</Method>
					<Method>\\</Method>
					<Method>_deepCopy:</Method>
					<Method>|</Method>
					<Method>+</Method>
					<Method>&lt;</Method>
					<Method>&lt;&lt;</Method>
					<Method>&lt;=</Method>
					<Method>=</Method>
					<Method>&gt;</Method>
					<Method>&gt;=</Method>
					<Method>allMask:</Method>
					<Method>anyMask:</Method>
					<Method>asExternalAddress</Method>
					<Method>asFloat</Method>
					<Method>basicIdentityHash</Method>
					<Method>basicShallowCopy</Method>
					<Method>basicSize</Method>
					<Method>basicYourAddress</Method>
					<Method>bitAnd:</Method>
					<Method>bitOr:</Method>
					<Method>bitShift:</Method>
					<Method>bitXor:</Method>
					<Method>byteAt:</Method>
					<Method>byteSize</Method>
					<Method>coerce:</Method>
					<Method>decimalDigitLength</Method>
					<Method>generality</Method>
					<Method>hash</Method>
					<Method>highBit</Method>
					<Method>identityHash</Method>
					<Method>isImmediate</Method>
					<Method>isZero</Method>
					<Method>lowBit</Method>
					<Method>multiplyByInteger:</Method>
					<Method>numberOfDigitsInBase:</Method>
					<Method>printOn:base:</Method>
					<Method>printOn:base:nDigits:</Method>
					<Method>printString</Method>
					<Method>quo:</Method>
					<Method>shallowCopy</Method>
					<Method>species</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Smalltalk" count="0" memoryUsage="0">
				<Methods count="0">
				</Methods>
				<ClassMethods count="8">
					<Method>allClasses</Method>
					<Method>allClassesDo:</Method>
					<Method>allRoots</Method>
					<Method>classRemoved:</Method>
					<Method>clearCachedClasses</Method>
					<Method>getEvents</Method>
					<Method>removeClass:</Method>
					<Method>shortNameFor:in:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.SmalltalkLocale" count="1" memoryUsage="24">
				<Methods count="22">
					<Method>basicLcid</Method>
					<Method>code</Method>
					<Method>decimalPlaces</Method>
					<Method>decimalSeparator</Method>
					<Method>displayFloat:on:</Method>
					<Method>displayInteger:on:</Method>
					<Method>displayName</Method>
					<Method>displayOn:</Method>
					<Method>englishDisplayName</Method>
					<Method>hasLeadingZero</Method>
					<Method>infinity</Method>
					<Method>localizedDisplayName</Method>
					<Method>name</Method>
					<Method>nan</Method>
					<Method>negativeInfinity</Method>
					<Method>negativeNumberMode</Method>
					<Method>numberGrouping</Method>
					<Method>primary</Method>
					<Method>printFloat:on:format:</Method>
					<Method>printOn:</Method>
					<Method>tag</Method>
					<Method>thousandSeparator</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>current</Method>
					<Method>reset</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.SortAlgorithm" count="0" memoryUsage="0">
				<Methods count="2">
					<Method>heapsort:from:to:</Method>
					<Method>quicksortRecursionLimit:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.StackFrame" count="0" memoryUsage="0">
				<Methods count="36">
					<Method>=</Method>
					<Method>argAt:</Method>
					<Method>argsOffset</Method>
					<Method>argumentCount</Method>
					<Method>arguments</Method>
					<Method>asInteger</Method>
					<Method>at:</Method>
					<Method>at:put:</Method>
					<Method>basicBP</Method>
					<Method>basicBP:</Method>
					<Method>basicIP:</Method>
					<Method>basicSender</Method>
					<Method>basicSender:</Method>
					<Method>basicSP:</Method>
					<Method>bp</Method>
					<Method>bp:</Method>
					<Method>callstackDo:depth:</Method>
					<Method>displayOn:</Method>
					<Method>environment</Method>
					<Method>environment:</Method>
					<Method>frameSize</Method>
					<Method>hash</Method>
					<Method>index</Method>
					<Method>isDead</Method>
					<Method>localCount</Method>
					<Method>method</Method>
					<Method>method:</Method>
					<Method>outer</Method>
					<Method>printOn:</Method>
					<Method>printStackOn:depth:</Method>
					<Method>process</Method>
					<Method>receiver</Method>
					<Method>return:</Method>
					<Method>sender</Method>
					<Method>setProcess:index:</Method>
					<Method>sp:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>frameClassFor:at:</Method>
					<Method>onProcess:index:</Method>
					<Method>process:index:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.StackOverflow" count="0" memoryUsage="0">
				<Methods count="3">
					<Method>_descriptionArguments</Method>
					<Method>defaultAction</Method>
					<Method>hresult</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.StdioAnsiFileStream" count="0" memoryUsage="0">
				<Methods count="5">
					<Method>contentsSpecies</Method>
					<Method>getString:</Method>
					<Method>next</Method>
					<Method>nextPutAll:</Method>
					<Method>peekFor:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.StdioBinaryFileStream" count="0" memoryUsage="0">
				<Methods count="6">
					<Method>contentsSpecies</Method>
					<Method>next</Method>
					<Method>next:putAll:startingAt:</Method>
					<Method>peekFor:</Method>
					<Method>translationMode</Method>
					<Method>upToEnd</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>encodingType</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.StdioFileStream" count="0" memoryUsage="0">
				<Methods count="40">
					<Method>asParameter</Method>
					<Method>atEnd</Method>
					<Method>basicNext</Method>
					<Method>basicNext:</Method>
					<Method>basicNext:into:startingAt:</Method>
					<Method>basicNext:putAll:startingAt:</Method>
					<Method>basicNextAvailable</Method>
					<Method>basicNextAvailable:</Method>
					<Method>basicNextPut:</Method>
					<Method>basicPeek</Method>
					<Method>basicUpTo:</Method>
					<Method>bufferClass</Method>
					<Method>bufferPrototype</Method>
					<Method>close</Method>
					<Method>contents</Method>
					<Method>fileno</Method>
					<Method>fileSize</Method>
					<Method>finalize</Method>
					<Method>flagsFromMode:</Method>
					<Method>flush</Method>
					<Method>isDevice</Method>
					<Method>isReadable</Method>
					<Method>isWriteable</Method>
					<Method>locale</Method>
					<Method>locale:</Method>
					<Method>name</Method>
					<Method>nextAvailable</Method>
					<Method>nextPut:</Method>
					<Method>nextPutAll:</Method>
					<Method>open:mode:</Method>
					<Method>position</Method>
					<Method>position:</Method>
					<Method>reset</Method>
					<Method>seek:offset:</Method>
					<Method>setStream:name:flags:</Method>
					<Method>setToEnd</Method>
					<Method>size</Method>
					<Method>skip:</Method>
					<Method>translationMode</Method>
					<Method>upTo:</Method>
				</Methods>
				<ClassMethods count="8">
					<Method>classForEncoding:</Method>
					<Method>encodingClasses</Method>
					<Method>encodingType</Method>
					<Method>fromHandle:</Method>
					<Method>newForEncoding:</Method>
					<Method>on:</Method>
					<Method>on:text:</Method>
					<Method>on:type:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.StdioTextFileStream" count="0" memoryUsage="0">
				<Methods count="7">
					<Method>cr</Method>
					<Method>next</Method>
					<Method>next:putAll:startingAt:</Method>
					<Method>nextLine</Method>
					<Method>nextPut:</Method>
					<Method>peekFor:</Method>
					<Method>upToEnd</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.StdioUnicodeFileStream" count="0" memoryUsage="0">
				<Methods count="9">
					<Method>basicNextAvailable</Method>
					<Method>basicNextPut:</Method>
					<Method>basicPeek</Method>
					<Method>bufferClass</Method>
					<Method>getString:</Method>
					<Method>nextPutAll:</Method>
					<Method>open:mode:</Method>
					<Method>setStream:name:flags:</Method>
					<Method>translationMode</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>encodingType</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.StdioUtf16FileStream" count="0" memoryUsage="0">
				<Methods count="4">
					<Method>contentsSpecies</Method>
					<Method>position</Method>
					<Method>position:</Method>
					<Method>size</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.StdioUtf8FileStream" count="0" memoryUsage="0">
				<Methods count="7">
					<Method>basicNext:</Method>
					<Method>contentsSpecies</Method>
					<Method>position</Method>
					<Method>position:</Method>
					<Method>size</Method>
					<Method>translationMode</Method>
					<Method>upToEnd</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>encodingType</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Stream" count="0" memoryUsage="0">
				<Methods count="37">
					<Method>&lt;&lt;</Method>
					<Method>basicContentsSpecies</Method>
					<Method>basicNext</Method>
					<Method>basicNext:</Method>
					<Method>basicNext:into:startingAt:</Method>
					<Method>basicNext:putAll:startingAt:</Method>
					<Method>basicNextAvailable:</Method>
					<Method>basicNextPut:</Method>
					<Method>basicPrint:</Method>
					<Method>close</Method>
					<Method>cr</Method>
					<Method>crtab:</Method>
					<Method>display:</Method>
					<Method>do:</Method>
					<Method>elementSize</Method>
					<Method>encodedSizeOf:</Method>
					<Method>encoding</Method>
					<Method>errorEndOfStream</Method>
					<Method>errorNotPositionable</Method>
					<Method>errorNotReadable</Method>
					<Method>errorNotWriteable</Method>
					<Method>isReadable</Method>
					<Method>isWriteable</Method>
					<Method>next</Method>
					<Method>next:put:</Method>
					<Method>next:putAll:startingAt:</Method>
					<Method>nextAvailable</Method>
					<Method>nextPut:</Method>
					<Method>nextPutAll:</Method>
					<Method>print:</Method>
					<Method>skipTo:</Method>
					<Method>space</Method>
					<Method>tab</Method>
					<Method>tab:</Method>
					<Method>upTo:</Method>
					<Method>upToEnd</Method>
					<Method>visit:do:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>endOfStreamSignal</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.String" count="0" memoryUsage="0">
				<Methods count="63">
					<Method>,</Method>
					<Method>_indexOfAnyInString:startingAt:</Method>
					<Method>&lt;</Method>
					<Method>&lt;&lt;</Method>
					<Method>&lt;=</Method>
					<Method>&lt;==&gt;</Method>
					<Method>&lt;=&gt;</Method>
					<Method>=</Method>
					<Method>&gt;</Method>
					<Method>&gt;=</Method>
					<Method>appendToStream:</Method>
					<Method>asAnsiString</Method>
					<Method>asByteArray</Method>
					<Method>asLowercase</Method>
					<Method>asString</Method>
					<Method>asSymbol</Method>
					<Method>asUtf16String</Method>
					<Method>asUtf16StringCopy</Method>
					<Method>asUtf8String</Method>
					<Method>asUtf8StringCopy</Method>
					<Method>at:</Method>
					<Method>at:ifAbsent:</Method>
					<Method>at:put:</Method>
					<Method>beginsWith:</Method>
					<Method>between:and:</Method>
					<Method>byteAt:</Method>
					<Method>byteSize</Method>
					<Method>codePage</Method>
					<Method>compare:</Method>
					<Method>compare:ignoreCase:</Method>
					<Method>displayOn:</Method>
					<Method>displayString</Method>
					<Method>equalsIgnoreCase:</Method>
					<Method>expandMacrosIn:</Method>
					<Method>expandMacrosWith:</Method>
					<Method>expandMacrosWith:with:</Method>
					<Method>expandMacrosWithArguments:</Method>
					<Method>expandMacrosWithArguments:locale:</Method>
					<Method>expandMacrosWithArguments:on:</Method>
					<Method>findString:startingAt:</Method>
					<Method>formatWithArguments:</Method>
					<Method>hash</Method>
					<Method>hashIgnoreCase</Method>
					<Method>indexOfAnyOf:startingAt:</Method>
					<Method>isLiteral</Method>
					<Method>isString</Method>
					<Method>join:</Method>
					<Method>lines</Method>
					<Method>lookup:</Method>
					<Method>max:</Method>
					<Method>min:</Method>
					<Method>nextIdentityIndexOf:from:to:</Method>
					<Method>nextIndexOf:from:to:</Method>
					<Method>occurrencesOf:from:to:</Method>
					<Method>printOn:</Method>
					<Method>replaceBytesOf:from:to:startingAt:</Method>
					<Method>replaceFrom:to:with:startingAt:</Method>
					<Method>species</Method>
					<Method>split:</Method>
					<Method>strcspn:start:</Method>
					<Method>strlen</Method>
					<Method>trimBlanks</Method>
					<Method>trimNulls</Method>
				</Methods>
				<ClassMethods count="21">
					<Method>basicEncoding</Method>
					<Method>codePage</Method>
					<Method>coerceString:</Method>
					<Method>cr</Method>
					<Method>elementSize</Method>
					<Method>empty</Method>
					<Method>encoding</Method>
					<Method>encodingName:</Method>
					<Method>errorInvalidCodePoint:</Method>
					<Method>fromAddress:</Method>
					<Method>fromAddress:length:</Method>
					<Method>fromByteArray:</Method>
					<Method>fromByteArray:length:startingAt:</Method>
					<Method>lineDelimiter</Method>
					<Method>new:</Method>
					<Method>newFixed:</Method>
					<Method>smalltalkWriteStream</Method>
					<Method>smalltalkWriteStream:</Method>
					<Method>tab</Method>
					<Method>with:</Method>
					<Method>withAll:</Method>
				</ClassMethods>
			</Class>
			<Class name="External.Structure" count="0" memoryUsage="0">
				<Methods count="34">
					<Method>_deepenShallowCopy:trail:</Method>
					<Method>=</Method>
					<Method>asByteArray</Method>
					<Method>asParameter</Method>
					<Method>basicFree</Method>
					<Method>beNullPointer</Method>
					<Method>bufferClass</Method>
					<Method>bytes</Method>
					<Method>byteSize</Method>
					<Method>comparisonSize</Method>
					<Method>copy</Method>
					<Method>copy:from:to:</Method>
					<Method>copyBytes:</Method>
					<Method>copyFrom:to:</Method>
					<Method>free</Method>
					<Method>hash</Method>
					<Method>hresultError:</Method>
					<Method>initialize</Method>
					<Method>initialize:</Method>
					<Method>initializeAtAddress:</Method>
					<Method>initializePointer</Method>
					<Method>invalidArgErrorClass</Method>
					<Method>invalidCall:</Method>
					<Method>isNull</Method>
					<Method>maxPrint</Method>
					<Method>needsFree</Method>
					<Method>notNull</Method>
					<Method>pointerClass</Method>
					<Method>printString</Method>
					<Method>replaceBytesOf:from:to:startingAt:</Method>
					<Method>replaceFrom:to:with:startingAt:</Method>
					<Method>size</Method>
					<Method>value:</Method>
					<Method>yourAddress</Method>
				</Methods>
				<ClassMethods count="14">
					<Method>atAddress:</Method>
					<Method>basicByteSize</Method>
					<Method>byteSize</Method>
					<Method>clear:</Method>
					<Method>descriptorClass</Method>
					<Method>elementSize</Method>
					<Method>ensureDefined</Method>
					<Method>fromAddress:</Method>
					<Method>fromBytes:</Method>
					<Method>new</Method>
					<Method>new:</Method>
					<Method>newBuffer</Method>
					<Method>newPointer</Method>
					<Method>pointerClass</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Symbol" count="1910" memoryUsage="66864">
				<Methods count="13">
					<Method>argumentCount</Method>
					<Method>asString</Method>
					<Method>asSymbol</Method>
					<Method>copyEmpty:</Method>
					<Method>copyFrom:to:</Method>
					<Method>copyingClass</Method>
					<Method>displayString</Method>
					<Method>forwardTo:</Method>
					<Method>keywords</Method>
					<Method>numArgs</Method>
					<Method>printOn:</Method>
					<Method>shallowCopy</Method>
					<Method>species</Method>
				</Methods>
				<ClassMethods count="11">
					<Method>addUnique:</Method>
					<Method>coerceString:</Method>
					<Method>findInterned:</Method>
					<Method>fromAddress:length:</Method>
					<Method>intern:</Method>
					<Method>intern:cookie:</Method>
					<Method>internCharacter:</Method>
					<Method>isLiteralSymbol:</Method>
					<Method>resizeTable:</Method>
					<Method>with:</Method>
					<Method>withAll:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.True" count="1" memoryUsage="16">
				<Methods count="9">
					<Method>and:</Method>
					<Method>asParameter</Method>
					<Method>ifFalse:</Method>
					<Method>ifFalse:ifTrue:</Method>
					<Method>ifTrue:</Method>
					<Method>ifTrue:ifFalse:</Method>
					<Method>not</Method>
					<Method>or:</Method>
					<Method>printOn:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="External.UIntPtrBytes" count="0" memoryUsage="0">
				<Methods count="3">
					<Method>asInteger</Method>
					<Method>asSignedInteger</Method>
					<Method>value:</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>elementSize</Method>
					<Method>valueAtAddress:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.UndeclaredVariable" count="1" memoryUsage="16">
				<Methods count="2">
					<Method>isPrivate</Method>
					<Method>targetVariable</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.UndefinedObject" count="1" memoryUsage="16">
				<Methods count="20">
					<Method>??</Method>
					<Method>_deepCopy:</Method>
					<Method>bindingFor:</Method>
					<Method>displayOn:</Method>
					<Method>fullName</Method>
					<Method>ifNil:</Method>
					<Method>ifNil:ifNotNil:</Method>
					<Method>ifNotNil:</Method>
					<Method>includesEnvironment:</Method>
					<Method>isLiteral</Method>
					<Method>isNil</Method>
					<Method>isNull</Method>
					<Method>localBindingFor:</Method>
					<Method>name</Method>
					<Method>notNil</Method>
					<Method>notNull</Method>
					<Method>printOn:</Method>
					<Method>printString</Method>
					<Method>shallowCopy</Method>
					<Method>yourAddress</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>new</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.UserLibrary" count="1" memoryUsage="24">
				<Methods count="13">
					<Method>charLower:</Method>
					<Method>dispatchMessage:</Method>
					<Method>getDesktopWindow</Method>
					<Method>getMessage:hWnd:wMsgFilterMin:wMsgFilterMax:</Method>
					<Method>getParent:</Method>
					<Method>getQueueStatus:</Method>
					<Method>isWindow:</Method>
					<Method>isWindowVisible:</Method>
					<Method>messageBox:lpText:lpCaption:uType:</Method>
					<Method>msgWaitForMultipleObjectsEx:pHandles:dwMilliseconds:dwWakeMask:dwFlags:</Method>
					<Method>peekMessage:hWnd:uMsgFilterMin:uMsgFilterMax:wRemoveMsg:</Method>
					<Method>postQuitMessage:</Method>
					<Method>translateMessage:</Method>
				</Methods>
				<ClassMethods count="3">
					<Method>clear</Method>
					<Method>fileName</Method>
					<Method>sharedVariableName</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Utf16String" count="7" memoryUsage="408">
				<Methods count="23">
					<Method>_beginsString:</Method>
					<Method>asByteString:</Method>
					<Method>asUtf16String</Method>
					<Method>asUtf16StringCopy</Method>
					<Method>at:</Method>
					<Method>byteSize</Method>
					<Method>countElements</Method>
					<Method>decodeAt:</Method>
					<Method>decodeNextFrom:</Method>
					<Method>encodedAt:put:</Method>
					<Method>encodedSizeAt:</Method>
					<Method>encodedSizeOf:</Method>
					<Method>encodeOn:put:</Method>
					<Method>findString:startingAt:</Method>
					<Method>isLeadCodeUnit:</Method>
					<Method>maxEncoding</Method>
					<Method>nextIndexOfCharacter:from:to:</Method>
					<Method>replaceFrom:to:with:startingAt:</Method>
					<Method>resize:</Method>
					<Method>strcspn:start:</Method>
					<Method>strlen</Method>
					<Method>wordAtOffset:</Method>
					<Method>wordAtOffset:put:</Method>
				</Methods>
				<ClassMethods count="6">
					<Method>codePage</Method>
					<Method>coerceString:</Method>
					<Method>elementSize</Method>
					<Method>fromAddress:</Method>
					<Method>fromAddress:length:</Method>
					<Method>with:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Utf8String" count="799" memoryUsage="553144">
				<Methods count="13">
					<Method>_beginsString:</Method>
					<Method>asUtf8String</Method>
					<Method>asUtf8StringCopy</Method>
					<Method>countElements</Method>
					<Method>decodeAt:</Method>
					<Method>decodeNextFrom:</Method>
					<Method>encodedAt:put:</Method>
					<Method>encodedSizeAt:</Method>
					<Method>encodedSizeOf:</Method>
					<Method>encodeOn:put:</Method>
					<Method>isLeadCodeUnit:</Method>
					<Method>maxEncoding</Method>
					<Method>nextIndexOfCharacter:from:to:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>codePage</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.UtfEncodedString" count="0" memoryUsage="0">
				<Methods count="20">
					<Method>allSatisfy:</Method>
					<Method>anySatisfy:</Method>
					<Method>asArray</Method>
					<Method>codePointsDo:</Method>
					<Method>collect:</Method>
					<Method>copyWith:</Method>
					<Method>copyWithoutIndex:</Method>
					<Method>decodeFrom:upTo:</Method>
					<Method>do:</Method>
					<Method>do:separatedBy:</Method>
					<Method>encodeOn:next:putAll:startingAt:</Method>
					<Method>errorIntraCharacterIndex:</Method>
					<Method>first</Method>
					<Method>growSize</Method>
					<Method>indexOfLast:</Method>
					<Method>inject:into:</Method>
					<Method>keysAndValuesDo:</Method>
					<Method>last</Method>
					<Method>select:</Method>
					<Method>uncheckedFrom:to:keysAndValuesDo:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>new:withAll:</Method>
				</ClassMethods>
			</Class>
			<Class name="Kernel.VariableBinding" count="463" memoryUsage="14816">
				<Methods count="13">
					<Method>=</Method>
					<Method>displayOn:</Method>
					<Method>displayString</Method>
					<Method>environment</Method>
					<Method>environment:</Method>
					<Method>flags</Method>
					<Method>fullName</Method>
					<Method>isClassBinding</Method>
					<Method>isClassVariable</Method>
					<Method>isPrivate</Method>
					<Method>key:value:</Method>
					<Method>targetVariable</Method>
					<Method>unqualifiedName</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Kernel.VMLibrary" count="1" memoryUsage="40">
				<Methods count="18">
					<Method>addressFromInteger:</Method>
					<Method>argc</Method>
					<Method>argv</Method>
					<Method>crtHandle</Method>
					<Method>dump:path:stackDepth:walkbackDepth:</Method>
					<Method>handleFromInteger:</Method>
					<Method>hashBytes:count:</Method>
					<Method>isUserBreakRequested</Method>
					<Method>kernelHandle</Method>
					<Method>onStartup</Method>
					<Method>registry</Method>
					<Method>registryAt:</Method>
					<Method>registryAt:put:</Method>
					<Method>registryAtIndex:put:</Method>
					<Method>stderr</Method>
					<Method>stdin</Method>
					<Method>stdout</Method>
					<Method>utf16StringFromAddress:</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>open</Method>
					<Method>sharedVariableName</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.Warning" count="0" memoryUsage="0">
				<Methods count="1">
					<Method>defaultAction</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.WeakArray" count="90" memoryUsage="9320">
				<Methods count="7">
					<Method>add:</Method>
					<Method>addAnsweringIndex:</Method>
					<Method>copyingClass</Method>
					<Method>initialize</Method>
					<Method>nilCorpsesAndDo:</Method>
					<Method>remove:ifAbsent:</Method>
					<Method>species</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>new:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.WeakIdentityDictionary" count="1" memoryUsage="40">
				<Methods count="3">
					<Method>copyingClass</Method>
					<Method>findKeyOrNil:</Method>
					<Method>species</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>new:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.WeakLookupTable" count="0" memoryUsage="0">
				<Methods count="11">
					<Method>copyEmpty:</Method>
					<Method>copyingClass</Method>
					<Method>do:</Method>
					<Method>elementsExpired:</Method>
					<Method>elementsExpired:of:</Method>
					<Method>fixCollisionsIgnoringCorpsesFrom:</Method>
					<Method>haveWeakKeys</Method>
					<Method>initialize</Method>
					<Method>keysAndValuesDo:</Method>
					<Method>postResize:</Method>
					<Method>valuesClass</Method>
				</Methods>
				<ClassMethods count="2">
					<Method>new:</Method>
					<Method>newWithWeakValues:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.Win32Error" count="0" memoryUsage="0">
				<Methods count="3">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>initialize</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>signal:with:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.Win32Fault" count="0" memoryUsage="0">
				<Methods count="9">
					<Method>_descriptionArguments</Method>
					<Method>_descriptionFormat</Method>
					<Method>exceptionAddress</Method>
					<Method>exceptionCode</Method>
					<Method>exceptionName</Method>
					<Method>exceptionRecord:</Method>
					<Method>initialize</Method>
					<Method>moduleFileName</Method>
					<Method>tagFromExceptionCode:</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>signal:with:</Method>
				</ClassMethods>
			</Class>
			<Class name="OS.Win32Structure" count="0" memoryUsage="0">
				<Methods count="2">
					<Method>dwSize:</Method>
					<Method>initialize:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="OS.WindowsLocale" count="1" memoryUsage="32">
				<Methods count="3">
					<Method>=</Method>
					<Method>basicLcid</Method>
					<Method>lcid:</Method>
				</Methods>
				<ClassMethods count="0">
				</ClassMethods>
			</Class>
			<Class name="Core.WriteStream" count="1" memoryUsage="40">
				<Methods count="18">
					<Method>basicNext:putAll:startingAt:</Method>
					<Method>basicNextPut:</Method>
					<Method>contents</Method>
					<Method>grabContents</Method>
					<Method>growCollection</Method>
					<Method>initialize</Method>
					<Method>isWriteable</Method>
					<Method>moveToEnd</Method>
					<Method>next:putAll:startingAt:</Method>
					<Method>nextPut:</Method>
					<Method>nextPutAll:</Method>
					<Method>on:</Method>
					<Method>position:</Method>
					<Method>primitiveBasicNextPut:</Method>
					<Method>primitiveNextPut:</Method>
					<Method>primitiveNextPutAll:</Method>
					<Method>reset</Method>
					<Method>setToEnd</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>with:</Method>
				</ClassMethods>
			</Class>
			<Class name="Core.ZeroDivide" count="0" memoryUsage="0">
				<Methods count="3">
					<Method>_descriptionFormat</Method>
					<Method>dividend</Method>
					<Method>isResumable</Method>
				</Methods>
				<ClassMethods count="1">
					<Method>dividend:</Method>
				</ClassMethods>
			</Class>
		</Classes>
		<TotalInstances>9937</TotalInstances>
		<TotalMemory>997600</TotalMemory>
		<TotalMethods>2496</TotalMethods>
		<TotalClassMethods>363</TotalClassMethods>
		<RemainingSharedVariables>
			<VariableBinding>VM</VariableBinding>
			<VariableBinding>FloatE</VariableBinding>
			<VariableBinding>FloatD</VariableBinding>
			<VariableBinding>Transcript</VariableBinding>
			<VariableBinding>Processor</VariableBinding>
			<VariableBinding>FloatQ</VariableBinding>
			<VariableBinding>Ucrt</VariableBinding>
			<VariableBinding>AdvApi32</VariableBinding>
			<VariableBinding>Kernel32</VariableBinding>
			<VariableBinding>User32</VariableBinding>
			<VariableBinding>NtDll</VariableBinding>
		</RemainingSharedVariables>
	</Manifest>
</Lagoon>